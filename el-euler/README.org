* Project Euler using Emacs Lisp
Projec Euler is a set of recreational mathematical puzzles.

These are my personal notes about using Emacs Lisp to solve Project Euler problems.

The questions are all copyright Project Euler. 

The answers document my solutions using Emacs Lisp.


Elisp is so far fairly good at this, because Elisp is expressive
enough for the algorithms to be pretty concise.  Elisp is slow
enough to make it obvious if an algorithm wasnt very clever.  Since
emacs-calc has bignum support I suspect that some of the solutions are
a bit too easy, OTOH theres a lot of problems so I dont worry about
that.

Emacs Org-mode makes it easy to keep notes and code mixed.  Emacs and
Lisp in general makes it faster to get to the actual problem solving
rather than messing about with preparations. Often I just convert the
PE input data to Lisp structures with Emacs, and keep them in the org
file, rather than wasting time writing I/O code. 

Overall, Emacs is a pretty efficient PE solving plattform so far.

** PE notes
You can register here:
http://projecteuler.net/register

A link to an individual problem looks like:
http://projecteuler.net/problem=26 

Progress: http://projecteuler.net/progress 

To select an "easy" problem, use http://projecteuler.net/problems, and
sort by "solved by". This is good for morale!

Solving problems in order to receive awards is also good for morale,
so my list of problems is tagged with awards as well.

** Awards
*** Fibonacci Fever: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233         :FF:
*** Trinary Triumph: 1, 3, 9, 27, 81, 243                                :TT:
*** Unlucky Squares: 1, 4, 9, 16, 25, 36, 49, 64, 81, 100, 121, 144, 169 :US:
*** Daring Dozen: 12 3-digit problems                                    :DD:
*** easy as pi: 3, 14, 15, 92, 65, 35, 89, 79, 32, 38, 46                :PI:
*** triangle trophy: 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, 66, 78, 91, 105, 120, 136, 153, 171, 190, 210, 231, 253, 276, 300, 325 :TR:
** DONE 1: Multiples of 3 and 5                                    :FF:TT:US:
   CLOSED: [2013-07-23 Tue 16:20]
If we list all the natural numbers below 10 that are multiples of 3 or
5, we get 3, 5, 6 and 9. The sum of these multiples is 23.

Find the sum of all the multiples of 3 or 5 below 1000.
*** A:
brute force: check all natural numbers between 1 ... 1000. if divisable by 3 or 5, add to sum.
better: 2 loops, one step 3 one step 5. dont add 3s that are also divisable by 5, and vice versa.

#+begin_src elisp
(let ((sum 0)) (cl-loop for x from 1 to 999 do (if (or (= 0(mod x 5 )) (= 0(mod x 3 ))) (setq sum (+ x sum)))) sum)
#+end_src
233168

** DONE 2: Even Fibonacci numbers                                        :FF:
   CLOSED: [2013-07-23 Tue 22:40]
Each new term in the Fibonacci sequence is generated by adding the
previous two terms. By starting with 1 and 2, the first 10 terms will
be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not
exceed four million, find the sum of the even-valued terms.

*** A:
last 2 fibbonacci of the 7 first:

#+begin_src elisp
    ;;fibonaccio
    
    (let ((a 1)(b 2) (c 0)) (cl-loop for x from 1 to 7 do  (setq c (+ a b) a b b c)   ) (list a b c))
    
    (let ((a 1)
          (b 2)
          (c 0)
          (sum 0))
      (cl-loop for x from 1 to 100000 until (< 4000000 b) do
               (setq c (+ a b) a b b c)
               (if (= 0 (mod a 2)) (setq sum (+ sum a)) ))
      (list a b c sum))
(3524578 5702887 5702887 4613732)
#+end_src

** DONE 3: Largest prime factor                                    :PI:FF:TT:
   CLOSED: [2013-07-24 Wed 13:41]
The prime factors of 13195 are 5, 7, 13 and 29.

What is the largest prime factor of the number A= 600851475143 ?
*** A:
http://en.wikipedia.org/wiki/Prime_factor
brute: search backwards from sqrt(A)(?), until prime. 
check if prime is factor of A. done, else continue search.
this will be O(n2), therefore slow.

https://en.wikipedia.org/wiki/Trial_division
describes some optimizations
#+begin_src elisp
      ;;this naive implementation is much faster that i thought it'd be
      (defun primep (p)
        ;;1 is not a prime, so thats not handled atm
        ;;(primep 1)
        ;;(primep -2)      
        ;; (primep 2)
        ;; (primep 3)
        ;;(primep 4)
        ;; (primep 5)
        ;;(primep 6)        
        ;; (primep 7) 11 13 17
        (cond
         ((<  p 2) nil)
         (t
          (cl-loop for x from 2 to (sqrt p)
                   for no-remainder = (= 0 (% p x ))
                   until no-remainder
                   finally return (if (= 1 p) nil  (not no-remainder))))))
    
    ;; this seems to be correct for 13195, but is too slow
    (let ((A 600851475143 ))
      (cl-loop for x from
               ;;(1-  A)
               ;;(truncate (1+ (sqrt A)))
               (truncate (/ A 2))
               downto 1
               until (and  (= 0 (% A x)) (primep x))
               finally return x
               
               ))
    
  ;;lets not try every integer, instead try A/2, A/3 etc
  ;; this is faster, but still a bit slow
    (let ((A 600851475143
  
             ))
      (cl-loop for x from
               2 to
               (truncate (/ A 2))
               until (and  (= 0 (% A x)) (primep (/ A  x)))
               finally return (/ A  x)
               
               ))
  6857
    
#+end_src

** DONE 4: Largest palindrome product                                    :US:
   CLOSED: [2013-07-25 Thu 00:12]
A palindromic number reads the same both ways. The largest palindrome
made from the product of two 2-digit numbers is 9009 = 91 × 99.

Find the largest palindrome made from the product of two 3-digit
numbers.
*** A:
999 x 999 = 998001 
100 x 100 =  10000
999 x 100 =  99900
 
but how do i know its palindromic efficiently?
http://en.wikipedia.org/wiki/Palindromic_number

#+begin_src elisp
    (apply (lambda (x pos)(/ (% x (expt 10 pos)) (expt 10 (1- pos)))) '(12345 5))
    1
    
  (defun digit  (x pos)
    (/
     (% x
        (expt 10 pos))
     (expt 10
           (1- pos))))
    
  (defun palindrom-numberp  (x)
    (if (> x 99999)
        (and
         (=
          (digit x 1)
          (digit x 6))
         (=
          (digit x 2)
          (digit x 5))
         (=
          (digit x 3)
          (digit x 4)))
      (and
         (=
          (digit x 1)
          (digit x 5))
         (=
          (digit x 2)
          (digit x 3)))))
    
  
  ;;returns a palindrome, but the factorization isnt known. rats.
  (cl-loop for x from 99801 downto 10000
           until (palindrom-numberp x)
           finally return x)
  99799
  
  ;;naive try
  (defun palindrome-find ()
    (let ((p))
      (cl-loop for x from 999 downto 100 
               until (setq p (cl-loop 
                              for y from x downto 100
                              for z = (palindrom-numberp (* x y) )
                              until z
                              finally return
                              (if z
                                  (list (* x y) x y))))
               finally return p)))
  (palindrome-find)
  (888888 924 962)
  (580085 995 583)
  (698896 836 836)
  
  its supposed to be
  (906609 913 993)
  
  (defun palindrome-find ()
    (let ((p))
      (cl-loop for x from 999 downto 100 do
               (cl-loop 
                for y from x downto 100
                for z = (palindrom-numberp (* x y) ) do
                (if z
                    (push  (list (* x y) x y) p)))
               )
      p)
    )
  (setq pals (palindrome-find))
  
  (sort pals (lambda (a b) (> (car a) (car b))))
  
  ;;1st element is (906609 913 993)! so it works, but im not sure why my initial optimization failed
  ;;this one is pretty fast though
  
#+end_src

** DONE 5: Smallest multiple                                             :FF:
   CLOSED: [2013-07-26 Fri 00:15]

2520 is the smallest number that can be divided by each of the numbers from 1 to 10 without any remainder.

What is the smallest positive number that is evenly divisible by all of the numbers from 1 to 20?
*** A

#+begin_src elisp
  (defun check-20 (x)
    (cl-loop for y from 1 to 20
             for z = (= 0 (% x y))
             until (not z)
             finally return z))
  
  ;;naive, but okay
  (cl-loop for x from 20 to 2327925600 by 20
           until (check-20 x)
           finally return x
           )
  232792560
#+end_src

** DONE 6: Sum square difference
   CLOSED: [2013-07-29 Mon 23:50]
The sum of the squares of the first ten natural numbers is,

1^2 + 2^2 + ... + 10^2 = 385
The square of the sum of the first ten natural numbers is,

(1 + 2 + ... + 10)^2 = 552 = 3025
Hence the difference between the sum of the squares of the first ten natural numbers and the square of the sum is 3025 − 385 = 2640.

Find the difference between the sum of the squares of the first one hundred natural numbers and the square of the sum.
*** A
#+begin_src elisp
  (-  (expt (cl-loop for x from 1 to 100
                     sum x) 2)
      (cl-loop for x from 1 to 100
               sum (* x x)))
  25164150
#+end_src
** DONE 7: 10001st prime
   CLOSED: [2013-07-27 Sat 17:30]
By listing the first six prime numbers: 2, 3, 5, 7, 11, and 13, we can see that the 6th prime is 13.

What is the 10 001st prime number?
*** A

#+begin_src elisp
  ;; theres some offby 1 issues that i dont like, but this works and is unexpectedly fast
  (let ((primes 1)) (cl-loop for x from 2 to 200000
                             until (= primes 10001)
                             do (if (primep x ) (setq primes (1+ primes)))
                             finally return (list primes (1- x))))
#+end_src

** DONE 8: Largest product in a series                                   :FF:
   CLOSED: [2013-07-27 Sat 17:44]
Find the greatest product of five consecutive digits in the 1000-digit number.

73167176531330624919225119674426574742355349194934
96983520312774506326239578318016984801869478851843
85861560789112949495459501737958331952853208805511
12540698747158523863050715693290963295227443043557
66896648950445244523161731856403098711121722383113
62229893423380308135336276614282806444486645238749
30358907296290491560440772390713810515859307960866
70172427121883998797908792274921901699720888093776
65727333001053367881220235421809751254540594752243
52584907711670556013604839586446706324415722155397
53697817977846174064955149290862569321978468622482
83972241375657056057490261407972968652414535100474
82166370484403199890008895243450658541227588666881
16427171479924442928230863465674813919123162824586
17866458359124566529476545682848912883142607690042
24219022671055626321111109370544217506941658960408
07198403850962455444362981230987879927244284909188
84580156166097919133875499200524063689912560717606
05886116467109405077541002256983155200055935729725
71636269561882670428252483600823257530420752963450

*** A

#+begin_src elisp
  
  (setq 1000-digits
  '(
   7 3 1 6 7 1 7 6 5 3 1 3 3 0 6 2 4 9 1 9 2 2 5 1 1 9 6 7 4 4 2 6 5 7 4 7 4 2 3 5 5 3 4 9 1 9 4 9 3 4 
   9 6 9 8 3 5 2 0 3 1 2 7 7 4 5 0 6 3 2 6 2 3 9 5 7 8 3 1 8 0 1 6 9 8 4 8 0 1 8 6 9 4 7 8 8 5 1 8 4 3 
   8 5 8 6 1 5 6 0 7 8 9 1 1 2 9 4 9 4 9 5 4 5 9 5 0 1 7 3 7 9 5 8 3 3 1 9 5 2 8 5 3 2 0 8 8 0 5 5 1 1 
   1 2 5 4 0 6 9 8 7 4 7 1 5 8 5 2 3 8 6 3 0 5 0 7 1 5 6 9 3 2 9 0 9 6 3 2 9 5 2 2 7 4 4 3 0 4 3 5 5 7 
   6 6 8 9 6 6 4 8 9 5 0 4 4 5 2 4 4 5 2 3 1 6 1 7 3 1 8 5 6 4 0 3 0 9 8 7 1 1 1 2 1 7 2 2 3 8 3 1 1 3 
   6 2 2 2 9 8 9 3 4 2 3 3 8 0 3 0 8 1 3 5 3 3 6 2 7 6 6 1 4 2 8 2 8 0 6 4 4 4 4 8 6 6 4 5 2 3 8 7 4 9 
   3 0 3 5 8 9 0 7 2 9 6 2 9 0 4 9 1 5 6 0 4 4 0 7 7 2 3 9 0 7 1 3 8 1 0 5 1 5 8 5 9 3 0 7 9 6 0 8 6 6 
   7 0 1 7 2 4 2 7 1 2 1 8 8 3 9 9 8 7 9 7 9 0 8 7 9 2 2 7 4 9 2 1 9 0 1 6 9 9 7 2 0 8 8 8 0 9 3 7 7 6 
   6 5 7 2 7 3 3 3 0 0 1 0 5 3 3 6 7 8 8 1 2 2 0 2 3 5 4 2 1 8 0 9 7 5 1 2 5 4 5 4 0 5 9 4 7 5 2 2 4 3 
   5 2 5 8 4 9 0 7 7 1 1 6 7 0 5 5 6 0 1 3 6 0 4 8 3 9 5 8 6 4 4 6 7 0 6 3 2 4 4 1 5 7 2 2 1 5 5 3 9 7 
   5 3 6 9 7 8 1 7 9 7 7 8 4 6 1 7 4 0 6 4 9 5 5 1 4 9 2 9 0 8 6 2 5 6 9 3 2 1 9 7 8 4 6 8 6 2 2 4 8 2 
   8 3 9 7 2 2 4 1 3 7 5 6 5 7 0 5 6 0 5 7 4 9 0 2 6 1 4 0 7 9 7 2 9 6 8 6 5 2 4 1 4 5 3 5 1 0 0 4 7 4 
   8 2 1 6 6 3 7 0 4 8 4 4 0 3 1 9 9 8 9 0 0 0 8 8 9 5 2 4 3 4 5 0 6 5 8 5 4 1 2 2 7 5 8 8 6 6 6 8 8 1 
   1 6 4 2 7 1 7 1 4 7 9 9 2 4 4 4 2 9 2 8 2 3 0 8 6 3 4 6 5 6 7 4 8 1 3 9 1 9 1 2 3 1 6 2 8 2 4 5 8 6 
   1 7 8 6 6 4 5 8 3 5 9 1 2 4 5 6 6 5 2 9 4 7 6 5 4 5 6 8 2 8 4 8 9 1 2 8 8 3 1 4 2 6 0 7 6 9 0 0 4 2 
   2 4 2 1 9 0 2 2 6 7 1 0 5 5 6 2 6 3 2 1 1 1 1 1 0 9 3 7 0 5 4 4 2 1 7 5 0 6 9 4 1 6 5 8 9 6 0 4 0 8 
   0 7 1 9 8 4 0 3 8 5 0 9 6 2 4 5 5 4 4 4 3 6 2 9 8 1 2 3 0 9 8 7 8 7 9 9 2 7 2 4 4 2 8 4 9 0 9 1 8 8 
   8 4 5 8 0 1 5 6 1 6 6 0 9 7 9 1 9 1 3 3 8 7 5 4 9 9 2 0 0 5 2 4 0 6 3 6 8 9 9 1 2 5 6 0 7 1 7 6 0 6 
   0 5 8 8 6 1 1 6 4 6 7 1 0 9 4 0 5 0 7 7 5 4 1 0 0 2 2 5 6 9 8 3 1 5 5 2 0 0 0 5 5 9 3 5 7 2 9 7 2 5 
   7 1 6 3 6 2 6 9 5 6 1 8 8 2 6 7 0 4 2 8 2 5 2 4 8 3 6 0 0 8 2 3 2 5 7 5 3 0 4 2 0 7 5 2 9 6 3 4 5 0 
  ))
  
  (defun 5-mult (digits index)
    (* (nth index digits)
       (nth (+ index 1)  digits)
       (nth (+ index 2)  digits)
       (nth (+ index 3)  digits)
       (nth (+ index 4)  digits)))
  
  (cl-loop for i from 0 to 995
           maximize (5-mult 1000-digits i))
#+end_src

** DONE 9: Special Pythagorean triplet                                :US:TT:
   CLOSED: [2013-07-29 Mon 23:50]
A Pythagorean triplet is a set of three natural numbers, a < b < c, for which,

a^2 + b^2 = c^2
For example, 3^2 + 4^2 = 9 + 16 = 25 = 5^2.

There exists exactly one Pythagorean triplet for which a + b + c = 1000.
Find the product abc.

*** A
http://en.wikipedia.org/wiki/Pythagorean_triple

Euclid's formula
a=m^2-n^2
b=2mn
c=m^2+n^2

a+b+c = m^2 - n^2 + 2mn + m^2 + n^2 = 1000
a+b+c = 2m^2 + 2mn = 1000
a+b+c = 2m(m + n) = 1000

abc = (m^2-n^2)2mn(m^2+n^2) = (m+n)(m-n)2mn = 1000n(m-n)

but its not obviously better than:
a+b+c=1000
c=1000-b-c
loop a b, terminate on a^2+b^2=c^2
to minimize looping, use a<b<c

#+begin_src elisp
  (let ((sum 1000))
    (cl-loop
     for a from 1 to (/ sum 3)
     for abc =
     (cl-loop for b from a to (/ sum 2)
              for c = (- sum a b)
              for pythagorean = (= (+  (expt a 2) (expt b 2))   (expt c 2))
              until pythagorean
              finally return
              (if pythagorean (list a b c (+  (expt a 2) (expt b 2)) (expt c 2)  (* a b c) ))
              )
     until abc
     finally return abc))
  
  ;;31875000
#+end_src
I'm not pleased with this solution, it should be possible to search with one variable.

** DONE 10: Summation of primes
   CLOSED: [2013-07-28 Sun 01:41]
The sum of the primes below 10 is 2 + 3 + 5 + 7 = 17.

Find the sum of all the primes below two million.
*** A
#+begin_src elisp
  
    (let ((primesum 1)) 
      (cl-loop for x from 2 to 20000000
               for isprime = (primep x)
               until (and isprime (> x  2000000))
               do (if isprime (setq primesum (+ primesum x)))
               finally return (list primesum x)))
  (142913828921 2000003)
#+end_src
** DONE 11: Largest product in a grid
   CLOSED: [2013-08-01 Thu 02:44]
In the 20×20 grid below, four numbers along a diagonal line have been marked in red.

08 02 22 97 38 15 00 40 00 75 04 05 07 78 52 12 50 77 91 08
49 49 99 40 17 81 18 57 60 87 17 40 98 43 69 48 04 56 62 00
81 49 31 73 55 79 14 29 93 71 40 67 53 88 30 03 49 13 36 65
52 70 95 23 04 60 11 42 69 24 68 56 01 32 56 71 37 02 36 91
22 31 16 71 51 67 63 89 41 92 36 54 22 40 40 28 66 33 13 80
24 47 32 60 99 03 45 02 44 75 33 53 78 36 84 20 35 17 12 50
32 98 81 28 64 23 67 10 26 38 40 67 59 54 70 66 18 38 64 70
67 26 20 68 02 62 12 20 95 63 94 39 63 08 40 91 66 49 94 21
24 55 58 05 66 73 99 26 97 17 78 78 96 83 14 88 34 89 63 72
21 36 23 09 75 00 76 44 20 45 35 14 00 61 33 97 34 31 33 95
78 17 53 28 22 75 31 67 15 94 03 80 04 62 16 14 09 53 56 92
16 39 05 42 96 35 31 47 55 58 88 24 00 17 54 24 36 29 85 57
86 56 00 48 35 71 89 07 05 44 44 37 44 60 21 58 51 54 17 58
19 80 81 68 05 94 47 69 28 73 92 13 86 52 17 77 04 89 55 40
04 52 08 83 97 35 99 16 07 97 57 32 16 26 26 79 33 27 98 66
88 36 68 87 57 62 20 72 03 46 33 67 46 55 12 32 63 93 53 69
04 42 16 73 38 25 39 11 24 94 72 18 08 46 29 32 40 62 76 36
20 69 36 41 72 30 23 88 34 62 99 69 82 67 59 85 74 04 36 16
20 73 35 29 78 31 90 01 74 31 49 71 48 86 81 16 23 57 05 54
01 70 54 71 83 51 54 69 16 92 33 48 61 43 52 01 89 19 67 48

The product of these numbers is 26 × 63 × 78 × 14 = 1788696.

What is the greatest product of four adjacent numbers in the same direction (up, down, left, right, or diagonally) in the 20×20 grid?
#+begin_src elisp
    
    (setq pe-11-grid 
          '(
               (08 02 22 97 38 15 00 40 00 75 04 05 07 78 52 12 50 77 91 08)
               (49 49 99 40 17 81 18 57 60 87 17 40 98 43 69 48 04 56 62 00)
               (81 49 31 73 55 79 14 29 93 71 40 67 53 88 30 03 49 13 36 65)
               (52 70 95 23 04 60 11 42 69 24 68 56 01 32 56 71 37 02 36 91)
               (22 31 16 71 51 67 63 89 41 92 36 54 22 40 40 28 66 33 13 80)
               (24 47 32 60 99 03 45 02 44 75 33 53 78 36 84 20 35 17 12 50)
               (32 98 81 28 64 23 67 10 26 38 40 67 59 54 70 66 18 38 64 70)
               (67 26 20 68 02 62 12 20 95 63 94 39 63 08 40 91 66 49 94 21)
               (24 55 58 05 66 73 99 26 97 17 78 78 96 83 14 88 34 89 63 72)
               (21 36 23 09 75 00 76 44 20 45 35 14 00 61 33 97 34 31 33 95)
               (78 17 53 28 22 75 31 67 15 94 03 80 04 62 16 14 09 53 56 92)
               (16 39 05 42 96 35 31 47 55 58 88 24 00 17 54 24 36 29 85 57)
               (86 56 00 48 35 71 89 07 05 44 44 37 44 60 21 58 51 54 17 58)
               (19 80 81 68 05 94 47 69 28 73 92 13 86 52 17 77 04 89 55 40)
               (04 52 08 83 97 35 99 16 07 97 57 32 16 26 26 79 33 27 98 66)
               (88 36 68 87 57 62 20 72 03 46 33 67 46 55 12 32 63 93 53 69)
               (04 42 16 73 38 25 39 11 24 94 72 18 08 46 29 32 40 62 76 36)
               (20 69 36 41 72 30 23 88 34 62 99 69 82 67 59 85 74 04 36 16)
               (20 73 35 29 78 31 90 01 74 31 49 71 48 86 81 16 23 57 05 54)
               (01 70 54 71 83 51 54 69 16 92 33 48 61 43 52 01 89 19 67 48)
               ))
  
  (nth 1(nth 1 pe-11-grid ))
  
  (defun pe-grid-slice (grid x y length direction)
    (let (( xinc 0) ( yinc 0) (rv))
      (cond ((eq 'S direction) (setq yinc 1))
            ((eq 'E direction) (setq xinc 1))
            ((eq 'SE direction) (setq xinc 1)(setq yinc 1))
            ((eq 'SW direction) (setq xinc -1)(setq yinc 1))
            )
      (cl-loop for i from 1 to length do
               (setq rv (cons (nth x (nth y grid)) rv)
                     x (+ x xinc)
                     y (+ y yinc)))
      rv))
  
  (pe-grid-slice pe-11-grid 0 0 4 'S)
  (pe-grid-slice pe-11-grid 0 16 4 'S)
  (pe-grid-slice pe-11-grid 0 19 4 'E)
  (pe-grid-slice pe-11-grid 16 19 4 'E)
  (pe-grid-slice pe-11-grid 16 16 4 'SE)
  (apply '+ (pe-grid-slice pe-11-grid 0 0 4 'SE))
  
  (defun pe-11 ()
    (max
     ;; horizontal slices
     (cl-loop for i from 0 to 16
              maximize (cl-loop for j from 0 to 19
                       maximize (apply '* (pe-grid-slice pe-11-grid i j 4 'E))
                       ))
     ;; vertical slices
     (cl-loop for i from 0 to 19 
              maximize (cl-loop for j from 0 to 16
                       maximize (apply '* (pe-grid-slice pe-11-grid i j 4 'S))
                       ))
     ;; SE slices
     (cl-loop for i from 0 to 16 
              maximize (cl-loop for j from 0 to 16
                       maximize (apply '* (pe-grid-slice pe-11-grid i j 4 'SE))
                       ))
     ;; SW slices
     (cl-loop for i from 3 to 19
              maximize (cl-loop for j from 0 to 16
                       maximize (apply '* (pe-grid-slice pe-11-grid i j 4 'SW))
                       )))
    )
  (pe-11)
#+end_src
** DONE 12: Highly divisible triangular number
   CLOSED: [2013-08-01 Thu 16:40]

The sequence of triangle numbers is generated by adding the natural
numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7
= 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28

We can see that 28 is the first triangle number to have over five
divisors.

What is the value of the first triangle number to have over five
hundred divisors?
#+begin_src elisp
   (defun pe-divisors (x)
    (remove nil (append (list 1 x) (cl-loop for i from 2 to (/ x 2)
                                            collect (if (= 0 (% x i)) i)))))
  
  (defun pe-num-divisors (x)
    (let ((divisors 0))
      (cl-loop for i from 2 to (/ x 2)
               do (if (= 0 (% x i)) (setq divisors (1+ divisors))))
      (+ 2 divisors)))
  
  ;;this is optimized a bit by noticing factors are pairs, so loop to the square root, mult by 2
  ;;(there might be some edge case unhandled)
  (defun pe-num-divisors-2 (x)
    (let ((divisors 1))
      (cl-loop for i from 2 to (sqrt x)
               do (if (= 0 (% x i)) (setq divisors (1+ divisors))))
      (* 2 divisors)))
  
  
  (pe-divisors 15)
  (pe-num-divisors 15)
  (pe-num-divisors-2 15)
  (pe-divisors 28)
  
  (defun pe-12 (max)
    (let ((acc 0) divs) (cl-loop for i from 1 to max do
                                 (setq acc (+ acc i))
                                 (setq divs (pe-divisors acc))
                                 collect (list acc (length divs) ;;divs
                                               ))))
  ;;too slow with pe-num-divisors
  (defun pe-12-2 (max)
    (let ((acc 0) divs) (cl-loop for i from 1 to max do
                                 (setq acc (+ acc i))
                                 (setq num-divs (pe-num-divisors-2 acc))
                                 collect (list acc  num-divs ;;divs
                                               ))))
  ;; see http://en.wikipedia.org/wiki/Integer_factorization
  ;;http://en.wikipedia.org/wiki/Trial_division
  
  ;;som trial and terror yields
  ;;(i like the trial so i can get a feel for what happens, which is the entire point)
  (pe-12-2 15000)
  ...
   (76576500 576)
#+end_src
** DONE 13: Large sum                                                    :FF:
   CLOSED: [2013-07-28 Sun 22:18]
Work out the first ten digits of the sum of the following one-hundred 50-digit numbers.

37107287533902102798797998220837590246510135740250
46376937677490009712648124896970078050417018260538
74324986199524741059474233309513058123726617309629
91942213363574161572522430563301811072406154908250
23067588207539346171171980310421047513778063246676
89261670696623633820136378418383684178734361726757
28112879812849979408065481931592621691275889832738
44274228917432520321923589422876796487670272189318
47451445736001306439091167216856844588711603153276
70386486105843025439939619828917593665686757934951
62176457141856560629502157223196586755079324193331
64906352462741904929101432445813822663347944758178
92575867718337217661963751590579239728245598838407
58203565325359399008402633568948830189458628227828
80181199384826282014278194139940567587151170094390
35398664372827112653829987240784473053190104293586
86515506006295864861532075273371959191420517255829
71693888707715466499115593487603532921714970056938
54370070576826684624621495650076471787294438377604
53282654108756828443191190634694037855217779295145
36123272525000296071075082563815656710885258350721
45876576172410976447339110607218265236877223636045
17423706905851860660448207621209813287860733969412
81142660418086830619328460811191061556940512689692
51934325451728388641918047049293215058642563049483
62467221648435076201727918039944693004732956340691
15732444386908125794514089057706229429197107928209
55037687525678773091862540744969844508330393682126
18336384825330154686196124348767681297534375946515
80386287592878490201521685554828717201219257766954
78182833757993103614740356856449095527097864797581
16726320100436897842553539920931837441497806860984
48403098129077791799088218795327364475675590848030
87086987551392711854517078544161852424320693150332
59959406895756536782107074926966537676326235447210
69793950679652694742597709739166693763042633987085
41052684708299085211399427365734116182760315001271
65378607361501080857009149939512557028198746004375
35829035317434717326932123578154982629742552737307
94953759765105305946966067683156574377167401875275
88902802571733229619176668713819931811048770190271
25267680276078003013678680992525463401061632866526
36270218540497705585629946580636237993140746255962
24074486908231174977792365466257246923322810917141
91430288197103288597806669760892938638285025333403
34413065578016127815921815005561868836468420090470
23053081172816430487623791969842487255036638784583
11487696932154902810424020138335124462181441773470
63783299490636259666498587618221225225512486764533
67720186971698544312419572409913959008952310058822
95548255300263520781532296796249481641953868218774
76085327132285723110424803456124867697064507995236
37774242535411291684276865538926205024910326572967
23701913275725675285653248258265463092207058596522
29798860272258331913126375147341994889534765745501
18495701454879288984856827726077713721403798879715
38298203783031473527721580348144513491373226651381
34829543829199918180278916522431027392251122869539
40957953066405232632538044100059654939159879593635
29746152185502371307642255121183693803580388584903
41698116222072977186158236678424689157993532961922
62467957194401269043877107275048102390895523597457
23189706772547915061505504953922979530901129967519
86188088225875314529584099251203829009407770775672
11306739708304724483816533873502340845647058077308
82959174767140363198008187129011875491310547126581
97623331044818386269515456334926366572897563400500
42846280183517070527831839425882145521227251250327
55121603546981200581762165212827652751691296897789
32238195734329339946437501907836945765883352399886
75506164965184775180738168837861091527357929701337
62177842752192623401942399639168044983993173312731
32924185707147349566916674687634660915035914677504
99518671430235219628894890102423325116913619626622
73267460800591547471830798392868535206946944540724
76841822524674417161514036427982273348055556214818
97142617910342598647204516893989422179826088076852
87783646182799346313767754307809363333018982642090
10848802521674670883215120185883543223812876952786
71329612474782464538636993009049310363619763878039
62184073572399794223406235393808339651327408011116
66627891981488087797941876876144230030984490851411
60661826293682836764744779239180335110989069790714
85786944089552990653640447425576083659976645795096
66024396409905389607120198219976047599490197230297
64913982680032973156037120041377903785566085089252
16730939319872750275468906903707539413042652315011
94809377245048795150954100921645863754710598436791
78639167021187492431995700641917969777599028300699
15368713711936614952811305876380278410754449733078
40789923115535562561142322423255033685442488917353
44889911501440648020369068063960672322193204149535
41503128880339536053299340368006977710650566631954
81234880673210146739058568557934581403627822703280
82616570773948327592232845941706525094512325230608
22918802058777319719839450180888072429661980811197
77158542502016545090413245809786882778948721859617
72107838435069186155435662884062257473692284509516
20849603980134001723930671666823555245252804609722
53503534226472524250874054075591789781264330331690
*** A
I simply added the numbers in emacs calc, which was easy but i only learned calc has bignums and is awesome.
** DONE 14: Longest Collatz sequence                                     :PI:
   CLOSED: [2013-07-30 Tue 21:07]
The following iterative sequence is defined for the set of positive integers:

n → n/2 (n is even)
n → 3n + 1 (n is odd)

Using the rule above and starting with 13, we generate the following sequence:

13 → 40 → 20 → 10 → 5 → 16 → 8 → 4 → 2 → 1
It can be seen that this sequence (starting at 13 and finishing at 1) contains 10 terms. Although it has not been proved yet (Collatz Problem), it is thought that all starting numbers finish at 1.

Which starting number, under one million, produces the longest chain?

NOTE: Once the chain starts the terms are allowed to go above one million.
*** A
#+begin_src elisp
  (defun collatz (start &optional cutoff)
      "return collatz sequence from START, stop when CUTOFF length is reached"
      (unless cutoff (setq cutoff 10000000))
      (cons start  (let ((n start) (n2))
                     (cl-loop for i from 1 to cutoff
                              do (if (oddp n)
                                     (setq n2 (1+ (* 3 n )))
                                   (setq n2 (/ n 2 )))
                              (setq n n2 )
                              collect n
                              
                              until  (= n 1)))))
  (defun collatz-length (start &optional cutoff)
      (unless cutoff (setq cutoff 10000000))
      (let ((n start) (n2))
        (cl-loop for i from 1 to cutoff
                 do (if (oddp n)
                        (setq n2 (1+ (* 3 n )))
                      (setq n2 (/ n 2 )))
                 (setq n n2 )
                 ;;collect n
                 
                 until  (= n 1)
                 finally return (1+ i))))
  
  
    (length (collatz 13))
    10
  (collatz-length 13)  
  
  ;;this is too slow
  (cl-loop for i from 1 to 1000000
           collect (list i (collatz-length i)))
  ;;ideas: 
  ;; - some collatz contain others
  
  ;;otoh it works, and after you sort the list you get max  (837799 525) which is correct
#+end_src

** DONE 15: Lattice paths                                                :PI:
   CLOSED: [2013-08-03 Sat 02:12]
Starting in the top left corner of a 2×2 grid, and only being able to move to the right and down, there are exactly 6 routes to the bottom right corner.

How many such routes are there through a 20×20 grid?
*** A
needed some hints for this one:
http://en.wikipedia.org/wiki/Pascal%27s_triangle, see "Pascal's
triangle overlaid on a grid"

#+BEGIN_SRC elisp
  (defun pe-lattice-paths (size)
    (let ( (matrix))
      (cl-loop for i from 1 to size do (setq matrix (vconcat matrix (make-vector 1(make-vector size 1)) )))
  
      (cl-loop for x from 1 to (1- size) do
               (cl-loop for y from 1 to (1- size) do
                        (aset (aref  matrix y) x
                              (+ (aref (aref matrix  y) (1- x))
                                 (aref (aref matrix (1- y))  x)))
               ))
  
      matrix)
  
    )
  (pe-lattice-paths 21)
[[1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]
 [1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21]
 [1 3 6 10 15 21 28 36 45 55 66 78 91 105 120 136 153 171 190 210 231]
 [1 4 10 20 35 56 84 120 165 220 286 364 455 560 680 816 969 1140 1330 1540 1771]
 [1 5 15 35 70 126 210 330 495 715 1001 1365 1820 2380 3060 3876 4845 5985 7315 8855 10626]
 [1 6 21 56 126 252 462 792 1287 2002 3003 4368 6188 8568 11628 15504 20349 26334 33649 42504 53130]
 [1 7 28 84 210 462 924 1716 3003 5005 8008 12376 18564 27132 38760 54264 74613 100947 134596 177100 230230]
 [1 8 36 120 330 792 1716 3432 6435 11440 19448 31824 50388 77520 116280 170544 245157 346104 480700 657800 888030]
 [1 9 45 165 495 1287 3003 6435 12870 24310 43758 75582 125970 203490 319770 490314 735471 1081575 1562275 2220075 3108105]
 [1 10 55 220 715 2002 5005 11440 24310 48620 92378 167960 293930 497420 817190 1307504 2042975 3124550 4686825 6906900 10015005]
 [1 11 66 286 1001 3003 8008 19448 43758 92378 184756 352716 646646 1144066 1961256 3268760 5311735 8436285 13123110 20030010 30045015]
 [1 12 78 364 1365 4368 12376 31824 75582 167960 352716 705432 1352078 2496144 4457400 7726160 13037895 21474180 34597290 54627300 84672315]
 [1 13 91 455 1820 6188 18564 50388 125970 293930 646646 1352078 2704156 5200300 9657700 17383860 30421755 51895935 86493225 141120525 225792840]
 [1 14 105 560 2380 8568 27132 77520 203490 497420 1144066 2496144 5200300 10400600 20058300 37442160 67863915 119759850 206253075 347373600 573166440]
 [1 15 120 680 3060 11628 38760 116280 319770 817190 1961256 4457400 9657700 20058300 40116600 77558760 145422675 265182525 471435600 818809200 1391975640]
 [1 16 136 816 3876 15504 54264 170544 490314 1307504 3268760 7726160 17383860 37442160 77558760 155117520 300540195 565722720 1037158320 1855967520 3247943160]
 [1 17 153 969 4845 20349 74613 245157 735471 2042975 5311735 13037895 30421755 67863915 145422675 300540195 601080390 1166803110 2203961430 4059928950 7307872110]
 [1 18 171 1140 5985 26334 100947 346104 1081575 3124550 8436285 21474180 51895935 119759850 265182525 565722720 1166803110 2333606220 4537567650 8597496600 15905368710]
 [1 19 190 1330 7315 33649 134596 480700 1562275 4686825 13123110 34597290 86493225 206253075 471435600 1037158320 2203961430 4537567650 9075135300 17672631900 33578000610]
 [1 20 210 1540 8855 42504 177100 657800 2220075 6906900 20030010 54627300 141120525 347373600 818809200 1855967520 4059928950 8597496600 17672631900 35345263800 68923264410]
 [1 21 231 1771 10626 53130 230230 888030 3108105 10015005 30045015 84672315 225792840 573166440 1391975640 3247943160 7307872110 15905368710 33578000610 68923264410 137846528820]]
  
#+END_SRC
** DONE 16: Power digit sum                                              :US:
   CLOSED: [2013-07-30 Tue 16:47]
2^15 = 32768 and the sum of its digits is 3 + 2 + 7 + 6 + 8 = 26.

What is the sum of the digits of the number 2^1000?
*** A
#+begin_src elisp
  ;;2^1000 as a string
  (math-format-number (math-pow 2 1000))
  "10715086071862673209484250490600018105614048117055336074437503883703510511249361224931983788156958581275946729175531468251871452856923140435984577574698574803934567774824230985421074605062371141877954182153046474983581941267398767559165543946077062914571196477686542167660429831652624386837205668069376"
  
  (string-to-number (substring (math-format-number (math-pow 2 1000)) 2 3))
  
  (defun power-digit-sum ()
    (let ((powstr (math-format-number (math-pow 2 1000))))
      (cl-loop for i from 0 to (1- (length powstr))
               sum (string-to-number (substring powstr i (1+ i)))
               )))
  1366
  
  
#+end_src

** DONE 17: Number letter counts
   CLOSED: [2013-08-03 Sat 10:26]
If the numbers 1 to 5 are written out in words: one, two, three, four, five, then there are 3 + 3 + 5 + 4 + 4 = 19 letters used in total.

If all the numbers from 1 to 1000 (one thousand) inclusive were written out in words, how many letters would be used?


NOTE: Do not count spaces or hyphens. For example, 342 (three hundred and forty-two) contains 23 letters and 115 (one hundred and fifteen) contains 20 letters. The use of "and" when writing out numbers is in compliance with British usage.
*** A
have a look at (cl-format nil "~r" 342)
"three hundred and forty-two"
thats pretty nifty!

#+BEGIN_SRC elisp


(cl-loop for i from 1 to 1000  collect (cl-format nil "~r" i))
(length (remove (string-to-char "-") (remove (string-to-char " ") "nine hundred and ninety-eight" )))

(cl-loop for i from 1 to 1000  sum (length (remove (string-to-char "-") (remove (string-to-char " ") (cl-format nil "~r" i) )))
)
#+END_SRC
** DONE 18: Maximum path sum I
   CLOSED: [2013-08-03 Sat 15:23]
By starting at the top of the triangle below and moving to adjacent numbers on the row below, the maximum total from top to bottom is 23.

   3
  7 4
 2 4 6
8 5 9 3

That is, 3 + 7 + 4 + 9 = 23.

Find the maximum total from top to bottom of the triangle below:

              75
             95 64
            17 47 82
           18 35 87 10
          20 04 82 47 65
         19 01 23 75 03 34
        88 02 77 73 07 63 67
       99 65 04 28 06 16 70 92
      41 41 26 56 83 40 80 70 33
     41 48 72 33 47 32 37 16 94 29
    53 71 44 65 25 43 91 52 97 51 14
   70 11 33 28 77 73 17 78 39 68 17 57
  91 71 52 38 17 14 91 43 58 50 27 29 48
 63 66 04 68 89 53 67 30 73 16 69 87 40 31
04 62 98 27 23 09 70 98 73 93 38 53 60 04 23

NOTE: As there are only 16384 routes, it is possible to solve this
problem by trying every route. However, Problem 67, is the same
challenge with a triangle containing one-hundred rows; it cannot be
solved by brute force, and requires a clever method! ;o)
*** A
seems similar to the pascal triangle problem. it should be possible to store the max sum
from just the 2 neighbours in each cell, and move row by row until bottom.
the sought max is then the max of the cells in the bottom row. this should be efficient enough also for problem 67!
#+BEGIN_SRC elisp
  
  (setq pe-18-pyramid
        [
         [              75]
         [             95 64]
         [            17 47 82]
         [           18 35 87 10]
         [          20 04 82 47 65]
         [         19 01 23 75 03 34]
         [        88 02 77 73 07 63 67]
         [       99 65 04 28 06 16 70 92]
         [      41 41 26 56 83 40 80 70 33]
         [     41 48 72 33 47 32 37 16 94 29]
         [    53 71 44 65 25 43 91 52 97 51 14]
         [   70 11 33 28 77 73 17 78 39 68 17 57]
         [  91 71 52 38 17 14 91 43 58 50 27 29 48]
         [ 63 66 04 68 89 53 67 30 73 16 69 87 40 31]
         [04 62 98 27 23 09 70 98 73 93 38 53 60 04 23]
         ])
  (setq pe-18-test-pyramid
        [
         [ 3]
         [ 7 4]
         [ 2 4 6]
         [ 8 5 9 3]])
  
  (defun aref-matrix (matrix x y) (aref (aref matrix  y)  x))
  (defun aset-matrix (matrix x y v) (aset (aref matrix y) x v))
  
  (defun pe-18-max-neighbour-sum (matrix x y)
    (let ( (neighbour-NE (condition-case nil (aref-matrix matrix x (1- y) ) (error 0))         )
           (neighbour-NW (condition-case nil (aref-matrix matrix (1-  x) (1- y) ) (error 0)) ))
      (max (+ ( aref-matrix matrix x y) neighbour-NW)
           (+ ( aref-matrix matrix x y) neighbour-NE)
           ))
    
    )
  (defun pe-18-max-pyramid (matrix)
    (cl-loop for y from 0 to (1- (length matrix)) do
             (cl-loop for x from 0 to y do
                      (message "X %d Y %d v %d" x y (aref-matrix matrix x y))
                      (aset-matrix matrix x y  (pe-18-max-neighbour-sum matrix x y))
                      )
             )
    matrix)
  
  (pe-18-max-pyramid (copy-tree  pe-18-test-pyramid t))
  [[3] [10 7] [12 14 13] [20 19 23 16]]
  
  (pe-18-max-pyramid (copy-tree  pe-18-pyramid t))
  [[75]
   [170 139]
   [187 217 221]
   [205 252 308 231]
   [225 256 390 355 296]
   [244 257 413 465 358 330]
   [332 259 490 538 472 421 397]
   [431 397 494 566 544 488 491 489]
   [472 472 520 622 649 584 571 561 522]
   [513 520 592 655 696 681 621 587 655 551]
   [566 591 636 720 721 739 772 673 752 706 565]
   [636 602 669 748 798 812 789 850 791 820 723 622]
   [727 707 721 786 815 826 903 893 908 870 847 752 670]
   [790 793 725 854 904 879 970 933 981 924 939 934 792 701]
   [794 855 891 881 927 913 1040 1068 1054 1074 977 992 994 796 724]]
  
  ;;so max is 1074
  
  
  
  
  
#+END_SRC

** DONE 19: Counting Sundays
   CLOSED: [2013-08-02 Fri 16:42]
You are given the following information, but you may prefer to do some research for yourself.

- 1 Jan 1900 was a Monday.
Thirty days has September,
April, June and November.
All the rest have thirty-one,
Saving February alone,
Which has twenty-eight, rain or shine.
And on leap years, twenty-nine.
- A leap year occurs on any year evenly divisible by 4, but not on a century unless it is divisible by 400.
How many Sundays fell on the first of the month during the twentieth century (1 Jan 1901 to 31 Dec 2000)?
*** A
use the emacs calendar arithmetic perhaps?
#+BEGIN_SRC elisp
;;this returns a list of strings of dates
(cl-loop for i from 1 to 1200 collect (format-time-string "%w    %Y %B %e %A" (encode-time 0 0 0 1 i 1901)))
;;this counts the sundays
(cl-loop for i from 1 to 1200 count (equal "0" (format-time-string "%w" (encode-time 0 0 0 1 i 1901))))
171
#+END_SRC

** DONE 20: Factorial digit sum
   CLOSED: [2013-07-30 Tue 18:05]
n! means n × (n − 1) × ... × 3 × 2 × 1

For example, 10! = 10 × 9 × ... × 3 × 2 × 1 = 3628800,
and the sum of the digits in the number 10! is 3 + 6 + 2 + 8 + 8 + 0 + 0 = 27.

Find the sum of the digits in the number 100!
*** A
#+begin_src elisp
(math-format-number (calcFunc-fact 100))
"93326215443944152681699238856266700490715968264381621468592963895217599993229915608941463976156518286253697920827223758251185210916864000000000000000000000000"

(digit-sum  (calcFunc-fact 100))
648
#+end_src
** DONE 21: Amicable numbers                                             :FF:
   CLOSED: [2013-08-08 Thu 16:46]
Let d(n) be defined as the sum of proper divisors of n (numbers less
than n which divide evenly into n).

If d(a) = b and d(b) = a, where a ≠ b, then a and b are an amicable
pair and each of a and b are called amicable numbers.

For example, the proper divisors of 220 are 1, 2, 4, 5, 10, 11, 20,
22, 44, 55 and 110; therefore d(220) = 284. The proper divisors of 284
are 1, 2, 4, 71 and 142; so d(284) = 220.

Evaluate the sum of all the amicable numbers under 10000.
*** A
#+BEGIN_SRC elisp
  (pe-divisors 220)
  (- (+ 1 220 2 4 5 10 11 20 22 44 55 110) 220) 284
  
  (pe-divisors 284)
  
  (-(+ 1 284 2 4 71 142) 284) 220
  
  (defun pe-21-sum-divisors (n)
    (- (apply '+ (pe-divisors n)) n))
  
  (pe-21-sum-divisors 284) 220
  
  (defun pe-21-amicablep (n)
    (let* ((a (pe-21-sum-divisors n))
          (b (pe-21-sum-divisors a)))
      (if (=  b n) (list  a b))))
  
  (pe-21-amicablep 220)
  
  (cl-loop for n from 1 to 10000
           for amicable = (pe-21-amicablep n)
           when amicable
           collect  amicable )
  
  ((1 1)
   (6 6)
   (28 28)
   (284 220)
   (220 284)
   (496 496)
   (1210 1184)
   (1184 1210)
   (2924 2620)
   (2620 2924)
   (5564 5020)
   (5020 5564)
   (6368 6232)
   (6232 6368)
   (8128 8128))
  
  ;filter away the stuff that arent unique pairs
  (+  284 220  1210 1184 2924 2620 5564 5020 6368 6232 )
  31626
  ;my solution is so far buggy and slow but it works to a degree
  
  
#+END_SRC
** DONE 22: Names scores
   CLOSED: [2013-08-03 Sat 16:22]
Using names.txt (right click and 'Save Link/Target As...'), a 46K text
file containing over five-thousand first names, begin by sorting it
into alphabetical order. Then working out the alphabetical value for
each name, multiply this value by its alphabetical position in the
list to obtain a name score.

For example, when the list is sorted into alphabetical order, COLIN,
which is worth 3 + 15 + 12 + 9 + 14 = 53, is the 938th name in the
list. So, COLIN would obtain a score of 938 × 53 = 49714.

What is the total of all the name scores in the file?


*** A
#+BEGIN_SRC elisp
  (setq pe-22-names '(
  "MARY"
  "PATRICIA"
  "LINDA"
  "BARBARA"
  "ELIZABETH"
  "JENNIFER"
  "MARIA"
  "SUSAN"
  "MARGARET"
  "DOROTHY"
  "LISA"
  "NANCY"
  "KAREN"
  "BETTY"
  "HELEN"
  "SANDRA"
  "DONNA"
  "CAROL"
  "RUTH"
  "SHARON"
  "MICHELLE"
  "LAURA"
  "SARAH"
  "KIMBERLY"
  "DEBORAH"
  "JESSICA"
  "SHIRLEY"
  "CYNTHIA"
  "ANGELA"
  "MELISSA"
  "BRENDA"
  "AMY"
  "ANNA"
  "REBECCA"
  "VIRGINIA"
  "KATHLEEN"
  "PAMELA"
  "MARTHA"
  "DEBRA"
  "AMANDA"
  "STEPHANIE"
  "CAROLYN"
  "CHRISTINE"
  "MARIE"
  "JANET"
  "CATHERINE"
  "FRANCES"
  "ANN"
  "JOYCE"
  "DIANE"
  "ALICE"
  "JULIE"
  "HEATHER"
  "TERESA"
  "DORIS"
  "GLORIA"
  "EVELYN"
  "JEAN"
  "CHERYL"
  "MILDRED"
  "KATHERINE"
  "JOAN"
  "ASHLEY"
  "JUDITH"
  "ROSE"
  "JANICE"
  "KELLY"
  "NICOLE"
  "JUDY"
  "CHRISTINA"
  "KATHY"
  "THERESA"
  "BEVERLY"
  "DENISE"
  "TAMMY"
  "IRENE"
  "JANE"
  "LORI"
  "RACHEL"
  "MARILYN"
  "ANDREA"
  "KATHRYN"
  "LOUISE"
  "SARA"
  "ANNE"
  "JACQUELINE"
  "WANDA"
  "BONNIE"
  "JULIA"
  "RUBY"
  "LOIS"
  "TINA"
  "PHYLLIS"
  "NORMA"
  "PAULA"
  "DIANA"
  "ANNIE"
  "LILLIAN"
  "EMILY"
  "ROBIN"
  "PEGGY"
  "CRYSTAL"
  "GLADYS"
  "RITA"
  "DAWN"
  "CONNIE"
  "FLORENCE"
  "TRACY"
  "EDNA"
  "TIFFANY"
  "CARMEN"
  "ROSA"
  "CINDY"
  "GRACE"
  "WENDY"
  "VICTORIA"
  "EDITH"
  "KIM"
  "SHERRY"
  "SYLVIA"
  "JOSEPHINE"
  "THELMA"
  "SHANNON"
  "SHEILA"
  "ETHEL"
  "ELLEN"
  "ELAINE"
  "MARJORIE"
  "CARRIE"
  "CHARLOTTE"
  "MONICA"
  "ESTHER"
  "PAULINE"
  "EMMA"
  "JUANITA"
  "ANITA"
  "RHONDA"
  "HAZEL"
  "AMBER"
  "EVA"
  "DEBBIE"
  "APRIL"
  "LESLIE"
  "CLARA"
  "LUCILLE"
  "JAMIE"
  "JOANNE"
  "ELEANOR"
  "VALERIE"
  "DANIELLE"
  "MEGAN"
  "ALICIA"
  "SUZANNE"
  "MICHELE"
  "GAIL"
  "BERTHA"
  "DARLENE"
  "VERONICA"
  "JILL"
  "ERIN"
  "GERALDINE"
  "LAUREN"
  "CATHY"
  "JOANN"
  "LORRAINE"
  "LYNN"
  "SALLY"
  "REGINA"
  "ERICA"
  "BEATRICE"
  "DOLORES"
  "BERNICE"
  "AUDREY"
  "YVONNE"
  "ANNETTE"
  "JUNE"
  "SAMANTHA"
  "MARION"
  "DANA"
  "STACY"
  "ANA"
  "RENEE"
  "IDA"
  "VIVIAN"
  "ROBERTA"
  "HOLLY"
  "BRITTANY"
  "MELANIE"
  "LORETTA"
  "YOLANDA"
  "JEANETTE"
  "LAURIE"
  "KATIE"
  "KRISTEN"
  "VANESSA"
  "ALMA"
  "SUE"
  "ELSIE"
  "BETH"
  "JEANNE"
  "VICKI"
  "CARLA"
  "TARA"
  "ROSEMARY"
  "EILEEN"
  "TERRI"
  "GERTRUDE"
  "LUCY"
  "TONYA"
  "ELLA"
  "STACEY"
  "WILMA"
  "GINA"
  "KRISTIN"
  "JESSIE"
  "NATALIE"
  "AGNES"
  "VERA"
  "WILLIE"
  "CHARLENE"
  "BESSIE"
  "DELORES"
  "MELINDA"
  "PEARL"
  "ARLENE"
  "MAUREEN"
  "COLLEEN"
  "ALLISON"
  "TAMARA"
  "JOY"
  "GEORGIA"
  "CONSTANCE"
  "LILLIE"
  "CLAUDIA"
  "JACKIE"
  "MARCIA"
  "TANYA"
  "NELLIE"
  "MINNIE"
  "MARLENE"
  "HEIDI"
  "GLENDA"
  "LYDIA"
  "VIOLA"
  "COURTNEY"
  "MARIAN"
  "STELLA"
  "CAROLINE"
  "DORA"
  "JO"
  "VICKIE"
  "MATTIE"
  "TERRY"
  "MAXINE"
  "IRMA"
  "MABEL"
  "MARSHA"
  "MYRTLE"
  "LENA"
  "CHRISTY"
  "DEANNA"
  "PATSY"
  "HILDA"
  "GWENDOLYN"
  "JENNIE"
  "NORA"
  "MARGIE"
  "NINA"
  "CASSANDRA"
  "LEAH"
  "PENNY"
  "KAY"
  "PRISCILLA"
  "NAOMI"
  "CAROLE"
  "BRANDY"
  "OLGA"
  "BILLIE"
  "DIANNE"
  "TRACEY"
  "LEONA"
  "JENNY"
  "FELICIA"
  "SONIA"
  "MIRIAM"
  "VELMA"
  "BECKY"
  "BOBBIE"
  "VIOLET"
  "KRISTINA"
  "TONI"
  "MISTY"
  "MAE"
  "SHELLY"
  "DAISY"
  "RAMONA"
  "SHERRI"
  "ERIKA"
  "KATRINA"
  "CLAIRE"
  "LINDSEY"
  "LINDSAY"
  "GENEVA"
  "GUADALUPE"
  "BELINDA"
  "MARGARITA"
  "SHERYL"
  "CORA"
  "FAYE"
  "ADA"
  "NATASHA"
  "SABRINA"
  "ISABEL"
  "MARGUERITE"
  "HATTIE"
  "HARRIET"
  "MOLLY"
  "CECILIA"
  "KRISTI"
  "BRANDI"
  "BLANCHE"
  "SANDY"
  "ROSIE"
  "JOANNA"
  "IRIS"
  "EUNICE"
  "ANGIE"
  "INEZ"
  "LYNDA"
  "MADELINE"
  "AMELIA"
  "ALBERTA"
  "GENEVIEVE"
  "MONIQUE"
  "JODI"
  "JANIE"
  "MAGGIE"
  "KAYLA"
  "SONYA"
  "JAN"
  "LEE"
  "KRISTINE"
  "CANDACE"
  "FANNIE"
  "MARYANN"
  "OPAL"
  "ALISON"
  "YVETTE"
  "MELODY"
  "LUZ"
  "SUSIE"
  "OLIVIA"
  "FLORA"
  "SHELLEY"
  "KRISTY"
  "MAMIE"
  "LULA"
  "LOLA"
  "VERNA"
  "BEULAH"
  "ANTOINETTE"
  "CANDICE"
  "JUANA"
  "JEANNETTE"
  "PAM"
  "KELLI"
  "HANNAH"
  "WHITNEY"
  "BRIDGET"
  "KARLA"
  "CELIA"
  "LATOYA"
  "PATTY"
  "SHELIA"
  "GAYLE"
  "DELLA"
  "VICKY"
  "LYNNE"
  "SHERI"
  "MARIANNE"
  "KARA"
  "JACQUELYN"
  "ERMA"
  "BLANCA"
  "MYRA"
  "LETICIA"
  "PAT"
  "KRISTA"
  "ROXANNE"
  "ANGELICA"
  "JOHNNIE"
  "ROBYN"
  "FRANCIS"
  "ADRIENNE"
  "ROSALIE"
  "ALEXANDRA"
  "BROOKE"
  "BETHANY"
  "SADIE"
  "BERNADETTE"
  "TRACI"
  "JODY"
  "KENDRA"
  "JASMINE"
  "NICHOLE"
  "RACHAEL"
  "CHELSEA"
  "MABLE"
  "ERNESTINE"
  "MURIEL"
  "MARCELLA"
  "ELENA"
  "KRYSTAL"
  "ANGELINA"
  "NADINE"
  "KARI"
  "ESTELLE"
  "DIANNA"
  "PAULETTE"
  "LORA"
  "MONA"
  "DOREEN"
  "ROSEMARIE"
  "ANGEL"
  "DESIREE"
  "ANTONIA"
  "HOPE"
  "GINGER"
  "JANIS"
  "BETSY"
  "CHRISTIE"
  "FREDA"
  "MERCEDES"
  "MEREDITH"
  "LYNETTE"
  "TERI"
  "CRISTINA"
  "EULA"
  "LEIGH"
  "MEGHAN"
  "SOPHIA"
  "ELOISE"
  "ROCHELLE"
  "GRETCHEN"
  "CECELIA"
  "RAQUEL"
  "HENRIETTA"
  "ALYSSA"
  "JANA"
  "KELLEY"
  "GWEN"
  "KERRY"
  "JENNA"
  "TRICIA"
  "LAVERNE"
  "OLIVE"
  "ALEXIS"
  "TASHA"
  "SILVIA"
  "ELVIRA"
  "CASEY"
  "DELIA"
  "SOPHIE"
  "KATE"
  "PATTI"
  "LORENA"
  "KELLIE"
  "SONJA"
  "LILA"
  "LANA"
  "DARLA"
  "MAY"
  "MINDY"
  "ESSIE"
  "MANDY"
  "LORENE"
  "ELSA"
  "JOSEFINA"
  "JEANNIE"
  "MIRANDA"
  "DIXIE"
  "LUCIA"
  "MARTA"
  "FAITH"
  "LELA"
  "JOHANNA"
  "SHARI"
  "CAMILLE"
  "TAMI"
  "SHAWNA"
  "ELISA"
  "EBONY"
  "MELBA"
  "ORA"
  "NETTIE"
  "TABITHA"
  "OLLIE"
  "JAIME"
  "WINIFRED"
  "KRISTIE"
  "MARINA"
  "ALISHA"
  "AIMEE"
  "RENA"
  "MYRNA"
  "MARLA"
  "TAMMIE"
  "LATASHA"
  "BONITA"
  "PATRICE"
  "RONDA"
  "SHERRIE"
  "ADDIE"
  "FRANCINE"
  "DELORIS"
  "STACIE"
  "ADRIANA"
  "CHERI"
  "SHELBY"
  "ABIGAIL"
  "CELESTE"
  "JEWEL"
  "CARA"
  "ADELE"
  "REBEKAH"
  "LUCINDA"
  "DORTHY"
  "CHRIS"
  "EFFIE"
  "TRINA"
  "REBA"
  "SHAWN"
  "SALLIE"
  "AURORA"
  "LENORA"
  "ETTA"
  "LOTTIE"
  "KERRI"
  "TRISHA"
  "NIKKI"
  "ESTELLA"
  "FRANCISCA"
  "JOSIE"
  "TRACIE"
  "MARISSA"
  "KARIN"
  "BRITTNEY"
  "JANELLE"
  "LOURDES"
  "LAUREL"
  "HELENE"
  "FERN"
  "ELVA"
  "CORINNE"
  "KELSEY"
  "INA"
  "BETTIE"
  "ELISABETH"
  "AIDA"
  "CAITLIN"
  "INGRID"
  "IVA"
  "EUGENIA"
  "CHRISTA"
  "GOLDIE"
  "CASSIE"
  "MAUDE"
  "JENIFER"
  "THERESE"
  "FRANKIE"
  "DENA"
  "LORNA"
  "JANETTE"
  "LATONYA"
  "CANDY"
  "MORGAN"
  "CONSUELO"
  "TAMIKA"
  "ROSETTA"
  "DEBORA"
  "CHERIE"
  "POLLY"
  "DINA"
  "JEWELL"
  "FAY"
  "JILLIAN"
  "DOROTHEA"
  "NELL"
  "TRUDY"
  "ESPERANZA"
  "PATRICA"
  "KIMBERLEY"
  "SHANNA"
  "HELENA"
  "CAROLINA"
  "CLEO"
  "STEFANIE"
  "ROSARIO"
  "OLA"
  "JANINE"
  "MOLLIE"
  "LUPE"
  "ALISA"
  "LOU"
  "MARIBEL"
  "SUSANNE"
  "BETTE"
  "SUSANA"
  "ELISE"
  "CECILE"
  "ISABELLE"
  "LESLEY"
  "JOCELYN"
  "PAIGE"
  "JONI"
  "RACHELLE"
  "LEOLA"
  "DAPHNE"
  "ALTA"
  "ESTER"
  "PETRA"
  "GRACIELA"
  "IMOGENE"
  "JOLENE"
  "KEISHA"
  "LACEY"
  "GLENNA"
  "GABRIELA"
  "KERI"
  "URSULA"
  "LIZZIE"
  "KIRSTEN"
  "SHANA"
  "ADELINE"
  "MAYRA"
  "JAYNE"
  "JACLYN"
  "GRACIE"
  "SONDRA"
  "CARMELA"
  "MARISA"
  "ROSALIND"
  "CHARITY"
  "TONIA"
  "BEATRIZ"
  "MARISOL"
  "CLARICE"
  "JEANINE"
  "SHEENA"
  "ANGELINE"
  "FRIEDA"
  "LILY"
  "ROBBIE"
  "SHAUNA"
  "MILLIE"
  "CLAUDETTE"
  "CATHLEEN"
  "ANGELIA"
  "GABRIELLE"
  "AUTUMN"
  "KATHARINE"
  "SUMMER"
  "JODIE"
  "STACI"
  "LEA"
  "CHRISTI"
  "JIMMIE"
  "JUSTINE"
  "ELMA"
  "LUELLA"
  "MARGRET"
  "DOMINIQUE"
  "SOCORRO"
  "RENE"
  "MARTINA"
  "MARGO"
  "MAVIS"
  "CALLIE"
  "BOBBI"
  "MARITZA"
  "LUCILE"
  "LEANNE"
  "JEANNINE"
  "DEANA"
  "AILEEN"
  "LORIE"
  "LADONNA"
  "WILLA"
  "MANUELA"
  "GALE"
  "SELMA"
  "DOLLY"
  "SYBIL"
  "ABBY"
  "LARA"
  "DALE"
  "IVY"
  "DEE"
  "WINNIE"
  "MARCY"
  "LUISA"
  "JERI"
  "MAGDALENA"
  "OFELIA"
  "MEAGAN"
  "AUDRA"
  "MATILDA"
  "LEILA"
  "CORNELIA"
  "BIANCA"
  "SIMONE"
  "BETTYE"
  "RANDI"
  "VIRGIE"
  "LATISHA"
  "BARBRA"
  "GEORGINA"
  "ELIZA"
  "LEANN"
  "BRIDGETTE"
  "RHODA"
  "HALEY"
  "ADELA"
  "NOLA"
  "BERNADINE"
  "FLOSSIE"
  "ILA"
  "GRETA"
  "RUTHIE"
  "NELDA"
  "MINERVA"
  "LILLY"
  "TERRIE"
  "LETHA"
  "HILARY"
  "ESTELA"
  "VALARIE"
  "BRIANNA"
  "ROSALYN"
  "EARLINE"
  "CATALINA"
  "AVA"
  "MIA"
  "CLARISSA"
  "LIDIA"
  "CORRINE"
  "ALEXANDRIA"
  "CONCEPCION"
  "TIA"
  "SHARRON"
  "RAE"
  "DONA"
  "ERICKA"
  "JAMI"
  "ELNORA"
  "CHANDRA"
  "LENORE"
  "NEVA"
  "MARYLOU"
  "MELISA"
  "TABATHA"
  "SERENA"
  "AVIS"
  "ALLIE"
  "SOFIA"
  "JEANIE"
  "ODESSA"
  "NANNIE"
  "HARRIETT"
  "LORAINE"
  "PENELOPE"
  "MILAGROS"
  "EMILIA"
  "BENITA"
  "ALLYSON"
  "ASHLEE"
  "TANIA"
  "TOMMIE"
  "ESMERALDA"
  "KARINA"
  "EVE"
  "PEARLIE"
  "ZELMA"
  "MALINDA"
  "NOREEN"
  "TAMEKA"
  "SAUNDRA"
  "HILLARY"
  "AMIE"
  "ALTHEA"
  "ROSALINDA"
  "JORDAN"
  "LILIA"
  "ALANA"
  "GAY"
  "CLARE"
  "ALEJANDRA"
  "ELINOR"
  "MICHAEL"
  "LORRIE"
  "JERRI"
  "DARCY"
  "EARNESTINE"
  "CARMELLA"
  "TAYLOR"
  "NOEMI"
  "MARCIE"
  "LIZA"
  "ANNABELLE"
  "LOUISA"
  "EARLENE"
  "MALLORY"
  "CARLENE"
  "NITA"
  "SELENA"
  "TANISHA"
  "KATY"
  "JULIANNE"
  "JOHN"
  "LAKISHA"
  "EDWINA"
  "MARICELA"
  "MARGERY"
  "KENYA"
  "DOLLIE"
  "ROXIE"
  "ROSLYN"
  "KATHRINE"
  "NANETTE"
  "CHARMAINE"
  "LAVONNE"
  "ILENE"
  "KRIS"
  "TAMMI"
  "SUZETTE"
  "CORINE"
  "KAYE"
  "JERRY"
  "MERLE"
  "CHRYSTAL"
  "LINA"
  "DEANNE"
  "LILIAN"
  "JULIANA"
  "ALINE"
  "LUANN"
  "KASEY"
  "MARYANNE"
  "EVANGELINE"
  "COLETTE"
  "MELVA"
  "LAWANDA"
  "YESENIA"
  "NADIA"
  "MADGE"
  "KATHIE"
  "EDDIE"
  "OPHELIA"
  "VALERIA"
  "NONA"
  "MITZI"
  "MARI"
  "GEORGETTE"
  "CLAUDINE"
  "FRAN"
  "ALISSA"
  "ROSEANN"
  "LAKEISHA"
  "SUSANNA"
  "REVA"
  "DEIDRE"
  "CHASITY"
  "SHEREE"
  "CARLY"
  "JAMES"
  "ELVIA"
  "ALYCE"
  "DEIRDRE"
  "GENA"
  "BRIANA"
  "ARACELI"
  "KATELYN"
  "ROSANNE"
  "WENDI"
  "TESSA"
  "BERTA"
  "MARVA"
  "IMELDA"
  "MARIETTA"
  "MARCI"
  "LEONOR"
  "ARLINE"
  "SASHA"
  "MADELYN"
  "JANNA"
  "JULIETTE"
  "DEENA"
  "AURELIA"
  "JOSEFA"
  "AUGUSTA"
  "LILIANA"
  "YOUNG"
  "CHRISTIAN"
  "LESSIE"
  "AMALIA"
  "SAVANNAH"
  "ANASTASIA"
  "VILMA"
  "NATALIA"
  "ROSELLA"
  "LYNNETTE"
  "CORINA"
  "ALFREDA"
  "LEANNA"
  "CAREY"
  "AMPARO"
  "COLEEN"
  "TAMRA"
  "AISHA"
  "WILDA"
  "KARYN"
  "CHERRY"
  "QUEEN"
  "MAURA"
  "MAI"
  "EVANGELINA"
  "ROSANNA"
  "HALLIE"
  "ERNA"
  "ENID"
  "MARIANA"
  "LACY"
  "JULIET"
  "JACKLYN"
  "FREIDA"
  "MADELEINE"
  "MARA"
  "HESTER"
  "CATHRYN"
  "LELIA"
  "CASANDRA"
  "BRIDGETT"
  "ANGELITA"
  "JANNIE"
  "DIONNE"
  "ANNMARIE"
  "KATINA"
  "BERYL"
  "PHOEBE"
  "MILLICENT"
  "KATHERYN"
  "DIANN"
  "CARISSA"
  "MARYELLEN"
  "LIZ"
  "LAURI"
  "HELGA"
  "GILDA"
  "ADRIAN"
  "RHEA"
  "MARQUITA"
  "HOLLIE"
  "TISHA"
  "TAMERA"
  "ANGELIQUE"
  "FRANCESCA"
  "BRITNEY"
  "KAITLIN"
  "LOLITA"
  "FLORINE"
  "ROWENA"
  "REYNA"
  "TWILA"
  "FANNY"
  "JANELL"
  "INES"
  "CONCETTA"
  "BERTIE"
  "ALBA"
  "BRIGITTE"
  "ALYSON"
  "VONDA"
  "PANSY"
  "ELBA"
  "NOELLE"
  "LETITIA"
  "KITTY"
  "DEANN"
  "BRANDIE"
  "LOUELLA"
  "LETA"
  "FELECIA"
  "SHARLENE"
  "LESA"
  "BEVERLEY"
  "ROBERT"
  "ISABELLA"
  "HERMINIA"
  "TERRA"
  "CELINA"
  "TORI"
  "OCTAVIA"
  "JADE"
  "DENICE"
  "GERMAINE"
  "SIERRA"
  "MICHELL"
  "CORTNEY"
  "NELLY"
  "DORETHA"
  "SYDNEY"
  "DEIDRA"
  "MONIKA"
  "LASHONDA"
  "JUDI"
  "CHELSEY"
  "ANTIONETTE"
  "MARGOT"
  "BOBBY"
  "ADELAIDE"
  "NAN"
  "LEEANN"
  "ELISHA"
  "DESSIE"
  "LIBBY"
  "KATHI"
  "GAYLA"
  "LATANYA"
  "MINA"
  "MELLISA"
  "KIMBERLEE"
  "JASMIN"
  "RENAE"
  "ZELDA"
  "ELDA"
  "MA"
  "JUSTINA"
  "GUSSIE"
  "EMILIE"
  "CAMILLA"
  "ABBIE"
  "ROCIO"
  "KAITLYN"
  "JESSE"
  "EDYTHE"
  "ASHLEIGH"
  "SELINA"
  "LAKESHA"
  "GERI"
  "ALLENE"
  "PAMALA"
  "MICHAELA"
  "DAYNA"
  "CARYN"
  "ROSALIA"
  "SUN"
  "JACQULINE"
  "REBECA"
  "MARYBETH"
  "KRYSTLE"
  "IOLA"
  "DOTTIE"
  "BENNIE"
  "BELLE"
  "AUBREY"
  "GRISELDA"
  "ERNESTINA"
  "ELIDA"
  "ADRIANNE"
  "DEMETRIA"
  "DELMA"
  "CHONG"
  "JAQUELINE"
  "DESTINY"
  "ARLEEN"
  "VIRGINA"
  "RETHA"
  "FATIMA"
  "TILLIE"
  "ELEANORE"
  "CARI"
  "TREVA"
  "BIRDIE"
  "WILHELMINA"
  "ROSALEE"
  "MAURINE"
  "LATRICE"
  "YONG"
  "JENA"
  "TARYN"
  "ELIA"
  "DEBBY"
  "MAUDIE"
  "JEANNA"
  "DELILAH"
  "CATRINA"
  "SHONDA"
  "HORTENCIA"
  "THEODORA"
  "TERESITA"
  "ROBBIN"
  "DANETTE"
  "MARYJANE"
  "FREDDIE"
  "DELPHINE"
  "BRIANNE"
  "NILDA"
  "DANNA"
  "CINDI"
  "BESS"
  "IONA"
  "HANNA"
  "ARIEL"
  "WINONA"
  "VIDA"
  "ROSITA"
  "MARIANNA"
  "WILLIAM"
  "RACHEAL"
  "GUILLERMINA"
  "ELOISA"
  "CELESTINE"
  "CAREN"
  "MALISSA"
  "LONA"
  "CHANTEL"
  "SHELLIE"
  "MARISELA"
  "LEORA"
  "AGATHA"
  "SOLEDAD"
  "MIGDALIA"
  "IVETTE"
  "CHRISTEN"
  "ATHENA"
  "JANEL"
  "CHLOE"
  "VEDA"
  "PATTIE"
  "TESSIE"
  "TERA"
  "MARILYNN"
  "LUCRETIA"
  "KARRIE"
  "DINAH"
  "DANIELA"
  "ALECIA"
  "ADELINA"
  "VERNICE"
  "SHIELA"
  "PORTIA"
  "MERRY"
  "LASHAWN"
  "DEVON"
  "DARA"
  "TAWANA"
  "OMA"
  "VERDA"
  "CHRISTIN"
  "ALENE"
  "ZELLA"
  "SANDI"
  "RAFAELA"
  "MAYA"
  "KIRA"
  "CANDIDA"
  "ALVINA"
  "SUZAN"
  "SHAYLA"
  "LYN"
  "LETTIE"
  "ALVA"
  "SAMATHA"
  "ORALIA"
  "MATILDE"
  "MADONNA"
  "LARISSA"
  "VESTA"
  "RENITA"
  "INDIA"
  "DELOIS"
  "SHANDA"
  "PHILLIS"
  "LORRI"
  "ERLINDA"
  "CRUZ"
  "CATHRINE"
  "BARB"
  "ZOE"
  "ISABELL"
  "IONE"
  "GISELA"
  "CHARLIE"
  "VALENCIA"
  "ROXANNA"
  "MAYME"
  "KISHA"
  "ELLIE"
  "MELLISSA"
  "DORRIS"
  "DALIA"
  "BELLA"
  "ANNETTA"
  "ZOILA"
  "RETA"
  "REINA"
  "LAURETTA"
  "KYLIE"
  "CHRISTAL"
  "PILAR"
  "CHARLA"
  "ELISSA"
  "TIFFANI"
  "TANA"
  "PAULINA"
  "LEOTA"
  "BREANNA"
  "JAYME"
  "CARMEL"
  "VERNELL"
  "TOMASA"
  "MANDI"
  "DOMINGA"
  "SANTA"
  "MELODIE"
  "LURA"
  "ALEXA"
  "TAMELA"
  "RYAN"
  "MIRNA"
  "KERRIE"
  "VENUS"
  "NOEL"
  "FELICITA"
  "CRISTY"
  "CARMELITA"
  "BERNIECE"
  "ANNEMARIE"
  "TIARA"
  "ROSEANNE"
  "MISSY"
  "CORI"
  "ROXANA"
  "PRICILLA"
  "KRISTAL"
  "JUNG"
  "ELYSE"
  "HAYDEE"
  "ALETHA"
  "BETTINA"
  "MARGE"
  "GILLIAN"
  "FILOMENA"
  "CHARLES"
  "ZENAIDA"
  "HARRIETTE"
  "CARIDAD"
  "VADA"
  "UNA"
  "ARETHA"
  "PEARLINE"
  "MARJORY"
  "MARCELA"
  "FLOR"
  "EVETTE"
  "ELOUISE"
  "ALINA"
  "TRINIDAD"
  "DAVID"
  "DAMARIS"
  "CATHARINE"
  "CARROLL"
  "BELVA"
  "NAKIA"
  "MARLENA"
  "LUANNE"
  "LORINE"
  "KARON"
  "DORENE"
  "DANITA"
  "BRENNA"
  "TATIANA"
  "SAMMIE"
  "LOUANN"
  "LOREN"
  "JULIANNA"
  "ANDRIA"
  "PHILOMENA"
  "LUCILA"
  "LEONORA"
  "DOVIE"
  "ROMONA"
  "MIMI"
  "JACQUELIN"
  "GAYE"
  "TONJA"
  "MISTI"
  "JOE"
  "GENE"
  "CHASTITY"
  "STACIA"
  "ROXANN"
  "MICAELA"
  "NIKITA"
  "MEI"
  "VELDA"
  "MARLYS"
  "JOHNNA"
  "AURA"
  "LAVERN"
  "IVONNE"
  "HAYLEY"
  "NICKI"
  "MAJORIE"
  "HERLINDA"
  "GEORGE"
  "ALPHA"
  "YADIRA"
  "PERLA"
  "GREGORIA"
  "DANIEL"
  "ANTONETTE"
  "SHELLI"
  "MOZELLE"
  "MARIAH"
  "JOELLE"
  "CORDELIA"
  "JOSETTE"
  "CHIQUITA"
  "TRISTA"
  "LOUIS"
  "LAQUITA"
  "GEORGIANA"
  "CANDI"
  "SHANON"
  "LONNIE"
  "HILDEGARD"
  "CECIL"
  "VALENTINA"
  "STEPHANY"
  "MAGDA"
  "KAROL"
  "GERRY"
  "GABRIELLA"
  "TIANA"
  "ROMA"
  "RICHELLE"
  "RAY"
  "PRINCESS"
  "OLETA"
  "JACQUE"
  "IDELLA"
  "ALAINA"
  "SUZANNA"
  "JOVITA"
  "BLAIR"
  "TOSHA"
  "RAVEN"
  "NEREIDA"
  "MARLYN"
  "KYLA"
  "JOSEPH"
  "DELFINA"
  "TENA"
  "STEPHENIE"
  "SABINA"
  "NATHALIE"
  "MARCELLE"
  "GERTIE"
  "DARLEEN"
  "THEA"
  "SHARONDA"
  "SHANTEL"
  "BELEN"
  "VENESSA"
  "ROSALINA"
  "ONA"
  "GENOVEVA"
  "COREY"
  "CLEMENTINE"
  "ROSALBA"
  "RENATE"
  "RENATA"
  "MI"
  "IVORY"
  "GEORGIANNA"
  "FLOY"
  "DORCAS"
  "ARIANA"
  "TYRA"
  "THEDA"
  "MARIAM"
  "JULI"
  "JESICA"
  "DONNIE"
  "VIKKI"
  "VERLA"
  "ROSELYN"
  "MELVINA"
  "JANNETTE"
  "GINNY"
  "DEBRAH"
  "CORRIE"
  "ASIA"
  "VIOLETA"
  "MYRTIS"
  "LATRICIA"
  "COLLETTE"
  "CHARLEEN"
  "ANISSA"
  "VIVIANA"
  "TWYLA"
  "PRECIOUS"
  "NEDRA"
  "LATONIA"
  "LAN"
  "HELLEN"
  "FABIOLA"
  "ANNAMARIE"
  "ADELL"
  "SHARYN"
  "CHANTAL"
  "NIKI"
  "MAUD"
  "LIZETTE"
  "LINDY"
  "KIA"
  "KESHA"
  "JEANA"
  "DANELLE"
  "CHARLINE"
  "CHANEL"
  "CARROL"
  "VALORIE"
  "LIA"
  "DORTHA"
  "CRISTAL"
  "SUNNY"
  "LEONE"
  "LEILANI"
  "GERRI"
  "DEBI"
  "ANDRA"
  "KESHIA"
  "IMA"
  "EULALIA"
  "EASTER"
  "DULCE"
  "NATIVIDAD"
  "LINNIE"
  "KAMI"
  "GEORGIE"
  "CATINA"
  "BROOK"
  "ALDA"
  "WINNIFRED"
  "SHARLA"
  "RUTHANN"
  "MEAGHAN"
  "MAGDALENE"
  "LISSETTE"
  "ADELAIDA"
  "VENITA"
  "TRENA"
  "SHIRLENE"
  "SHAMEKA"
  "ELIZEBETH"
  "DIAN"
  "SHANTA"
  "MICKEY"
  "LATOSHA"
  "CARLOTTA"
  "WINDY"
  "SOON"
  "ROSINA"
  "MARIANN"
  "LEISA"
  "JONNIE"
  "DAWNA"
  "CATHIE"
  "BILLY"
  "ASTRID"
  "SIDNEY"
  "LAUREEN"
  "JANEEN"
  "HOLLI"
  "FAWN"
  "VICKEY"
  "TERESSA"
  "SHANTE"
  "RUBYE"
  "MARCELINA"
  "CHANDA"
  "CARY"
  "TERESE"
  "SCARLETT"
  "MARTY"
  "MARNIE"
  "LULU"
  "LISETTE"
  "JENIFFER"
  "ELENOR"
  "DORINDA"
  "DONITA"
  "CARMAN"
  "BERNITA"
  "ALTAGRACIA"
  "ALETA"
  "ADRIANNA"
  "ZORAIDA"
  "RONNIE"
  "NICOLA"
  "LYNDSEY"
  "KENDALL"
  "JANINA"
  "CHRISSY"
  "AMI"
  "STARLA"
  "PHYLIS"
  "PHUONG"
  "KYRA"
  "CHARISSE"
  "BLANCH"
  "SANJUANITA"
  "RONA"
  "NANCI"
  "MARILEE"
  "MARANDA"
  "CORY"
  "BRIGETTE"
  "SANJUANA"
  "MARITA"
  "KASSANDRA"
  "JOYCELYN"
  "IRA"
  "FELIPA"
  "CHELSIE"
  "BONNY"
  "MIREYA"
  "LORENZA"
  "KYONG"
  "ILEANA"
  "CANDELARIA"
  "TONY"
  "TOBY"
  "SHERIE"
  "OK"
  "MARK"
  "LUCIE"
  "LEATRICE"
  "LAKESHIA"
  "GERDA"
  "EDIE"
  "BAMBI"
  "MARYLIN"
  "LAVON"
  "HORTENSE"
  "GARNET"
  "EVIE"
  "TRESSA"
  "SHAYNA"
  "LAVINA"
  "KYUNG"
  "JEANETTA"
  "SHERRILL"
  "SHARA"
  "PHYLISS"
  "MITTIE"
  "ANABEL"
  "ALESIA"
  "THUY"
  "TAWANDA"
  "RICHARD"
  "JOANIE"
  "TIFFANIE"
  "LASHANDA"
  "KARISSA"
  "ENRIQUETA"
  "DARIA"
  "DANIELLA"
  "CORINNA"
  "ALANNA"
  "ABBEY"
  "ROXANE"
  "ROSEANNA"
  "MAGNOLIA"
  "LIDA"
  "KYLE"
  "JOELLEN"
  "ERA"
  "CORAL"
  "CARLEEN"
  "TRESA"
  "PEGGIE"
  "NOVELLA"
  "NILA"
  "MAYBELLE"
  "JENELLE"
  "CARINA"
  "NOVA"
  "MELINA"
  "MARQUERITE"
  "MARGARETTE"
  "JOSEPHINA"
  "EVONNE"
  "DEVIN"
  "CINTHIA"
  "ALBINA"
  "TOYA"
  "TAWNYA"
  "SHERITA"
  "SANTOS"
  "MYRIAM"
  "LIZABETH"
  "LISE"
  "KEELY"
  "JENNI"
  "GISELLE"
  "CHERYLE"
  "ARDITH"
  "ARDIS"
  "ALESHA"
  "ADRIANE"
  "SHAINA"
  "LINNEA"
  "KAROLYN"
  "HONG"
  "FLORIDA"
  "FELISHA"
  "DORI"
  "DARCI"
  "ARTIE"
  "ARMIDA"
  "ZOLA"
  "XIOMARA"
  "VERGIE"
  "SHAMIKA"
  "NENA"
  "NANNETTE"
  "MAXIE"
  "LOVIE"
  "JEANE"
  "JAIMIE"
  "INGE"
  "FARRAH"
  "ELAINA"
  "CAITLYN"
  "STARR"
  "FELICITAS"
  "CHERLY"
  "CARYL"
  "YOLONDA"
  "YASMIN"
  "TEENA"
  "PRUDENCE"
  "PENNIE"
  "NYDIA"
  "MACKENZIE"
  "ORPHA"
  "MARVEL"
  "LIZBETH"
  "LAURETTE"
  "JERRIE"
  "HERMELINDA"
  "CAROLEE"
  "TIERRA"
  "MIRIAN"
  "META"
  "MELONY"
  "KORI"
  "JENNETTE"
  "JAMILA"
  "ENA"
  "ANH"
  "YOSHIKO"
  "SUSANNAH"
  "SALINA"
  "RHIANNON"
  "JOLEEN"
  "CRISTINE"
  "ASHTON"
  "ARACELY"
  "TOMEKA"
  "SHALONDA"
  "MARTI"
  "LACIE"
  "KALA"
  "JADA"
  "ILSE"
  "HAILEY"
  "BRITTANI"
  "ZONA"
  "SYBLE"
  "SHERRYL"
  "RANDY"
  "NIDIA"
  "MARLO"
  "KANDICE"
  "KANDI"
  "DEB"
  "DEAN"
  "AMERICA"
  "ALYCIA"
  "TOMMY"
  "RONNA"
  "NORENE"
  "MERCY"
  "JOSE"
  "INGEBORG"
  "GIOVANNA"
  "GEMMA"
  "CHRISTEL"
  "AUDRY"
  "ZORA"
  "VITA"
  "VAN"
  "TRISH"
  "STEPHAINE"
  "SHIRLEE"
  "SHANIKA"
  "MELONIE"
  "MAZIE"
  "JAZMIN"
  "INGA"
  "HOA"
  "HETTIE"
  "GERALYN"
  "FONDA"
  "ESTRELLA"
  "ADELLA"
  "SU"
  "SARITA"
  "RINA"
  "MILISSA"
  "MARIBETH"
  "GOLDA"
  "EVON"
  "ETHELYN"
  "ENEDINA"
  "CHERISE"
  "CHANA"
  "VELVA"
  "TAWANNA"
  "SADE"
  "MIRTA"
  "LI"
  "KARIE"
  "JACINTA"
  "ELNA"
  "DAVINA"
  "CIERRA"
  "ASHLIE"
  "ALBERTHA"
  "TANESHA"
  "STEPHANI"
  "NELLE"
  "MINDI"
  "LU"
  "LORINDA"
  "LARUE"
  "FLORENE"
  "DEMETRA"
  "DEDRA"
  "CIARA"
  "CHANTELLE"
  "ASHLY"
  "SUZY"
  "ROSALVA"
  "NOELIA"
  "LYDA"
  "LEATHA"
  "KRYSTYNA"
  "KRISTAN"
  "KARRI"
  "DARLINE"
  "DARCIE"
  "CINDA"
  "CHEYENNE"
  "CHERRIE"
  "AWILDA"
  "ALMEDA"
  "ROLANDA"
  "LANETTE"
  "JERILYN"
  "GISELE"
  "EVALYN"
  "CYNDI"
  "CLETA"
  "CARIN"
  "ZINA"
  "ZENA"
  "VELIA"
  "TANIKA"
  "PAUL"
  "CHARISSA"
  "THOMAS"
  "TALIA"
  "MARGARETE"
  "LAVONDA"
  "KAYLEE"
  "KATHLENE"
  "JONNA"
  "IRENA"
  "ILONA"
  "IDALIA"
  "CANDIS"
  "CANDANCE"
  "BRANDEE"
  "ANITRA"
  "ALIDA"
  "SIGRID"
  "NICOLETTE"
  "MARYJO"
  "LINETTE"
  "HEDWIG"
  "CHRISTIANA"
  "CASSIDY"
  "ALEXIA"
  "TRESSIE"
  "MODESTA"
  "LUPITA"
  "LITA"
  "GLADIS"
  "EVELIA"
  "DAVIDA"
  "CHERRI"
  "CECILY"
  "ASHELY"
  "ANNABEL"
  "AGUSTINA"
  "WANITA"
  "SHIRLY"
  "ROSAURA"
  "HULDA"
  "EUN"
  "BAILEY"
  "YETTA"
  "VERONA"
  "THOMASINA"
  "SIBYL"
  "SHANNAN"
  "MECHELLE"
  "LUE"
  "LEANDRA"
  "LANI"
  "KYLEE"
  "KANDY"
  "JOLYNN"
  "FERNE"
  "EBONI"
  "CORENE"
  "ALYSIA"
  "ZULA"
  "NADA"
  "MOIRA"
  "LYNDSAY"
  "LORRETTA"
  "JUAN"
  "JAMMIE"
  "HORTENSIA"
  "GAYNELL"
  "CAMERON"
  "ADRIA"
  "VINA"
  "VICENTA"
  "TANGELA"
  "STEPHINE"
  "NORINE"
  "NELLA"
  "LIANA"
  "LESLEE"
  "KIMBERELY"
  "ILIANA"
  "GLORY"
  "FELICA"
  "EMOGENE"
  "ELFRIEDE"
  "EDEN"
  "EARTHA"
  "CARMA"
  "BEA"
  "OCIE"
  "MARRY"
  "LENNIE"
  "KIARA"
  "JACALYN"
  "CARLOTA"
  "ARIELLE"
  "YU"
  "STAR"
  "OTILIA"
  "KIRSTIN"
  "KACEY"
  "JOHNETTA"
  "JOEY"
  "JOETTA"
  "JERALDINE"
  "JAUNITA"
  "ELANA"
  "DORTHEA"
  "CAMI"
  "AMADA"
  "ADELIA"
  "VERNITA"
  "TAMAR"
  "SIOBHAN"
  "RENEA"
  "RASHIDA"
  "OUIDA"
  "ODELL"
  "NILSA"
  "MERYL"
  "KRISTYN"
  "JULIETA"
  "DANICA"
  "BREANNE"
  "AUREA"
  "ANGLEA"
  "SHERRON"
  "ODETTE"
  "MALIA"
  "LORELEI"
  "LIN"
  "LEESA"
  "KENNA"
  "KATHLYN"
  "FIONA"
  "CHARLETTE"
  "SUZIE"
  "SHANTELL"
  "SABRA"
  "RACQUEL"
  "MYONG"
  "MIRA"
  "MARTINE"
  "LUCIENNE"
  "LAVADA"
  "JULIANN"
  "JOHNIE"
  "ELVERA"
  "DELPHIA"
  "CLAIR"
  "CHRISTIANE"
  "CHAROLETTE"
  "CARRI"
  "AUGUSTINE"
  "ASHA"
  "ANGELLA"
  "PAOLA"
  "NINFA"
  "LEDA"
  "LAI"
  "EDA"
  "SUNSHINE"
  "STEFANI"
  "SHANELL"
  "PALMA"
  "MACHELLE"
  "LISSA"
  "KECIA"
  "KATHRYNE"
  "KARLENE"
  "JULISSA"
  "JETTIE"
  "JENNIFFER"
  "HUI"
  "CORRINA"
  "CHRISTOPHER"
  "CAROLANN"
  "ALENA"
  "TESS"
  "ROSARIA"
  "MYRTICE"
  "MARYLEE"
  "LIANE"
  "KENYATTA"
  "JUDIE"
  "JANEY"
  "IN"
  "ELMIRA"
  "ELDORA"
  "DENNA"
  "CRISTI"
  "CATHI"
  "ZAIDA"
  "VONNIE"
  "VIVA"
  "VERNIE"
  "ROSALINE"
  "MARIELA"
  "LUCIANA"
  "LESLI"
  "KARAN"
  "FELICE"
  "DENEEN"
  "ADINA"
  "WYNONA"
  "TARSHA"
  "SHERON"
  "SHASTA"
  "SHANITA"
  "SHANI"
  "SHANDRA"
  "RANDA"
  "PINKIE"
  "PARIS"
  "NELIDA"
  "MARILOU"
  "LYLA"
  "LAURENE"
  "LACI"
  "JOI"
  "JANENE"
  "DOROTHA"
  "DANIELE"
  "DANI"
  "CAROLYNN"
  "CARLYN"
  "BERENICE"
  "AYESHA"
  "ANNELIESE"
  "ALETHEA"
  "THERSA"
  "TAMIKO"
  "RUFINA"
  "OLIVA"
  "MOZELL"
  "MARYLYN"
  "MADISON"
  "KRISTIAN"
  "KATHYRN"
  "KASANDRA"
  "KANDACE"
  "JANAE"
  "GABRIEL"
  "DOMENICA"
  "DEBBRA"
  "DANNIELLE"
  "CHUN"
  "BUFFY"
  "BARBIE"
  "ARCELIA"
  "AJA"
  "ZENOBIA"
  "SHAREN"
  "SHAREE"
  "PATRICK"
  "PAGE"
  "MY"
  "LAVINIA"
  "KUM"
  "KACIE"
  "JACKELINE"
  "HUONG"
  "FELISA"
  "EMELIA"
  "ELEANORA"
  "CYTHIA"
  "CRISTIN"
  "CLYDE"
  "CLARIBEL"
  "CARON"
  "ANASTACIA"
  "ZULMA"
  "ZANDRA"
  "YOKO"
  "TENISHA"
  "SUSANN"
  "SHERILYN"
  "SHAY"
  "SHAWANDA"
  "SABINE"
  "ROMANA"
  "MATHILDA"
  "LINSEY"
  "KEIKO"
  "JOANA"
  "ISELA"
  "GRETTA"
  "GEORGETTA"
  "EUGENIE"
  "DUSTY"
  "DESIRAE"
  "DELORA"
  "CORAZON"
  "ANTONINA"
  "ANIKA"
  "WILLENE"
  "TRACEE"
  "TAMATHA"
  "REGAN"
  "NICHELLE"
  "MICKIE"
  "MAEGAN"
  "LUANA"
  "LANITA"
  "KELSIE"
  "EDELMIRA"
  "BREE"
  "AFTON"
  "TEODORA"
  "TAMIE"
  "SHENA"
  "MEG"
  "LINH"
  "KELI"
  "KACI"
  "DANYELLE"
  "BRITT"
  "ARLETTE"
  "ALBERTINE"
  "ADELLE"
  "TIFFINY"
  "STORMY"
  "SIMONA"
  "NUMBERS"
  "NICOLASA"
  "NICHOL"
  "NIA"
  "NAKISHA"
  "MEE"
  "MAIRA"
  "LOREEN"
  "KIZZY"
  "JOHNNY"
  "JAY"
  "FALLON"
  "CHRISTENE"
  "BOBBYE"
  "ANTHONY"
  "YING"
  "VINCENZA"
  "TANJA"
  "RUBIE"
  "RONI"
  "QUEENIE"
  "MARGARETT"
  "KIMBERLI"
  "IRMGARD"
  "IDELL"
  "HILMA"
  "EVELINA"
  "ESTA"
  "EMILEE"
  "DENNISE"
  "DANIA"
  "CARL"
  "CARIE"
  "ANTONIO"
  "WAI"
  "SANG"
  "RISA"
  "RIKKI"
  "PARTICIA"
  "MUI"
  "MASAKO"
  "MARIO"
  "LUVENIA"
  "LOREE"
  "LONI"
  "LIEN"
  "KEVIN"
  "GIGI"
  "FLORENCIA"
  "DORIAN"
  "DENITA"
  "DALLAS"
  "CHI"
  "BILLYE"
  "ALEXANDER"
  "TOMIKA"
  "SHARITA"
  "RANA"
  "NIKOLE"
  "NEOMA"
  "MARGARITE"
  "MADALYN"
  "LUCINA"
  "LAILA"
  "KALI"
  "JENETTE"
  "GABRIELE"
  "EVELYNE"
  "ELENORA"
  "CLEMENTINA"
  "ALEJANDRINA"
  "ZULEMA"
  "VIOLETTE"
  "VANNESSA"
  "THRESA"
  "RETTA"
  "PIA"
  "PATIENCE"
  "NOELLA"
  "NICKIE"
  "JONELL"
  "DELTA"
  "CHUNG"
  "CHAYA"
  "CAMELIA"
  "BETHEL"
  "ANYA"
  "ANDREW"
  "THANH"
  "SUZANN"
  "SPRING"
  "SHU"
  "MILA"
  "LILLA"
  "LAVERNA"
  "KEESHA"
  "KATTIE"
  "GIA"
  "GEORGENE"
  "EVELINE"
  "ESTELL"
  "ELIZBETH"
  "VIVIENNE"
  "VALLIE"
  "TRUDIE"
  "STEPHANE"
  "MICHEL"
  "MAGALY"
  "MADIE"
  "KENYETTA"
  "KARREN"
  "JANETTA"
  "HERMINE"
  "HARMONY"
  "DRUCILLA"
  "DEBBI"
  "CELESTINA"
  "CANDIE"
  "BRITNI"
  "BECKIE"
  "AMINA"
  "ZITA"
  "YUN"
  "YOLANDE"
  "VIVIEN"
  "VERNETTA"
  "TRUDI"
  "SOMMER"
  "PEARLE"
  "PATRINA"
  "OSSIE"
  "NICOLLE"
  "LOYCE"
  "LETTY"
  "LARISA"
  "KATHARINA"
  "JOSELYN"
  "JONELLE"
  "JENELL"
  "IESHA"
  "HEIDE"
  "FLORINDA"
  "FLORENTINA"
  "FLO"
  "ELODIA"
  "DORINE"
  "BRUNILDA"
  "BRIGID"
  "ASHLI"
  "ARDELLA"
  "TWANA"
  "THU"
  "TARAH"
  "SUNG"
  "SHEA"
  "SHAVON"
  "SHANE"
  "SERINA"
  "RAYNA"
  "RAMONITA"
  "NGA"
  "MARGURITE"
  "LUCRECIA"
  "KOURTNEY"
  "KATI"
  "JESUS"
  "JESENIA"
  "DIAMOND"
  "CRISTA"
  "AYANA"
  "ALICA"
  "ALIA"
  "VINNIE"
  "SUELLEN"
  "ROMELIA"
  "RACHELL"
  "PIPER"
  "OLYMPIA"
  "MICHIKO"
  "KATHALEEN"
  "JOLIE"
  "JESSI"
  "JANESSA"
  "HANA"
  "HA"
  "ELEASE"
  "CARLETTA"
  "BRITANY"
  "SHONA"
  "SALOME"
  "ROSAMOND"
  "REGENA"
  "RAINA"
  "NGOC"
  "NELIA"
  "LOUVENIA"
  "LESIA"
  "LATRINA"
  "LATICIA"
  "LARHONDA"
  "JINA"
  "JACKI"
  "HOLLIS"
  "HOLLEY"
  "EMMY"
  "DEEANN"
  "CORETTA"
  "ARNETTA"
  "VELVET"
  "THALIA"
  "SHANICE"
  "NETA"
  "MIKKI"
  "MICKI"
  "LONNA"
  "LEANA"
  "LASHUNDA"
  "KILEY"
  "JOYE"
  "JACQULYN"
  "IGNACIA"
  "HYUN"
  "HIROKO"
  "HENRY"
  "HENRIETTE"
  "ELAYNE"
  "DELINDA"
  "DARNELL"
  "DAHLIA"
  "COREEN"
  "CONSUELA"
  "CONCHITA"
  "CELINE"
  "BABETTE"
  "AYANNA"
  "ANETTE"
  "ALBERTINA"
  "SKYE"
  "SHAWNEE"
  "SHANEKA"
  "QUIANA"
  "PAMELIA"
  "MIN"
  "MERRI"
  "MERLENE"
  "MARGIT"
  "KIESHA"
  "KIERA"
  "KAYLENE"
  "JODEE"
  "JENISE"
  "ERLENE"
  "EMMIE"
  "ELSE"
  "DARYL"
  "DALILA"
  "DAISEY"
  "CODY"
  "CASIE"
  "BELIA"
  "BABARA"
  "VERSIE"
  "VANESA"
  "SHELBA"
  "SHAWNDA"
  "SAM"
  "NORMAN"
  "NIKIA"
  "NAOMA"
  "MARNA"
  "MARGERET"
  "MADALINE"
  "LAWANA"
  "KINDRA"
  "JUTTA"
  "JAZMINE"
  "JANETT"
  "HANNELORE"
  "GLENDORA"
  "GERTRUD"
  "GARNETT"
  "FREEDA"
  "FREDERICA"
  "FLORANCE"
  "FLAVIA"
  "DENNIS"
  "CARLINE"
  "BEVERLEE"
  "ANJANETTE"
  "VALDA"
  "TRINITY"
  "TAMALA"
  "STEVIE"
  "SHONNA"
  "SHA"
  "SARINA"
  "ONEIDA"
  "MICAH"
  "MERILYN"
  "MARLEEN"
  "LURLINE"
  "LENNA"
  "KATHERIN"
  "JIN"
  "JENI"
  "HAE"
  "GRACIA"
  "GLADY"
  "FARAH"
  "ERIC"
  "ENOLA"
  "EMA"
  "DOMINQUE"
  "DEVONA"
  "DELANA"
  "CECILA"
  "CAPRICE"
  "ALYSHA"
  "ALI"
  "ALETHIA"
  "VENA"
  "THERESIA"
  "TAWNY"
  "SONG"
  "SHAKIRA"
  "SAMARA"
  "SACHIKO"
  "RACHELE"
  "PAMELLA"
  "NICKY"
  "MARNI"
  "MARIEL"
  "MAREN"
  "MALISA"
  "LIGIA"
  "LERA"
  "LATORIA"
  "LARAE"
  "KIMBER"
  "KATHERN"
  "KAREY"
  "JENNEFER"
  "JANETH"
  "HALINA"
  "FREDIA"
  "DELISA"
  "DEBROAH"
  "CIERA"
  "CHIN"
  "ANGELIKA"
  "ANDREE"
  "ALTHA"
  "YEN"
  "VIVAN"
  "TERRESA"
  "TANNA"
  "SUK"
  "SUDIE"
  "SOO"
  "SIGNE"
  "SALENA"
  "RONNI"
  "REBBECCA"
  "MYRTIE"
  "MCKENZIE"
  "MALIKA"
  "MAIDA"
  "LOAN"
  "LEONARDA"
  "KAYLEIGH"
  "FRANCE"
  "ETHYL"
  "ELLYN"
  "DAYLE"
  "CAMMIE"
  "BRITTNI"
  "BIRGIT"
  "AVELINA"
  "ASUNCION"
  "ARIANNA"
  "AKIKO"
  "VENICE"
  "TYESHA"
  "TONIE"
  "TIESHA"
  "TAKISHA"
  "STEFFANIE"
  "SINDY"
  "SANTANA"
  "MEGHANN"
  "MANDA"
  "MACIE"
  "LADY"
  "KELLYE"
  "KELLEE"
  "JOSLYN"
  "JASON"
  "INGER"
  "INDIRA"
  "GLINDA"
  "GLENNIS"
  "FERNANDA"
  "FAUSTINA"
  "ENEIDA"
  "ELICIA"
  "DOT"
  "DIGNA"
  "DELL"
  "ARLETTA"
  "ANDRE"
  "WILLIA"
  "TAMMARA"
  "TABETHA"
  "SHERRELL"
  "SARI"
  "REFUGIO"
  "REBBECA"
  "PAULETTA"
  "NIEVES"
  "NATOSHA"
  "NAKITA"
  "MAMMIE"
  "KENISHA"
  "KAZUKO"
  "KASSIE"
  "GARY"
  "EARLEAN"
  "DAPHINE"
  "CORLISS"
  "CLOTILDE"
  "CAROLYNE"
  "BERNETTA"
  "AUGUSTINA"
  "AUDREA"
  "ANNIS"
  "ANNABELL"
  "YAN"
  "TENNILLE"
  "TAMICA"
  "SELENE"
  "SEAN"
  "ROSANA"
  "REGENIA"
  "QIANA"
  "MARKITA"
  "MACY"
  "LEEANNE"
  "LAURINE"
  "KYM"
  "JESSENIA"
  "JANITA"
  "GEORGINE"
  "GENIE"
  "EMIKO"
  "ELVIE"
  "DEANDRA"
  "DAGMAR"
  "CORIE"
  "COLLEN"
  "CHERISH"
  "ROMAINE"
  "PORSHA"
  "PEARLENE"
  "MICHELINE"
  "MERNA"
  "MARGORIE"
  "MARGARETTA"
  "LORE"
  "KENNETH"
  "JENINE"
  "HERMINA"
  "FREDERICKA"
  "ELKE"
  "DRUSILLA"
  "DORATHY"
  "DIONE"
  "DESIRE"
  "CELENA"
  "BRIGIDA"
  "ANGELES"
  "ALLEGRA"
  "THEO"
  "TAMEKIA"
  "SYNTHIA"
  "STEPHEN"
  "SOOK"
  "SLYVIA"
  "ROSANN"
  "REATHA"
  "RAYE"
  "MARQUETTA"
  "MARGART"
  "LING"
  "LAYLA"
  "KYMBERLY"
  "KIANA"
  "KAYLEEN"
  "KATLYN"
  "KARMEN"
  "JOELLA"
  "IRINA"
  "EMELDA"
  "ELENI"
  "DETRA"
  "CLEMMIE"
  "CHERYLL"
  "CHANTELL"
  "CATHEY"
  "ARNITA"
  "ARLA"
  "ANGLE"
  "ANGELIC"
  "ALYSE"
  "ZOFIA"
  "THOMASINE"
  "TENNIE"
  "SON"
  "SHERLY"
  "SHERLEY"
  "SHARYL"
  "REMEDIOS"
  "PETRINA"
  "NICKOLE"
  "MYUNG"
  "MYRLE"
  "MOZELLA"
  "LOUANNE"
  "LISHA"
  "LATIA"
  "LANE"
  "KRYSTA"
  "JULIENNE"
  "JOEL"
  "JEANENE"
  "JACQUALINE"
  "ISAURA"
  "GWENDA"
  "EARLEEN"
  "DONALD"
  "CLEOPATRA"
  "CARLIE"
  "AUDIE"
  "ANTONIETTA"
  "ALISE"
  "ALEX"
  "VERDELL"
  "VAL"
  "TYLER"
  "TOMOKO"
  "THAO"
  "TALISHA"
  "STEVEN"
  "SO"
  "SHEMIKA"
  "SHAUN"
  "SCARLET"
  "SAVANNA"
  "SANTINA"
  "ROSIA"
  "RAEANN"
  "ODILIA"
  "NANA"
  "MINNA"
  "MAGAN"
  "LYNELLE"
  "LE"
  "KARMA"
  "JOEANN"
  "IVANA"
  "INELL"
  "ILANA"
  "HYE"
  "HONEY"
  "HEE"
  "GUDRUN"
  "FRANK"
  "DREAMA"
  "CRISSY"
  "CHANTE"
  "CARMELINA"
  "ARVILLA"
  "ARTHUR"
  "ANNAMAE"
  "ALVERA"
  "ALEIDA"
  "AARON"
  "YEE"
  "YANIRA"
  "VANDA"
  "TIANNA"
  "TAM"
  "STEFANIA"
  "SHIRA"
  "PERRY"
  "NICOL"
  "NANCIE"
  "MONSERRATE"
  "MINH"
  "MELYNDA"
  "MELANY"
  "MATTHEW"
  "LOVELLA"
  "LAURE"
  "KIRBY"
  "KACY"
  "JACQUELYNN"
  "HYON"
  "GERTHA"
  "FRANCISCO"
  "ELIANA"
  "CHRISTENA"
  "CHRISTEEN"
  "CHARISE"
  "CATERINA"
  "CARLEY"
  "CANDYCE"
  "ARLENA"
  "AMMIE"
  "YANG"
  "WILLETTE"
  "VANITA"
  "TUYET"
  "TINY"
  "SYREETA"
  "SILVA"
  "SCOTT"
  "RONALD"
  "PENNEY"
  "NYLA"
  "MICHAL"
  "MAURICE"
  "MARYAM"
  "MARYA"
  "MAGEN"
  "LUDIE"
  "LOMA"
  "LIVIA"
  "LANELL"
  "KIMBERLIE"
  "JULEE"
  "DONETTA"
  "DIEDRA"
  "DENISHA"
  "DEANE"
  "DAWNE"
  "CLARINE"
  "CHERRYL"
  "BRONWYN"
  "BRANDON"
  "ALLA"
  "VALERY"
  "TONDA"
  "SUEANN"
  "SORAYA"
  "SHOSHANA"
  "SHELA"
  "SHARLEEN"
  "SHANELLE"
  "NERISSA"
  "MICHEAL"
  "MERIDITH"
  "MELLIE"
  "MAYE"
  "MAPLE"
  "MAGARET"
  "LUIS"
  "LILI"
  "LEONILA"
  "LEONIE"
  "LEEANNA"
  "LAVONIA"
  "LAVERA"
  "KRISTEL"
  "KATHEY"
  "KATHE"
  "JUSTIN"
  "JULIAN"
  "JIMMY"
  "JANN"
  "ILDA"
  "HILDRED"
  "HILDEGARDE"
  "GENIA"
  "FUMIKO"
  "EVELIN"
  "ERMELINDA"
  "ELLY"
  "DUNG"
  "DOLORIS"
  "DIONNA"
  "DANAE"
  "BERNEICE"
  "ANNICE"
  "ALIX"
  "VERENA"
  "VERDIE"
  "TRISTAN"
  "SHAWNNA"
  "SHAWANA"
  "SHAUNNA"
  "ROZELLA"
  "RANDEE"
  "RANAE"
  "MILAGRO"
  "LYNELL"
  "LUISE"
  "LOUIE"
  "LOIDA"
  "LISBETH"
  "KARLEEN"
  "JUNITA"
  "JONA"
  "ISIS"
  "HYACINTH"
  "HEDY"
  "GWENN"
  "ETHELENE"
  "ERLINE"
  "EDWARD"
  "DONYA"
  "DOMONIQUE"
  "DELICIA"
  "DANNETTE"
  "CICELY"
  "BRANDA"
  "BLYTHE"
  "BETHANN"
  "ASHLYN"
  "ANNALEE"
  "ALLINE"
  "YUKO"
  "VELLA"
  "TRANG"
  "TOWANDA"
  "TESHA"
  "SHERLYN"
  "NARCISA"
  "MIGUELINA"
  "MERI"
  "MAYBELL"
  "MARLANA"
  "MARGUERITA"
  "MADLYN"
  "LUNA"
  "LORY"
  "LORIANN"
  "LIBERTY"
  "LEONORE"
  "LEIGHANN"
  "LAURICE"
  "LATESHA"
  "LARONDA"
  "KATRICE"
  "KASIE"
  "KARL"
  "KALEY"
  "JADWIGA"
  "GLENNIE"
  "GEARLDINE"
  "FRANCINA"
  "EPIFANIA"
  "DYAN"
  "DORIE"
  "DIEDRE"
  "DENESE"
  "DEMETRICE"
  "DELENA"
  "DARBY"
  "CRISTIE"
  "CLEORA"
  "CATARINA"
  "CARISA"
  "BERNIE"
  "BARBERA"
  "ALMETA"
  "TRULA"
  "TEREASA"
  "SOLANGE"
  "SHEILAH"
  "SHAVONNE"
  "SANORA"
  "ROCHELL"
  "MATHILDE"
  "MARGARETA"
  "MAIA"
  "LYNSEY"
  "LAWANNA"
  "LAUNA"
  "KENA"
  "KEENA"
  "KATIA"
  "JAMEY"
  "GLYNDA"
  "GAYLENE"
  "ELVINA"
  "ELANOR"
  "DANUTA"
  "DANIKA"
  "CRISTEN"
  "CORDIE"
  "COLETTA"
  "CLARITA"
  "CARMON"
  "BRYNN"
  "AZUCENA"
  "AUNDREA"
  "ANGELE"
  "YI"
  "WALTER"
  "VERLIE"
  "VERLENE"
  "TAMESHA"
  "SILVANA"
  "SEBRINA"
  "SAMIRA"
  "REDA"
  "RAYLENE"
  "PENNI"
  "PANDORA"
  "NORAH"
  "NOMA"
  "MIREILLE"
  "MELISSIA"
  "MARYALICE"
  "LARAINE"
  "KIMBERY"
  "KARYL"
  "KARINE"
  "KAM"
  "JOLANDA"
  "JOHANA"
  "JESUSA"
  "JALEESA"
  "JAE"
  "JACQUELYNE"
  "IRISH"
  "ILUMINADA"
  "HILARIA"
  "HANH"
  "GENNIE"
  "FRANCIE"
  "FLORETTA"
  "EXIE"
  "EDDA"
  "DREMA"
  "DELPHA"
  "BEV"
  "BARBAR"
  "ASSUNTA"
  "ARDELL"
  "ANNALISA"
  "ALISIA"
  "YUKIKO"
  "YOLANDO"
  "WONDA"
  "WEI"
  "WALTRAUD"
  "VETA"
  "TEQUILA"
  "TEMEKA"
  "TAMEIKA"
  "SHIRLEEN"
  "SHENITA"
  "PIEDAD"
  "OZELLA"
  "MIRTHA"
  "MARILU"
  "KIMIKO"
  "JULIANE"
  "JENICE"
  "JEN"
  "JANAY"
  "JACQUILINE"
  "HILDE"
  "FE"
  "FAE"
  "EVAN"
  "EUGENE"
  "ELOIS"
  "ECHO"
  "DEVORAH"
  "CHAU"
  "BRINDA"
  "BETSEY"
  "ARMINDA"
  "ARACELIS"
  "APRYL"
  "ANNETT"
  "ALISHIA"
  "VEOLA"
  "USHA"
  "TOSHIKO"
  "THEOLA"
  "TASHIA"
  "TALITHA"
  "SHERY"
  "RUDY"
  "RENETTA"
  "REIKO"
  "RASHEEDA"
  "OMEGA"
  "OBDULIA"
  "MIKA"
  "MELAINE"
  "MEGGAN"
  "MARTIN"
  "MARLEN"
  "MARGET"
  "MARCELINE"
  "MANA"
  "MAGDALEN"
  "LIBRADA"
  "LEZLIE"
  "LEXIE"
  "LATASHIA"
  "LASANDRA"
  "KELLE"
  "ISIDRA"
  "ISA"
  "INOCENCIA"
  "GWYN"
  "FRANCOISE"
  "ERMINIA"
  "ERINN"
  "DIMPLE"
  "DEVORA"
  "CRISELDA"
  "ARMANDA"
  "ARIE"
  "ARIANE"
  "ANGELO"
  "ANGELENA"
  "ALLEN"
  "ALIZA"
  "ADRIENE"
  "ADALINE"
  "XOCHITL"
  "TWANNA"
  "TRAN"
  "TOMIKO"
  "TAMISHA"
  "TAISHA"
  "SUSY"
  "SIU"
  "RUTHA"
  "ROXY"
  "RHONA"
  "RAYMOND"
  "OTHA"
  "NORIKO"
  "NATASHIA"
  "MERRIE"
  "MELVIN"
  "MARINDA"
  "MARIKO"
  "MARGERT"
  "LORIS"
  "LIZZETTE"
  "LEISHA"
  "KAILA"
  "KA"
  "JOANNIE"
  "JERRICA"
  "JENE"
  "JANNET"
  "JANEE"
  "JACINDA"
  "HERTA"
  "ELENORE"
  "DORETTA"
  "DELAINE"
  "DANIELL"
  "CLAUDIE"
  "CHINA"
  "BRITTA"
  "APOLONIA"
  "AMBERLY"
  "ALEASE"
  "YURI"
  "YUK"
  "WEN"
  "WANETA"
  "UTE"
  "TOMI"
  "SHARRI"
  "SANDIE"
  "ROSELLE"
  "REYNALDA"
  "RAGUEL"
  "PHYLICIA"
  "PATRIA"
  "OLIMPIA"
  "ODELIA"
  "MITZIE"
  "MITCHELL"
  "MISS"
  "MINDA"
  "MIGNON"
  "MICA"
  "MENDY"
  "MARIVEL"
  "MAILE"
  "LYNETTA"
  "LAVETTE"
  "LAURYN"
  "LATRISHA"
  "LAKIESHA"
  "KIERSTEN"
  "KARY"
  "JOSPHINE"
  "JOLYN"
  "JETTA"
  "JANISE"
  "JACQUIE"
  "IVELISSE"
  "GLYNIS"
  "GIANNA"
  "GAYNELLE"
  "EMERALD"
  "DEMETRIUS"
  "DANYELL"
  "DANILLE"
  "DACIA"
  "CORALEE"
  "CHER"
  "CEOLA"
  "BRETT"
  "BELL"
  "ARIANNE"
  "ALESHIA"
  "YUNG"
  "WILLIEMAE"
  "TROY"
  "TRINH"
  "THORA"
  "TAI"
  "SVETLANA"
  "SHERIKA"
  "SHEMEKA"
  "SHAUNDA"
  "ROSELINE"
  "RICKI"
  "MELDA"
  "MALLIE"
  "LAVONNA"
  "LATINA"
  "LARRY"
  "LAQUANDA"
  "LALA"
  "LACHELLE"
  "KLARA"
  "KANDIS"
  "JOHNA"
  "JEANMARIE"
  "JAYE"
  "HANG"
  "GRAYCE"
  "GERTUDE"
  "EMERITA"
  "EBONIE"
  "CLORINDA"
  "CHING"
  "CHERY"
  "CAROLA"
  "BREANN"
  "BLOSSOM"
  "BERNARDINE"
  "BECKI"
  "ARLETHA"
  "ARGELIA"
  "ARA"
  "ALITA"
  "YULANDA"
  "YON"
  "YESSENIA"
  "TOBI"
  "TASIA"
  "SYLVIE"
  "SHIRL"
  "SHIRELY"
  "SHERIDAN"
  "SHELLA"
  "SHANTELLE"
  "SACHA"
  "ROYCE"
  "REBECKA"
  "REAGAN"
  "PROVIDENCIA"
  "PAULENE"
  "MISHA"
  "MIKI"
  "MARLINE"
  "MARICA"
  "LORITA"
  "LATOYIA"
  "LASONYA"
  "KERSTIN"
  "KENDA"
  "KEITHA"
  "KATHRIN"
  "JAYMIE"
  "JACK"
  "GRICELDA"
  "GINETTE"
  "ERYN"
  "ELINA"
  "ELFRIEDA"
  "DANYEL"
  "CHEREE"
  "CHANELLE"
  "BARRIE"
  "AVERY"
  "AURORE"
  "ANNAMARIA"
  "ALLEEN"
  "AILENE"
  "AIDE"
  "YASMINE"
  "VASHTI"
  "VALENTINE"
  "TREASA"
  "TORY"
  "TIFFANEY"
  "SHERYLL"
  "SHARIE"
  "SHANAE"
  "SAU"
  "RAISA"
  "PA"
  "NEDA"
  "MITSUKO"
  "MIRELLA"
  "MILDA"
  "MARYANNA"
  "MARAGRET"
  "MABELLE"
  "LUETTA"
  "LORINA"
  "LETISHA"
  "LATARSHA"
  "LANELLE"
  "LAJUANA"
  "KRISSY"
  "KARLY"
  "KARENA"
  "JON"
  "JESSIKA"
  "JERICA"
  "JEANELLE"
  "JANUARY"
  "JALISA"
  "JACELYN"
  "IZOLA"
  "IVEY"
  "GREGORY"
  "EUNA"
  "ETHA"
  "DREW"
  "DOMITILA"
  "DOMINICA"
  "DAINA"
  "CREOLA"
  "CARLI"
  "CAMIE"
  "BUNNY"
  "BRITTNY"
  "ASHANTI"
  "ANISHA"
  "ALEEN"
  "ADAH"
  "YASUKO"
  "WINTER"
  "VIKI"
  "VALRIE"
  "TONA"
  "TINISHA"
  "THI"
  "TERISA"
  "TATUM"
  "TANEKA"
  "SIMONNE"
  "SHALANDA"
  "SERITA"
  "RESSIE"
  "REFUGIA"
  "PAZ"
  "OLENE"
  "NA"
  "MERRILL"
  "MARGHERITA"
  "MANDIE"
  "MAN"
  "MAIRE"
  "LYNDIA"
  "LUCI"
  "LORRIANE"
  "LORETA"
  "LEONIA"
  "LAVONA"
  "LASHAWNDA"
  "LAKIA"
  "KYOKO"
  "KRYSTINA"
  "KRYSTEN"
  "KENIA"
  "KELSI"
  "JUDE"
  "JEANICE"
  "ISOBEL"
  "GEORGIANN"
  "GENNY"
  "FELICIDAD"
  "EILENE"
  "DEON"
  "DELOISE"
  "DEEDEE"
  "DANNIE"
  "CONCEPTION"
  "CLORA"
  "CHERILYN"
  "CHANG"
  "CALANDRA"
  "BERRY"
  "ARMANDINA"
  "ANISA"
  "ULA"
  "TIMOTHY"
  "TIERA"
  "THERESSA"
  "STEPHANIA"
  "SIMA"
  "SHYLA"
  "SHONTA"
  "SHERA"
  "SHAQUITA"
  "SHALA"
  "SAMMY"
  "ROSSANA"
  "NOHEMI"
  "NERY"
  "MORIAH"
  "MELITA"
  "MELIDA"
  "MELANI"
  "MARYLYNN"
  "MARISHA"
  "MARIETTE"
  "MALORIE"
  "MADELENE"
  "LUDIVINA"
  "LORIA"
  "LORETTE"
  "LORALEE"
  "LIANNE"
  "LEON"
  "LAVENIA"
  "LAURINDA"
  "LASHON"
  "KIT"
  "KIMI"
  "KEILA"
  "KATELYNN"
  "KAI"
  "JONE"
  "JOANE"
  "JI"
  "JAYNA"
  "JANELLA"
  "JA"
  "HUE"
  "HERTHA"
  "FRANCENE"
  "ELINORE"
  "DESPINA"
  "DELSIE"
  "DEEDRA"
  "CLEMENCIA"
  "CARRY"
  "CAROLIN"
  "CARLOS"
  "BULAH"
  "BRITTANIE"
  "BOK"
  "BLONDELL"
  "BIBI"
  "BEAULAH"
  "BEATA"
  "ANNITA"
  "AGRIPINA"
  "VIRGEN"
  "VALENE"
  "UN"
  "TWANDA"
  "TOMMYE"
  "TOI"
  "TARRA"
  "TARI"
  "TAMMERA"
  "SHAKIA"
  "SADYE"
  "RUTHANNE"
  "ROCHEL"
  "RIVKA"
  "PURA"
  "NENITA"
  "NATISHA"
  "MING"
  "MERRILEE"
  "MELODEE"
  "MARVIS"
  "LUCILLA"
  "LEENA"
  "LAVETA"
  "LARITA"
  "LANIE"
  "KEREN"
  "ILEEN"
  "GEORGEANN"
  "GENNA"
  "GENESIS"
  "FRIDA"
  "EWA"
  "EUFEMIA"
  "EMELY"
  "ELA"
  "EDYTH"
  "DEONNA"
  "DEADRA"
  "DARLENA"
  "CHANELL"
  "CHAN"
  "CATHERN"
  "CASSONDRA"
  "CASSAUNDRA"
  "BERNARDA"
  "BERNA"
  "ARLINDA"
  "ANAMARIA"
  "ALBERT"
  "WESLEY"
  "VERTIE"
  "VALERI"
  "TORRI"
  "TATYANA"
  "STASIA"
  "SHERISE"
  "SHERILL"
  "SEASON"
  "SCOTTIE"
  "SANDA"
  "RUTHE"
  "ROSY"
  "ROBERTO"
  "ROBBI"
  "RANEE"
  "QUYEN"
  "PEARLY"
  "PALMIRA"
  "ONITA"
  "NISHA"
  "NIESHA"
  "NIDA"
  "NEVADA"
  "NAM"
  "MERLYN"
  "MAYOLA"
  "MARYLOUISE"
  "MARYLAND"
  "MARX"
  "MARTH"
  "MARGENE"
  "MADELAINE"
  "LONDA"
  "LEONTINE"
  "LEOMA"
  "LEIA"
  "LAWRENCE"
  "LAURALEE"
  "LANORA"
  "LAKITA"
  "KIYOKO"
  "KETURAH"
  "KATELIN"
  "KAREEN"
  "JONIE"
  "JOHNETTE"
  "JENEE"
  "JEANETT"
  "IZETTA"
  "HIEDI"
  "HEIKE"
  "HASSIE"
  "HAROLD"
  "GIUSEPPINA"
  "GEORGANN"
  "FIDELA"
  "FERNANDE"
  "ELWANDA"
  "ELLAMAE"
  "ELIZ"
  "DUSTI"
  "DOTTY"
  "CYNDY"
  "CORALIE"
  "CELESTA"
  "ARGENTINA"
  "ALVERTA"
  "XENIA"
  "WAVA"
  "VANETTA"
  "TORRIE"
  "TASHINA"
  "TANDY"
  "TAMBRA"
  "TAMA"
  "STEPANIE"
  "SHILA"
  "SHAUNTA"
  "SHARAN"
  "SHANIQUA"
  "SHAE"
  "SETSUKO"
  "SERAFINA"
  "SANDEE"
  "ROSAMARIA"
  "PRISCILA"
  "OLINDA"
  "NADENE"
  "MUOI"
  "MICHELINA"
  "MERCEDEZ"
  "MARYROSE"
  "MARIN"
  "MARCENE"
  "MAO"
  "MAGALI"
  "MAFALDA"
  "LOGAN"
  "LINN"
  "LANNIE"
  "KAYCE"
  "KAROLINE"
  "KAMILAH"
  "KAMALA"
  "JUSTA"
  "JOLINE"
  "JENNINE"
  "JACQUETTA"
  "IRAIDA"
  "GERALD"
  "GEORGEANNA"
  "FRANCHESCA"
  "FAIRY"
  "EMELINE"
  "ELANE"
  "EHTEL"
  "EARLIE"
  "DULCIE"
  "DALENE"
  "CRIS"
  "CLASSIE"
  "CHERE"
  "CHARIS"
  "CAROYLN"
  "CARMINA"
  "CARITA"
  "BRIAN"
  "BETHANIE"
  "AYAKO"
  "ARICA"
  "AN"
  "ALYSA"
  "ALESSANDRA"
  "AKILAH"
  "ADRIEN"
  "ZETTA"
  "YOULANDA"
  "YELENA"
  "YAHAIRA"
  "XUAN"
  "WENDOLYN"
  "VICTOR"
  "TIJUANA"
  "TERRELL"
  "TERINA"
  "TERESIA"
  "SUZI"
  "SUNDAY"
  "SHERELL"
  "SHAVONDA"
  "SHAUNTE"
  "SHARDA"
  "SHAKITA"
  "SENA"
  "RYANN"
  "RUBI"
  "RIVA"
  "REGINIA"
  "REA"
  "RACHAL"
  "PARTHENIA"
  "PAMULA"
  "MONNIE"
  "MONET"
  "MICHAELE"
  "MELIA"
  "MARINE"
  "MALKA"
  "MAISHA"
  "LISANDRA"
  "LEO"
  "LEKISHA"
  "LEAN"
  "LAURENCE"
  "LAKENDRA"
  "KRYSTIN"
  "KORTNEY"
  "KIZZIE"
  "KITTIE"
  "KERA"
  "KENDAL"
  "KEMBERLY"
  "KANISHA"
  "JULENE"
  "JULE"
  "JOSHUA"
  "JOHANNE"
  "JEFFREY"
  "JAMEE"
  "HAN"
  "HALLEY"
  "GIDGET"
  "GALINA"
  "FREDRICKA"
  "FLETA"
  "FATIMAH"
  "EUSEBIA"
  "ELZA"
  "ELEONORE"
  "DORTHEY"
  "DORIA"
  "DONELLA"
  "DINORAH"
  "DELORSE"
  "CLARETHA"
  "CHRISTINIA"
  "CHARLYN"
  "BONG"
  "BELKIS"
  "AZZIE"
  "ANDERA"
  "AIKO"
  "ADENA"
  "YER"
  "YAJAIRA"
  "WAN"
  "VANIA"
  "ULRIKE"
  "TOSHIA"
  "TIFANY"
  "STEFANY"
  "SHIZUE"
  "SHENIKA"
  "SHAWANNA"
  "SHAROLYN"
  "SHARILYN"
  "SHAQUANA"
  "SHANTAY"
  "SEE"
  "ROZANNE"
  "ROSELEE"
  "RICKIE"
  "REMONA"
  "REANNA"
  "RAELENE"
  "QUINN"
  "PHUNG"
  "PETRONILA"
  "NATACHA"
  "NANCEY"
  "MYRL"
  "MIYOKO"
  "MIESHA"
  "MERIDETH"
  "MARVELLA"
  "MARQUITTA"
  "MARHTA"
  "MARCHELLE"
  "LIZETH"
  "LIBBIE"
  "LAHOMA"
  "LADAWN"
  "KINA"
  "KATHELEEN"
  "KATHARYN"
  "KARISA"
  "KALEIGH"
  "JUNIE"
  "JULIEANN"
  "JOHNSIE"
  "JANEAN"
  "JAIMEE"
  "JACKQUELINE"
  "HISAKO"
  "HERMA"
  "HELAINE"
  "GWYNETH"
  "GLENN"
  "GITA"
  "EUSTOLIA"
  "EMELINA"
  "ELIN"
  "EDRIS"
  "DONNETTE"
  "DONNETTA"
  "DIERDRE"
  "DENAE"
  "DARCEL"
  "CLAUDE"
  "CLARISA"
  "CINDERELLA"
  "CHIA"
  "CHARLESETTA"
  "CHARITA"
  "CELSA"
  "CASSY"
  "CASSI"
  "CARLEE"
  "BRUNA"
  "BRITTANEY"
  "BRANDE"
  "BILLI"
  "BAO"
  "ANTONETTA"
  "ANGLA"
  "ANGELYN"
  "ANALISA"
  "ALANE"
  "WENONA"
  "WENDIE"
  "VERONIQUE"
  "VANNESA"
  "TOBIE"
  "TEMPIE"
  "SUMIKO"
  "SULEMA"
  "SPARKLE"
  "SOMER"
  "SHEBA"
  "SHAYNE"
  "SHARICE"
  "SHANEL"
  "SHALON"
  "SAGE"
  "ROY"
  "ROSIO"
  "ROSELIA"
  "RENAY"
  "REMA"
  "REENA"
  "PORSCHE"
  "PING"
  "PEG"
  "OZIE"
  "ORETHA"
  "ORALEE"
  "ODA"
  "NU"
  "NGAN"
  "NAKESHA"
  "MILLY"
  "MARYBELLE"
  "MARLIN"
  "MARIS"
  "MARGRETT"
  "MARAGARET"
  "MANIE"
  "LURLENE"
  "LILLIA"
  "LIESELOTTE"
  "LAVELLE"
  "LASHAUNDA"
  "LAKEESHA"
  "KEITH"
  "KAYCEE"
  "KALYN"
  "JOYA"
  "JOETTE"
  "JENAE"
  "JANIECE"
  "ILLA"
  "GRISEL"
  "GLAYDS"
  "GENEVIE"
  "GALA"
  "FREDDA"
  "FRED"
  "ELMER"
  "ELEONOR"
  "DEBERA"
  "DEANDREA"
  "DAN"
  "CORRINNE"
  "CORDIA"
  "CONTESSA"
  "COLENE"
  "CLEOTILDE"
  "CHARLOTT"
  "CHANTAY"
  "CECILLE"
  "BEATRIS"
  "AZALEE"
  "ARLEAN"
  "ARDATH"
  "ANJELICA"
  "ANJA"
  "ALFREDIA"
  "ALEISHA"
  "ADAM"
  "ZADA"
  "YUONNE"
  "XIAO"
  "WILLODEAN"
  "WHITLEY"
  "VENNIE"
  "VANNA"
  "TYISHA"
  "TOVA"
  "TORIE"
  "TONISHA"
  "TILDA"
  "TIEN"
  "TEMPLE"
  "SIRENA"
  "SHERRIL"
  "SHANTI"
  "SHAN"
  "SENAIDA"
  "SAMELLA"
  "ROBBYN"
  "RENDA"
  "REITA"
  "PHEBE"
  "PAULITA"
  "NOBUKO"
  "NGUYET"
  "NEOMI"
  "MOON"
  "MIKAELA"
  "MELANIA"
  "MAXIMINA"
  "MARG"
  "MAISIE"
  "LYNNA"
  "LILLI"
  "LAYNE"
  "LASHAUN"
  "LAKENYA"
  "LAEL"
  "KIRSTIE"
  "KATHLINE"
  "KASHA"
  "KARLYN"
  "KARIMA"
  "JOVAN"
  "JOSEFINE"
  "JENNELL"
  "JACQUI"
  "JACKELYN"
  "HYO"
  "HIEN"
  "GRAZYNA"
  "FLORRIE"
  "FLORIA"
  "ELEONORA"
  "DWANA"
  "DORLA"
  "DONG"
  "DELMY"
  "DEJA"
  "DEDE"
  "DANN"
  "CRYSTA"
  "CLELIA"
  "CLARIS"
  "CLARENCE"
  "CHIEKO"
  "CHERLYN"
  "CHERELLE"
  "CHARMAIN"
  "CHARA"
  "CAMMY"
  "BEE"
  "ARNETTE"
  "ARDELLE"
  "ANNIKA"
  "AMIEE"
  "AMEE"
  "ALLENA"
  "YVONE"
  "YUKI"
  "YOSHIE"
  "YEVETTE"
  "YAEL"
  "WILLETTA"
  "VONCILE"
  "VENETTA"
  "TULA"
  "TONETTE"
  "TIMIKA"
  "TEMIKA"
  "TELMA"
  "TEISHA"
  "TAREN"
  "TA"
  "STACEE"
  "SHIN"
  "SHAWNTA"
  "SATURNINA"
  "RICARDA"
  "POK"
  "PASTY"
  "ONIE"
  "NUBIA"
  "MORA"
  "MIKE"
  "MARIELLE"
  "MARIELLA"
  "MARIANELA"
  "MARDELL"
  "MANY"
  "LUANNA"
  "LOISE"
  "LISABETH"
  "LINDSY"
  "LILLIANA"
  "LILLIAM"
  "LELAH"
  "LEIGHA"
  "LEANORA"
  "LANG"
  "KRISTEEN"
  "KHALILAH"
  "KEELEY"
  "KANDRA"
  "JUNKO"
  "JOAQUINA"
  "JERLENE"
  "JANI"
  "JAMIKA"
  "JAME"
  "HSIU"
  "HERMILA"
  "GOLDEN"
  "GENEVIVE"
  "EVIA"
  "EUGENA"
  "EMMALINE"
  "ELFREDA"
  "ELENE"
  "DONETTE"
  "DELCIE"
  "DEEANNA"
  "DARCEY"
  "CUC"
  "CLARINDA"
  "CIRA"
  "CHAE"
  "CELINDA"
  "CATHERYN"
  "CATHERIN"
  "CASIMIRA"
  "CARMELIA"
  "CAMELLIA"
  "BREANA"
  "BOBETTE"
  "BERNARDINA"
  "BEBE"
  "BASILIA"
  "ARLYNE"
  "AMAL"
  "ALAYNA"
  "ZONIA"
  "ZENIA"
  "YURIKO"
  "YAEKO"
  "WYNELL"
  "WILLOW"
  "WILLENA"
  "VERNIA"
  "TU"
  "TRAVIS"
  "TORA"
  "TERRILYN"
  "TERICA"
  "TENESHA"
  "TAWNA"
  "TAJUANA"
  "TAINA"
  "STEPHNIE"
  "SONA"
  "SOL"
  "SINA"
  "SHONDRA"
  "SHIZUKO"
  "SHERLENE"
  "SHERICE"
  "SHARIKA"
  "ROSSIE"
  "ROSENA"
  "RORY"
  "RIMA"
  "RIA"
  "RHEBA"
  "RENNA"
  "PETER"
  "NATALYA"
  "NANCEE"
  "MELODI"
  "MEDA"
  "MAXIMA"
  "MATHA"
  "MARKETTA"
  "MARICRUZ"
  "MARCELENE"
  "MALVINA"
  "LUBA"
  "LOUETTA"
  "LEIDA"
  "LECIA"
  "LAURAN"
  "LASHAWNA"
  "LAINE"
  "KHADIJAH"
  "KATERINE"
  "KASI"
  "KALLIE"
  "JULIETTA"
  "JESUSITA"
  "JESTINE"
  "JESSIA"
  "JEREMY"
  "JEFFIE"
  "JANYCE"
  "ISADORA"
  "GEORGIANNE"
  "FIDELIA"
  "EVITA"
  "EURA"
  "EULAH"
  "ESTEFANA"
  "ELSY"
  "ELIZABET"
  "ELADIA"
  "DODIE"
  "DION"
  "DIA"
  "DENISSE"
  "DELORAS"
  "DELILA"
  "DAYSI"
  "DAKOTA"
  "CURTIS"
  "CRYSTLE"
  "CONCHA"
  "COLBY"
  "CLARETTA"
  "CHU"
  "CHRISTIA"
  "CHARLSIE"
  "CHARLENA"
  "CARYLON"
  "BETTYANN"
  "ASLEY"
  "ASHLEA"
  "AMIRA"
  "AI"
  "AGUEDA"
  "AGNUS"
  "YUETTE"
  "VINITA"
  "VICTORINA"
  "TYNISHA"
  "TREENA"
  "TOCCARA"
  "TISH"
  "THOMASENA"
  "TEGAN"
  "SOILA"
  "SHILOH"
  "SHENNA"
  "SHARMAINE"
  "SHANTAE"
  "SHANDI"
  "SEPTEMBER"
  "SARAN"
  "SARAI"
  "SANA"
  "SAMUEL"
  "SALLEY"
  "ROSETTE"
  "ROLANDE"
  "REGINE"
  "OTELIA"
  "OSCAR"
  "OLEVIA"
  "NICHOLLE"
  "NECOLE"
  "NAIDA"
  "MYRTA"
  "MYESHA"
  "MITSUE"
  "MINTA"
  "MERTIE"
  "MARGY"
  "MAHALIA"
  "MADALENE"
  "LOVE"
  "LOURA"
  "LOREAN"
  "LEWIS"
  "LESHA"
  "LEONIDA"
  "LENITA"
  "LAVONE"
  "LASHELL"
  "LASHANDRA"
  "LAMONICA"
  "KIMBRA"
  "KATHERINA"
  "KARRY"
  "KANESHA"
  "JULIO"
  "JONG"
  "JENEVA"
  "JAQUELYN"
  "HWA"
  "GILMA"
  "GHISLAINE"
  "GERTRUDIS"
  "FRANSISCA"
  "FERMINA"
  "ETTIE"
  "ETSUKO"
  "ELLIS"
  "ELLAN"
  "ELIDIA"
  "EDRA"
  "DORETHEA"
  "DOREATHA"
  "DENYSE"
  "DENNY"
  "DEETTA"
  "DAINE"
  "CYRSTAL"
  "CORRIN"
  "CAYLA"
  "CARLITA"
  "CAMILA"
  "BURMA"
  "BULA"
  "BUENA"
  "BLAKE"
  "BARABARA"
  "AVRIL"
  "AUSTIN"
  "ALAINE"
  "ZANA"
  "WILHEMINA"
  "WANETTA"
  "VIRGIL"
  "VI"
  "VERONIKA"
  "VERNON"
  "VERLINE"
  "VASILIKI"
  "TONITA"
  "TISA"
  "TEOFILA"
  "TAYNA"
  "TAUNYA"
  "TANDRA"
  "TAKAKO"
  "SUNNI"
  "SUANNE"
  "SIXTA"
  "SHARELL"
  "SEEMA"
  "RUSSELL"
  "ROSENDA"
  "ROBENA"
  "RAYMONDE"
  "PEI"
  "PAMILA"
  "OZELL"
  "NEIDA"
  "NEELY"
  "MISTIE"
  "MICHA"
  "MERISSA"
  "MAURITA"
  "MARYLN"
  "MARYETTA"
  "MARSHALL"
  "MARCELL"
  "MALENA"
  "MAKEDA"
  "MADDIE"
  "LOVETTA"
  "LOURIE"
  "LORRINE"
  "LORILEE"
  "LESTER"
  "LAURENA"
  "LASHAY"
  "LARRAINE"
  "LAREE"
  "LACRESHA"
  "KRISTLE"
  "KRISHNA"
  "KEVA"
  "KEIRA"
  "KAROLE"
  "JOIE"
  "JINNY"
  "JEANNETTA"
  "JAMA"
  "HEIDY"
  "GILBERTE"
  "GEMA"
  "FAVIOLA"
  "EVELYNN"
  "ENDA"
  "ELLI"
  "ELLENA"
  "DIVINA"
  "DAGNY"
  "COLLENE"
  "CODI"
  "CINDIE"
  "CHASSIDY"
  "CHASIDY"
  "CATRICE"
  "CATHERINA"
  "CASSEY"
  "CAROLL"
  "CARLENA"
  "CANDRA"
  "CALISTA"
  "BRYANNA"
  "BRITTENY"
  "BEULA"
  "BARI"
  "AUDRIE"
  "AUDRIA"
  "ARDELIA"
  "ANNELLE"
  "ANGILA"
  "ALONA"
  "ALLYN"
  "DOUGLAS"
  "ROGER"
  "JONATHAN"
  "RALPH"
  "NICHOLAS"
  "BENJAMIN"
  "BRUCE"
  "HARRY"
  "WAYNE"
  "STEVE"
  "HOWARD"
  "ERNEST"
  "PHILLIP"
  "TODD"
  "CRAIG"
  "ALAN"
  "PHILIP"
  "EARL"
  "DANNY"
  "BRYAN"
  "STANLEY"
  "LEONARD"
  "NATHAN"
  "MANUEL"
  "RODNEY"
  "MARVIN"
  "VINCENT"
  "JEFFERY"
  "JEFF"
  "CHAD"
  "JACOB"
  "ALFRED"
  "BRADLEY"
  "HERBERT"
  "FREDERICK"
  "EDWIN"
  "DON"
  "RICKY"
  "RANDALL"
  "BARRY"
  "BERNARD"
  "LEROY"
  "MARCUS"
  "THEODORE"
  "CLIFFORD"
  "MIGUEL"
  "JIM"
  "TOM"
  "CALVIN"
  "BILL"
  "LLOYD"
  "DEREK"
  "WARREN"
  "DARRELL"
  "JEROME"
  "FLOYD"
  "ALVIN"
  "TIM"
  "GORDON"
  "GREG"
  "JORGE"
  "DUSTIN"
  "PEDRO"
  "DERRICK"
  "ZACHARY"
  "HERMAN"
  "GLEN"
  "HECTOR"
  "RICARDO"
  "RICK"
  "BRENT"
  "RAMON"
  "GILBERT"
  "MARC"
  "REGINALD"
  "RUBEN"
  "NATHANIEL"
  "RAFAEL"
  "EDGAR"
  "MILTON"
  "RAUL"
  "BEN"
  "CHESTER"
  "DUANE"
  "FRANKLIN"
  "BRAD"
  "RON"
  "ROLAND"
  "ARNOLD"
  "HARVEY"
  "JARED"
  "ERIK"
  "DARRYL"
  "NEIL"
  "JAVIER"
  "FERNANDO"
  "CLINTON"
  "TED"
  "MATHEW"
  "TYRONE"
  "DARREN"
  "LANCE"
  "KURT"
  "ALLAN"
  "NELSON"
  "GUY"
  "CLAYTON"
  "HUGH"
  "MAX"
  "DWAYNE"
  "DWIGHT"
  "ARMANDO"
  "FELIX"
  "EVERETT"
  "IAN"
  "WALLACE"
  "KEN"
  "BOB"
  "ALFREDO"
  "ALBERTO"
  "DAVE"
  "IVAN"
  "BYRON"
  "ISAAC"
  "MORRIS"
  "CLIFTON"
  "WILLARD"
  "ROSS"
  "ANDY"
  "SALVADOR"
  "KIRK"
  "SERGIO"
  "SETH"
  "KENT"
  "TERRANCE"
  "EDUARDO"
  "TERRENCE"
  "ENRIQUE"
  "WADE"
  "STUART"
  "FREDRICK"
  "ARTURO"
  "ALEJANDRO"
  "NICK"
  "LUTHER"
  "WENDELL"
  "JEREMIAH"
  "JULIUS"
  "OTIS"
  "TREVOR"
  "OLIVER"
  "LUKE"
  "HOMER"
  "GERARD"
  "DOUG"
  "KENNY"
  "HUBERT"
  "LYLE"
  "MATT"
  "ALFONSO"
  "ORLANDO"
  "REX"
  "CARLTON"
  "ERNESTO"
  "NEAL"
  "PABLO"
  "LORENZO"
  "OMAR"
  "WILBUR"
  "GRANT"
  "HORACE"
  "RODERICK"
  "ABRAHAM"
  "WILLIS"
  "RICKEY"
  "ANDRES"
  "CESAR"
  "JOHNATHAN"
  "MALCOLM"
  "RUDOLPH"
  "DAMON"
  "KELVIN"
  "PRESTON"
  "ALTON"
  "ARCHIE"
  "MARCO"
  "WM"
  "PETE"
  "RANDOLPH"
  "GARRY"
  "GEOFFREY"
  "JONATHON"
  "FELIPE"
  "GERARDO"
  "ED"
  "DOMINIC"
  "DELBERT"
  "COLIN"
  "GUILLERMO"
  "EARNEST"
  "LUCAS"
  "BENNY"
  "SPENCER"
  "RODOLFO"
  "MYRON"
  "EDMUND"
  "GARRETT"
  "SALVATORE"
  "CEDRIC"
  "LOWELL"
  "GREGG"
  "SHERMAN"
  "WILSON"
  "SYLVESTER"
  "ROOSEVELT"
  "ISRAEL"
  "JERMAINE"
  "FORREST"
  "WILBERT"
  "LELAND"
  "SIMON"
  "CLARK"
  "IRVING"
  "BRYANT"
  "OWEN"
  "RUFUS"
  "WOODROW"
  "KRISTOPHER"
  "MACK"
  "LEVI"
  "MARCOS"
  "GUSTAVO"
  "JAKE"
  "LIONEL"
  "GILBERTO"
  "CLINT"
  "NICOLAS"
  "ISMAEL"
  "ORVILLE"
  "ERVIN"
  "DEWEY"
  "AL"
  "WILFRED"
  "JOSH"
  "HUGO"
  "IGNACIO"
  "CALEB"
  "TOMAS"
  "SHELDON"
  "ERICK"
  "STEWART"
  "DOYLE"
  "DARREL"
  "ROGELIO"
  "TERENCE"
  "SANTIAGO"
  "ALONZO"
  "ELIAS"
  "BERT"
  "ELBERT"
  "RAMIRO"
  "CONRAD"
  "NOAH"
  "GRADY"
  "PHIL"
  "CORNELIUS"
  "LAMAR"
  "ROLANDO"
  "CLAY"
  "PERCY"
  "DEXTER"
  "BRADFORD"
  "DARIN"
  "AMOS"
  "MOSES"
  "IRVIN"
  "SAUL"
  "ROMAN"
  "RANDAL"
  "TIMMY"
  "DARRIN"
  "WINSTON"
  "BRENDAN"
  "ABEL"
  "DOMINICK"
  "BOYD"
  "EMILIO"
  "ELIJAH"
  "DOMINGO"
  "EMMETT"
  "MARLON"
  "EMANUEL"
  "JERALD"
  "EDMOND"
  "EMIL"
  "DEWAYNE"
  "WILL"
  "OTTO"
  "TEDDY"
  "REYNALDO"
  "BRET"
  "JESS"
  "TRENT"
  "HUMBERTO"
  "EMMANUEL"
  "STEPHAN"
  "VICENTE"
  "LAMONT"
  "GARLAND"
  "MILES"
  "EFRAIN"
  "HEATH"
  "RODGER"
  "HARLEY"
  "ETHAN"
  "ELDON"
  "ROCKY"
  "PIERRE"
  "JUNIOR"
  "FREDDY"
  "ELI"
  "BRYCE"
  "ANTOINE"
  "STERLING"
  "CHASE"
  "GROVER"
  "ELTON"
  "CLEVELAND"
  "DYLAN"
  "CHUCK"
  "DAMIAN"
  "REUBEN"
  "STAN"
  "AUGUST"
  "LEONARDO"
  "JASPER"
  "RUSSEL"
  "ERWIN"
  "BENITO"
  "HANS"
  "MONTE"
  "BLAINE"
  "ERNIE"
  "CURT"
  "QUENTIN"
  "AGUSTIN"
  "MURRAY"
  "JAMAL"
  "ADOLFO"
  "HARRISON"
  "TYSON"
  "BURTON"
  "BRADY"
  "ELLIOTT"
  "WILFREDO"
  "BART"
  "JARROD"
  "VANCE"
  "DENIS"
  "DAMIEN"
  "JOAQUIN"
  "HARLAN"
  "DESMOND"
  "ELLIOT"
  "DARWIN"
  "GREGORIO"
  "BUDDY"
  "XAVIER"
  "KERMIT"
  "ROSCOE"
  "ESTEBAN"
  "ANTON"
  "SOLOMON"
  "SCOTTY"
  "NORBERT"
  "ELVIN"
  "WILLIAMS"
  "NOLAN"
  "ROD"
  "QUINTON"
  "HAL"
  "BRAIN"
  "ROB"
  "ELWOOD"
  "KENDRICK"
  "DARIUS"
  "MOISES"
  "FIDEL"
  "THADDEUS"
  "CLIFF"
  "MARCEL"
  "JACKSON"
  "RAPHAEL"
  "BRYON"
  "ARMAND"
  "ALVARO"
  "JEFFRY"
  "DANE"
  "JOESPH"
  "THURMAN"
  "NED"
  "RUSTY"
  "MONTY"
  "FABIAN"
  "REGGIE"
  "MASON"
  "GRAHAM"
  "ISAIAH"
  "VAUGHN"
  "GUS"
  "LOYD"
  "DIEGO"
  "ADOLPH"
  "NORRIS"
  "MILLARD"
  "ROCCO"
  "GONZALO"
  "DERICK"
  "RODRIGO"
  "WILEY"
  "RIGOBERTO"
  "ALPHONSO"
  "TY"
  "NOE"
  "VERN"
  "REED"
  "JEFFERSON"
  "ELVIS"
  "BERNARDO"
  "MAURICIO"
  "HIRAM"
  "DONOVAN"
  "BASIL"
  "RILEY"
  "NICKOLAS"
  "MAYNARD"
  "SCOT"
  "VINCE"
  "QUINCY"
  "EDDY"
  "SEBASTIAN"
  "FEDERICO"
  "ULYSSES"
  "HERIBERTO"
  "DONNELL"
  "COLE"
  "DAVIS"
  "GAVIN"
  "EMERY"
  "WARD"
  "ROMEO"
  "JAYSON"
  "DANTE"
  "CLEMENT"
  "COY"
  "MAXWELL"
  "JARVIS"
  "BRUNO"
  "ISSAC"
  "DUDLEY"
  "BROCK"
  "SANFORD"
  "CARMELO"
  "BARNEY"
  "NESTOR"
  "STEFAN"
  "DONNY"
  "ART"
  "LINWOOD"
  "BEAU"
  "WELDON"
  "GALEN"
  "ISIDRO"
  "TRUMAN"
  "DELMAR"
  "JOHNATHON"
  "SILAS"
  "FREDERIC"
  "DICK"
  "IRWIN"
  "MERLIN"
  "CHARLEY"
  "MARCELINO"
  "HARRIS"
  "CARLO"
  "TRENTON"
  "KURTIS"
  "HUNTER"
  "AURELIO"
  "WINFRED"
  "VITO"
  "COLLIN"
  "DENVER"
  "CARTER"
  "LEONEL"
  "EMORY"
  "PASQUALE"
  "MOHAMMAD"
  "MARIANO"
  "DANIAL"
  "LANDON"
  "DIRK"
  "BRANDEN"
  "ADAN"
  "BUFORD"
  "GERMAN"
  "WILMER"
  "EMERSON"
  "ZACHERY"
  "FLETCHER"
  "JACQUES"
  "ERROL"
  "DALTON"
  "MONROE"
  "JOSUE"
  "EDWARDO"
  "BOOKER"
  "WILFORD"
  "SONNY"
  "SHELTON"
  "CARSON"
  "THERON"
  "RAYMUNDO"
  "DAREN"
  "HOUSTON"
  "ROBBY"
  "LINCOLN"
  "GENARO"
  "BENNETT"
  "OCTAVIO"
  "CORNELL"
  "HUNG"
  "ARRON"
  "ANTONY"
  "HERSCHEL"
  "GIOVANNI"
  "GARTH"
  "CYRUS"
  "CYRIL"
  "RONNY"
  "LON"
  "FREEMAN"
  "DUNCAN"
  "KENNITH"
  "CARMINE"
  "ERICH"
  "CHADWICK"
  "WILBURN"
  "RUSS"
  "REID"
  "MYLES"
  "ANDERSON"
  "MORTON"
  "JONAS"
  "FOREST"
  "MITCHEL"
  "MERVIN"
  "ZANE"
  "RICH"
  "JAMEL"
  "LAZARO"
  "ALPHONSE"
  "RANDELL"
  "MAJOR"
  "JARRETT"
  "BROOKS"
  "ABDUL"
  "LUCIANO"
  "SEYMOUR"
  "EUGENIO"
  "MOHAMMED"
  "VALENTIN"
  "CHANCE"
  "ARNULFO"
  "LUCIEN"
  "FERDINAND"
  "THAD"
  "EZRA"
  "ALDO"
  "RUBIN"
  "ROYAL"
  "MITCH"
  "EARLE"
  "ABE"
  "WYATT"
  "MARQUIS"
  "LANNY"
  "KAREEM"
  "JAMAR"
  "BORIS"
  "ISIAH"
  "EMILE"
  "ELMO"
  "ARON"
  "LEOPOLDO"
  "EVERETTE"
  "JOSEF"
  "ELOY"
  "RODRICK"
  "REINALDO"
  "LUCIO"
  "JERROD"
  "WESTON"
  "HERSHEL"
  "BARTON"
  "PARKER"
  "LEMUEL"
  "BURT"
  "JULES"
  "GIL"
  "ELISEO"
  "AHMAD"
  "NIGEL"
  "EFREN"
  "ANTWAN"
  "ALDEN"
  "MARGARITO"
  "COLEMAN"
  "DINO"
  "OSVALDO"
  "LES"
  "DEANDRE"
  "NORMAND"
  "KIETH"
  "TREY"
  "NORBERTO"
  "NAPOLEON"
  "JEROLD"
  "FRITZ"
  "ROSENDO"
  "MILFORD"
  "CHRISTOPER"
  "ALFONZO"
  "LYMAN"
  "JOSIAH"
  "BRANT"
  "WILTON"
  "RICO"
  "JAMAAL"
  "DEWITT"
  "BRENTON"
  "OLIN"
  "FOSTER"
  "FAUSTINO"
  "CLAUDIO"
  "JUDSON"
  "GINO"
  "EDGARDO"
  "ALEC"
  "TANNER"
  "JARRED"
  "DONN"
  "TAD"
  "PRINCE"
  "PORFIRIO"
  "ODIS"
  "LENARD"
  "CHAUNCEY"
  "TOD"
  "MEL"
  "MARCELO"
  "KORY"
  "AUGUSTUS"
  "KEVEN"
  "HILARIO"
  "BUD"
  "SAL"
  "ORVAL"
  "MAURO"
  "ZACHARIAH"
  "OLEN"
  "ANIBAL"
  "MILO"
  "JED"
  "DILLON"
  "AMADO"
  "NEWTON"
  "LENNY"
  "RICHIE"
  "HORACIO"
  "BRICE"
  "MOHAMED"
  "DELMER"
  "DARIO"
  "REYES"
  "MAC"
  "JONAH"
  "JERROLD"
  "ROBT"
  "HANK"
  "RUPERT"
  "ROLLAND"
  "KENTON"
  "DAMION"
  "ANTONE"
  "WALDO"
  "FREDRIC"
  "BRADLY"
  "KIP"
  "BURL"
  "WALKER"
  "TYREE"
  "JEFFEREY"
  "AHMED"
  "WILLY"
  "STANFORD"
  "OREN"
  "NOBLE"
  "MOSHE"
  "MIKEL"
  "ENOCH"
  "BRENDON"
  "QUINTIN"
  "JAMISON"
  "FLORENCIO"
  "DARRICK"
  "TOBIAS"
  "HASSAN"
  "GIUSEPPE"
  "DEMARCUS"
  "CLETUS"
  "TYRELL"
  "LYNDON"
  "KEENAN"
  "WERNER"
  "GERALDO"
  "COLUMBUS"
  "CHET"
  "BERTRAM"
  "MARKUS"
  "HUEY"
  "HILTON"
  "DWAIN"
  "DONTE"
  "TYRON"
  "OMER"
  "ISAIAS"
  "HIPOLITO"
  "FERMIN"
  "ADALBERTO"
  "BO"
  "BARRETT"
  "TEODORO"
  "MCKINLEY"
  "MAXIMO"
  "GARFIELD"
  "RALEIGH"
  "LAWERENCE"
  "ABRAM"
  "RASHAD"
  "KING"
  "EMMITT"
  "DARON"
  "SAMUAL"
  "MIQUEL"
  "EUSEBIO"
  "DOMENIC"
  "DARRON"
  "BUSTER"
  "WILBER"
  "RENATO"
  "JC"
  "HOYT"
  "HAYWOOD"
  "EZEKIEL"
  "CHAS"
  "FLORENTINO"
  "ELROY"
  "CLEMENTE"
  "ARDEN"
  "NEVILLE"
  "EDISON"
  "DESHAWN"
  "NATHANIAL"
  "JORDON"
  "DANILO"
  "CLAUD"
  "SHERWOOD"
  "RAYMON"
  "RAYFORD"
  "CRISTOBAL"
  "AMBROSE"
  "TITUS"
  "HYMAN"
  "FELTON"
  "EZEQUIEL"
  "ERASMO"
  "STANTON"
  "LONNY"
  "LEN"
  "IKE"
  "MILAN"
  "LINO"
  "JAROD"
  "HERB"
  "ANDREAS"
  "WALTON"
  "RHETT"
  "PALMER"
  "DOUGLASS"
  "CORDELL"
  "OSWALDO"
  "ELLSWORTH"
  "VIRGILIO"
  "TONEY"
  "NATHANAEL"
  "DEL"
  "BENEDICT"
  "MOSE"
  "JOHNSON"
  "ISREAL"
  "GARRET"
  "FAUSTO"
  "ASA"
  "ARLEN"
  "ZACK"
  "WARNER"
  "MODESTO"
  "FRANCESCO"
  "MANUAL"
  "GAYLORD"
  "GASTON"
  "FILIBERTO"
  "DEANGELO"
  "MICHALE"
  "GRANVILLE"
  "WES"
  "MALIK"
  "ZACKARY"
  "TUAN"
  "ELDRIDGE"
  "CRISTOPHER"
  "CORTEZ"
  "ANTIONE"
  "MALCOM"
  "LONG"
  "KOREY"
  "JOSPEH"
  "COLTON"
  "WAYLON"
  "VON"
  "HOSEA"
  "SHAD"
  "SANTO"
  "RUDOLF"
  "ROLF"
  "REY"
  "RENALDO"
  "MARCELLUS"
  "LUCIUS"
  "KRISTOFER"
  "BOYCE"
  "BENTON"
  "HAYDEN"
  "HARLAND"
  "ARNOLDO"
  "RUEBEN"
  "LEANDRO"
  "KRAIG"
  "JERRELL"
  "JEROMY"
  "HOBERT"
  "CEDRICK"
  "ARLIE"
  "WINFORD"
  "WALLY"
  "LUIGI"
  "KENETH"
  "JACINTO"
  "GRAIG"
  "FRANKLYN"
  "EDMUNDO"
  "SID"
  "PORTER"
  "LEIF"
  "JERAMY"
  "BUCK"
  "WILLIAN"
  "VINCENZO"
  "SHON"
  "LYNWOOD"
  "JERE"
  "HAI"
  "ELDEN"
  "DORSEY"
  "DARELL"
  "BRODERICK"
  "ALONSO"
  ))
  
  ;;destructive sort. sort is a bit confusing, look it up!
  (setq pe-22-names-sorted (sort pe-22-names 'string<))
  (car pe-22-names-sorted);AARON
  ;; (let ((s "COLIN")) (cl-loop for i from 0 to (1- (length s)) sum (- (aref s i) ?A -1))) = 53
  
  (defun pe-sum-string (s)
    (cl-loop for i from 0 to (1- (length s)) sum (- (aref s i) ?A -1)) 
    )
  (pe-sum-string "COLIN") ;53
  
  (defun pe-22 (names)
    (cl-loop for i from 0 to ( length names)
             sum (* (1+ i) (pe-sum-string (nth i names))))
  
    )
  (pe-22 pe-22-names-sorted)
#+END_SRC
** TODO 23: Non-abundant sums
A perfect number is a number for which the sum of its proper divisors
is exactly equal to the number. For example, the sum of the proper
divisors of 28 would be 1 + 2 + 4 + 7 + 14 = 28, which means that 28
is a perfect number.

A number n is called deficient if the sum of its proper divisors is
less than n and it is called abundant if this sum exceeds n.

As 12 is the smallest abundant number, 1 + 2 + 3 + 4 + 6 = 16, the
smallest number that can be written as the sum of two abundant numbers
is 24. By mathematical analysis, it can be shown that all integers
greater than 28123 can be written as the sum of two abundant
numbers. However, this upper limit cannot be reduced any further by
analysis even though it is known that the greatest number that cannot
be expressed as the sum of two abundant numbers is less than this
limit.

Find the sum of all the positive integers which cannot be written as
the sum of two abundant numbers.
*** A
The brute approach seems to be:
- find all abundant numbers up to 28123
- test every number up to 28123 and see if they can be formed as a sum of a pair of abundant numbers


again, use pe-divisors.

#+BEGIN_SRC elisp
  (defun pe-23-abundantp (n)
    (let ((divsum (apply '+  (delq n (pe-divisors n))) ))
  
      (if (> divsum n) t nil))
    
    )
  
  (pe-23-abundantp 12)
  (pe-23-abundantp 11) 
  
  (defun pe-23-abundant-numbers (limit)
    (cl-loop for n from 1 to limit
             when (pe-23-abundantp n)
             collect n))
  
  ;;too slow, probably because pe-divisors too slow
  (pe-23-abundant-numbers 28123)
  
#+END_SRC
** DONE 24: Lexicographic permutations
   CLOSED: [2013-08-09 Fri 13:09]
A permutation is an ordered arrangement of objects. For example, 3124
is one possible permutation of the digits 1, 2, 3 and 4. If all of the
permutations are listed numerically or alphabetically, we call it
lexicographic order. The lexicographic permutations of 0, 1 and 2 are:

012   021   102   120   201   210

What is the millionth lexicographic permutation of the digits 0, 1, 2, 3, 4, 5, 6, 7, 8 and 9?
*** A
feels like a binary counter where each digit has identity. so, a hex counter perhaps.
it should be possible to just count and then map the number.
or, just brute force with array swapping about.

some googling reveals this is an job for Dijkstras Permutation algorithm. 
"A Discipline of Programming", p71.
#+BEGIN_SRC elisp
  
  
  (defun pe-24-get-next (a)
    (let* ((N (length a))
           (i (1- N))
           (j N)
           (tmp))
  
      (while (>= (aref a (1- i)) (aref a i))
        (setq i (1- i)))
  
      (while (<= (aref a (1- j)) (aref a (1- i)))
        (setq j (1- j)))
  
      (setq tmp (aref a (1- i)))
      (aset a (1- i) (aref a (1- j)))
      (aset a (1- j) tmp)
  
      (setq i (1+ i))
      (setq j N)
  
      (while (< i j)
        (setq tmp (aref a (1- i)))
        (aset a (1- i) (aref a (1- j)))
        (aset a (1- j) tmp)
        (setq i (1+ i))
        (setq j (1- j))
        
        )
      
      a)
  
    )
  
  (setq pe-24-tst '[0 1 2])
  (pe-24-get-next pe-24-tst )
  (pe-24-get-next pe-24-tst )
  (pe-24-get-next pe-24-tst )
  
  (setq pe-24-data '[0 1 2 3 4 5 6 7 8 9])
  
  (cl-loop for i from 2 to 1000000 do
           (pe-24-get-next pe-24-data ))
  [2 7 8 3 9 1 5 4 6 0]
#+END_SRC
** DONE 25: 1000-digit Fibonacci number                                  :US:
   CLOSED: [2013-07-30 Tue 01:21]
The Fibonacci sequence is defined by the recurrence relation:

Fn = Fn−1 + Fn−2, where F1 = 1 and F2 = 1.
Hence the first 12 terms will be:

F1 = 1
F2 = 1
F3 = 2
F4 = 3
F5 = 5
F6 = 8
F7 = 13
F8 = 21
F9 = 34
F10 = 55
F11 = 89
F12 = 144
The 12th term, F12, is the first term to contain three digits.

What is the first term in the Fibonacci sequence to contain 1000 digits?
*** A
#+begin_src elisp
      ;;fibonaccio
      
      ;;(let ((a 1)(b 2) (c 0)) (cl-loop for x from 1 to 7 do  (setq c (+ a b) a b b c)   ) (list a b c))
  
  
  (let ((a 1)
        (b 2)
        (c 0))
    (cl-loop for x from 1 to 5000  do
             (setq c (calcFunc-add a b) a b b c)
             collect (list x (length  (math-format-number a)) (math-format-number a)) ))
  
#+end_src

the program returns a list of entries like:
 (4782 1000 "2801469855604761894059409930976292608793189978672012451535011405345311945794696621442398694512310055716262670442896176725381946499178066837020390774561243726189436148701290012421378734474935318536968012744863651325335424749327926920635103924103592765660586769954373026421114178654129286781210498785998978389309747942791704071154402549794489499148274933211656028171413521014052342726162889790023344651116069165442334492680160832967277887876571406187091478251127403655836899164772664844669221130648992221561852605690167911104874474356129833642614490064356903074834574084595401004358914796744954081860965752078260636587113228959995092232938638814540894633844779478789840107841323109156931242427255030565305331981918377443026714031086196370948154624681729367295927223995614031187833101306567470907219730384018653937477869618131642237399576685620704962738456722775917892775149556342671449194546543491060300071014852004881799935479347159713061656155381249895378355070405844736166089345030856113906348616613")
sequence, length, and the fibbonacio number.

the solution uses bignums and strings, but is pretty fast even so!
** DONE 27: Quadratic primes                                             :TT:
   CLOSED: [2013-08-06 Tue 23:08]
Euler discovered the remarkable quadratic formula:

n² + n + 41

It turns out that the formula will produce 40 primes for the
consecutive values n = 0 to 39. However, when n = 40, 402 + 40 + 41 =
40(40 + 1) + 41 is divisible by 41, and certainly when n = 41, 41² +
41 + 41 is clearly divisible by 41.

The incredible formula n² − 79n + 1601 was discovered, which produces
80 primes for the consecutive values n = 0 to 79. The product of the
coefficients, −79 and 1601, is −126479.

Considering quadratics of the form:

n² + an + b, where |a| < 1000 and |b| < 1000

where |n| is the modulus/absolute value of n
e.g. |11| = 11 and |−4| = 4

Find the product of the coefficients, a and b, for the quadratic
expression that produces the maximum number of primes for consecutive
values of n, starting with n = 0.
*** A
#+BEGIN_SRC elisp
  ;;try the given formulas 1st
  ;;n² + n + 41
  (cl-loop for n from 1 to 40 collect (+ (expt n 2) n 41))
  (43 47 53 61 71 83 97 113 131 151 173 197 223 251 281 313 347 383 421 461 503 547 593 641 691 743 797 853 911 971 1033 1097 1163 1231 1301 1373 1447 1523 1601 1681)
  ;; n² − 79n + 1601
  (cl-loop for n from 1 to 79 collect (+ (expt n 2) (* 79 n) 1601))(1681 1763 1847 1933 2021 2111 2203 2297 2393 2491 2591 2693 2797 2903 3011 3121 3233 3347 3463 3581 3701 3823 3947 4073 4201 4331 4463 4597 4733 4871 5011 5153 5297 5443 5591 5741 5893 6047 6203 6361 6521 6683 6847 7013 7181 7351 7523 7697 7873 8051 8231 8413 8597 8783 8971 9161 9353 9547 9743 9941 10141 10343 10547 10753 10961 11171 11383 11597 11813 12031 12251 12473 12697 12923 13151 13381 13613 13847 14083)
  
  ;;the naive brute force approach;
  ;;theres a primep in bbdb as well, it turns out, but its not correct for negative numbers
  (defun pe-27 (maxa maxb)
    (let (rv tmp)
      (cl-loop for a from (* -1 maxa) to maxa collect
               (cl-loop for b from (* -1 maxb) to maxb do
                        (setq tmp (cl-loop for n from 1 to 1000 ;;we should finish rather more quickly
                                           for primecandidate = (+ (expt n 2) (* a n) b)
                                           until (not (primep primecandidate))
                                           collect  primecandidate))
                        (if (>  (length  tmp) 20) (setq rv
                                                   (append  rv  (list a b (* a b)': tmp))))
                        )) rv))
  
  (pe-27 50 50)
  
  (pe-27 999 999)
  ;;the winning sequence:
  ;;-61 971 -59231 :
  ;;     (911 853 797 743 691 641 593 547 503 461 421 383 347 313 281 251 223 197 173 151 131 113 97 83 71 61 53 47 43 41 41 43 47 53 61 71 83 97 113 131 151 173 197 223 251 281 313 347 383 421 461 503 547 593 641 691 743 797 853 911 971 1033 1097 1163 1231 1301 1373 1447 1523 1601)
#+END_SRC
** DONE 28: Number spiral diagonals
   CLOSED: [2013-08-02 Fri 02:28]
Starting with the number 1 and moving to the right in a clockwise direction a 5 by 5 spiral is formed as follows:

21 22 23 24 25
20  7  8  9 10
19  6  1  2 11
18  5  4  3 12
17 16 15 14 13

It can be verified that the sum of the numbers on the diagonals is 101.

What is the sum of the numbers on the diagonals in a 1001 by 1001 spiral formed in the same way?
*** A
a spiral can be drawn by a turtle travelling from the center outwards with these increments:
E: 1,0
S: 0,1
W: -1,0
N: 0,-1
then you begin again from E.
switch increments at 1,1,2,2,3,3,4,4,...

#+begin_src elisp
  
  (defun pe-turtle (curxinc curyinc)
    (cond ( (and (= 1 curxinc)(= 0 curyinc))
              '(0 1))
          ( (and (= 0 curxinc)(= 1 curyinc))
            '(-1 0))
          ( (and (= -1 curxinc)(= 0 curyinc))
            '(0 -1))
          ( (and (= 0 curxinc)(= -1 curyinc))
            '(1 0))
          ))
  
  (defun pe-make-spiral (matrix)
    (let* ((curxinc 1)
          (curyinc 0)
          (ml (length matrix))
          (x (1+  (/ ml 2)))
          (y x)
          ( nextinc)
          (seglength 1)
          (i 1))
      (cl-loop for turn-outer from 1 to ml do
               (cl-loop for turn-inner from 1 to 2 do
                        (cl-loop for segstep from 1 to seglength
                                 until (= i (1+  (* ml ml))) do
                         ;;        (message "X:%d Y:%d I:%d" x y i)
                                 (aset (aref  matrix (1-  y)) (1-  x) i)
                                 (setq i (1+ i))
                                 (setq x (+ x curxinc))
                                 (setq y (+ y curyinc))
                                 )
                        (setq nextinc (pe-turtle curxinc curyinc))
                        (setq curxinc (car nextinc)
                              curyinc (cadr nextinc))
                        )
               (setq seglength (1+ seglength))))
    matrix)
  
  ;;(make-vector 5 (make-vector 5 0)); this funnily doesnt work, because the 2nd make-vector isnt copied, just its pointer is copied.
  ;;obvious in retrospect
  (pe-make-spiral
   [[0 0 0 0 0 ]
   [0 0 0 0 0]
   [0 0 0 0 0]
   [0 0 0 0 0]
   [0 0 0 0 0]])
  
  (length  [[21 22 23 24 25] [20 7 8 9 10] [19 6 1 2 11] [18 5 4 3 12] [17 16 15 14 13]])
  
  (pe-make-spiral
   (let (matrix) (cl-loop for i from 1 to 11 do (setq matrix (vconcat matrix (make-vector 1(make-vector 11 0)) ))) matrix))
  
  (defun pe-grid-slice-vec (grid x y length direction)
    (let (( xinc 0) ( yinc 0) (rv))
      (cond ((eq 'S direction) (setq yinc 1))
            ((eq 'E direction) (setq xinc 1))
            ((eq 'SE direction) (setq xinc 1)(setq yinc 1))
            ((eq 'SW direction) (setq xinc -1)(setq yinc 1))
            ((eq 'NE direction) (setq xinc 1)(setq yinc -1))
            )
      (cl-loop for i from 1 to length do
               (setq rv (cons (aref  (aref  grid y) x) rv))
               (setq x (+ x xinc))
               (setq y (+ y yinc)))
      rv
      )
    )
  
  (pe-grid-slice-vec  [[21 22 23 24 25] [20 7 8 9 10] [19 6 1 2 11] [18 5 4 3 12] [17 16 15 14 13]] 0 4 5 'NE)
  
  (defun pe-sum-diagonals (size)
    (let ( (matrix))
      (cl-loop for i from 1 to size do (setq matrix (vconcat matrix (make-vector 1(make-vector size 0)) )))
      (pe-make-spiral matrix)
      (1- ;;dont count the center twice
       (+
        (apply '+ (pe-grid-slice-vec matrix 0 0 size 'SE))
        (apply '+ (pe-grid-slice-vec matrix 0 (1- size) size 'NE))))
      ))
  
  (pe-sum-diagonals 5)
  101
  
  (pe-sum-diagonals 1001)
  669171001
  
  
#+end_src 

** DONE 29: Distinct powers
   CLOSED: [2013-08-10 Sat 22:39]
Consider all integer combinations of ab for 2 ≤ a ≤ 5 and 2 ≤ b ≤ 5:

22=4, 23=8, 24=16, 25=32
32=9, 33=27, 34=81, 35=243
42=16, 43=64, 44=256, 45=1024
52=25, 53=125, 54=625, 55=3125
If they are then placed in numerical order, with any repeats removed, we get the following sequence of 15 distinct terms:

4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125

How many distinct terms are in the sequence generated by ab for 2 ≤ a ≤ 100 and 2 ≤ b ≤ 100?
*** A
#+BEGIN_SRC elisp
  (defun pe-29 (max)
    (sort (cl-loop for a from 2 to max append
                   (cl-loop for b from 2 to max collect
                            (calcFunc-pow a b)))
          'calcFunc-lt
          )
    )
  
  (pe-29 5)
  (4 8 9 16 16 25 27 32 64 81 125 243 256 625 1024 3125)
  
(length (delete-dups (pe-29 100))) 9183
#+END_SRC
the solution is kind of slow, but its fun watching the bignums grow!
** DONE 30: Digit fifth powers
   CLOSED: [2013-08-10 Sat 15:15]
Surprisingly there are only three numbers that can be written as the
sum of fourth powers of their digits:

1634 = 1^4 + 6^4 + 3^4 + 4^4
8208 = 8^4 + 2^4 + 0^4 + 8^4
9474 = 9^4 + 4^4 + 7^4 + 4^4
As 1 = 14 is not a sum it is not included.

The sum of these numbers is 1634 + 8208 + 9474 = 19316.

Find the sum of all the numbers that can be written as the sum of
fifth powers of their digits.
*** A
seems similar to 34, where you also had to chop up numbers and sum
them, but in that case factorial.

Finding the upper bound wasnt immediately obvious, just like PE34.

9^5 =  59049, so we need at least 6 digits.

 (* 6 (expt 9 5)) is 354294.
#+BEGIN_SRC elisp
  ;;almost identical to pe34, so could be refactored
  (defun pe-30-powsum (n power)
    (let ((rv 0))
      (while (> n 0)
        (setq rv (+ rv (expt (mod n 10) power)))
        (setq n (/ n 10)))
      rv))
  ;;tests
  (= 1634 (pe-30-powsum 1634 4))
  (= 8208 (pe-30-powsum 8208 4))
  (/= 8209 (pe-30-powsum 8209 4))
  
  
  (defun pe-30 ()
      (let ((limit  (* 6 (expt 9 5)))) ;;the upper bound was meditated upon
        (cl-loop for n from 2 to limit ;;no 1
                 for powsum = (pe-30-powsum n 5)
                 when (= powsum n)
                 sum powsum)))
  
  (=  (pe-30) 443839)
    
  
#+END_SRC
** TODO 32: Pandigital products                                          :PI:
We shall say that an n-digit number is pandigital if it makes use of
all the digits 1 to n exactly once; for example, the 5-digit number,
15234, is 1 through 5 pandigital.

The product 7254 is unusual, as the identity, 39 × 186 = 7254,
containing multiplicand, multiplier, and product is 1 through 9
pandigital.

Find the sum of all products whose multiplicand/multiplier/product
identity can be written as a 1 through 9 pandigital.

HINT: Some products can be obtained in more than one way so be sure to
only include it once in your sum.
*** A

** DONE 34: Digit factorials                                             :FF:
   CLOSED: [2013-08-09 Fri 20:11]
Problem 34
145 is a curious number, as 1! + 4! + 5! = 1 + 24 + 120 = 145.

Find the sum of all numbers which are equal to the sum of the factorial of their digits.

Note: as 1! = 1 and 2! = 2 are not sums they are not included.
*** A
the upper bound is (* 7 (calcFunc-fact 9)) 2540160. 2540160 has 7 digits.
(* 8 (calcFunc-fact 9)) 2903040 has also 7 digits, so the sum of the digits factorials can never become a 8 digit number.

just to make sure, (* 100 (calcFunc-fact 9)) 36288000, has nowhere near 100 digits!

so now its just brute force to the upper bound!

#+BEGIN_SRC elisp
;;this factsum would be nicer as recursive
;;perhaps would be faster with memoization of fact, since we only need 9 values
  (defun pe-34-factsum (n)
    (let ((rv 0))
      (while (> n 0)
        (setq rv (+ rv (calcFunc-fact (mod n 10))))
        (setq n (/ n 10))
        )
      rv)
    )
  (pe-34-factsum 145); 145, so okay!
  
  (defun pe-34 ()
    (let ((limit  (* 7 (calcFunc-fact 9))))
      (cl-loop for n from 3 to limit ;;fact 1 and 2 shouldnt be added according to specs
               for nfactsum = (pe-34-factsum n)
               when (= nfactsum n)
               sum nfactsum)))
  
  (pe-34)
  40730
  
  
#+END_SRC

** TODO 35: Circular primes                                              :PI:
The number, 197, is called a circular prime because all rotations of
the digits: 197, 971, and 719, are themselves prime.

There are thirteen such primes below 100: 2, 3, 5, 7, 11, 13, 17, 31, 37, 71, 73, 79, and 97.

How many circular primes are there below one million?
** TODO 36: Double-base palindromes                                      :US:
The decimal number, 585 = 10010010012 (binary), is palindromic in both bases.

Find the sum of all numbers, less than one million, which are palindromic in base 10 and base 2.

(Please note that the palindromic number, in either base, may not include leading zeros.)

** TODO 38: Pandigital multiples                                         :PI:
Take the number 192 and multiply it by each of 1, 2, and 3:

192 × 1 = 192
192 × 2 = 384
192 × 3 = 576
By concatenating each product we get the 1 to 9 pandigital, 192384576. We will call 192384576 the concatenated product of 192 and (1,2,3)

The same can be achieved by starting with 9 and multiplying by 1, 2, 3, 4, and 5, giving the pandigital, 918273645, which is the concatenated product of 9 and (1,2,3,4,5).

What is the largest 1 to 9 pandigital 9-digit number that can be formed as the concatenated product of an integer with (1,2, ... , n) where n > 1?
** TODO 46: Goldbach's other conjecture                                  :PI:
It was proposed by Christian Goldbach that every odd composite number
can be written as the sum of a prime and twice a square.

9 = 7 + 2×12
15 = 7 + 2×22
21 = 3 + 2×32
25 = 7 + 2×32
27 = 19 + 2×22
33 = 31 + 2×12

It turns out that the conjecture was false.

What is the smallest odd composite that cannot be written as the sum of a prime and twice a square?
** DONE 48: Self powers
   CLOSED: [2013-08-02 Fri 03:08]
The series, 1^1 + 2^2 + 3^3 + ... + 10^10 = 10405071317.

Find the last ten digits of the series, 1^1 + 2^2 + 3^3 + ... + 1000^1000.
*** A
This is not super fast, but its bearable, result 9110846700
It's fun to watch the number grow as well :)

#+BEGIN_SRC elisp
  (defun pe-selfpower (max)
    (let ( (sum 0))
      (cl-loop for i from 1 to max do
               (setq sum (calcFunc-add sum (calcFunc-pow i i)))
               ) sum)
    )
  
  (math-format-number (pe-selfpower 1000))  
#+END_SRC

** TODO 49: Prime permutations                                           :US:

The arithmetic sequence, 1487, 4817, 8147, in which each of the terms increases by 3330, is unusual in two ways: (i) each of the three terms are prime, and, (ii) each of the 4-digit numbers are permutations of one another.

There are no arithmetic sequences made up of three 1-, 2-, or 3-digit primes, exhibiting this property, but there is one other 4-digit increasing sequence.

What 12-digit number do you form by concatenating the three terms in this sequence?
** TODO 55: Lychrel numbers                                              :FF:
If we take 47, reverse and add, 47 + 74 = 121, which is palindromic.

Not all numbers produce palindromes so quickly. For example,

349 + 943 = 1292,
1292 + 2921 = 4213
4213 + 3124 = 7337

That is, 349 took three iterations to arrive at a palindrome.

Although no one has proved it yet, it is thought that some numbers, like 196, never produce a palindrome. A number that never forms a palindrome through the reverse and add process is called a Lychrel number. Due to the theoretical nature of these numbers, and for the purpose of this problem, we shall assume that a number is Lychrel until proven otherwise. In addition you are given that for every number below ten-thousand, it will either (i) become a palindrome in less than fifty iterations, or, (ii) no one, with all the computing power that exists, has managed so far to map it to a palindrome. In fact, 10677 is the first number to be shown to require over fifty iterations before producing a palindrome: 4668731596684224866951378664 (53 iterations, 28-digits).

Surprisingly, there are palindromic numbers that are themselves Lychrel numbers; the first example is 4994.

How many Lychrel numbers are there below ten-thousand?

NOTE: Wording was modified slightly on 24 April 2007 to emphasise the theoretical nature of Lychrel numbers.

** TODO 64: Odd period square roots                                      :US:

Problem 64
All square roots are periodic when written as continued fractions and can be written in the form:

√N = a0 +	
1
 	a1 +	
1
 	 	a2 +	
1
 	 	 	a3 + ...
For example, let us consider √23:

√23 = 4 + √23 — 4 = 4 + 	
1
 = 4 + 	
1
 	
1
√23—4
 	1 + 	
√23 – 3
7
If we continue we would get the following expansion:

√23 = 4 +	
1
 	1 +	
1
 	 	3 +	
1
 	 	 	1 +	
1
 	 	 	 	8 + ...
The process can be summarised as follows:

a0 = 4,	 	
1
√23—4
 = 	
√23+4
7
 = 1 + 	
√23—3
7
a1 = 1,	 	
7
√23—3
 = 	
7(√23+3)
14
 = 3 + 	
√23—3
2
a2 = 3,	 	
2
√23—3
 = 	
2(√23+3)
14
 = 1 + 	
√23—4
7
a3 = 1,	 	
7
√23—4
 = 	
7(√23+4)
7
 = 8 + 	√23—4
a4 = 8,	 	
1
√23—4
 = 	
√23+4
7
 = 1 + 	
√23—3
7
a5 = 1,	 	
7
√23—3
 = 	
7(√23+3)
14
 = 3 + 	
√23—3
2
a6 = 3,	 	
2
√23—3
 = 	
2(√23+3)
14
 = 1 + 	
√23—4
7
a7 = 1,	 	
7
√23—4
 = 	
7(√23+4)
7
 = 8 + 	√23—4
It can be seen that the sequence is repeating. For conciseness, we use the notation √23 = [4;(1,3,1,8)], to indicate that the block (1,3,1,8) repeats indefinitely.

The first ten continued fraction representations of (irrational) square roots are:

√2=[1;(2)], period=1
√3=[1;(1,2)], period=2
√5=[2;(4)], period=1
√6=[2;(2,4)], period=2
√7=[2;(1,1,1,4)], period=4
√8=[2;(1,4)], period=2
√10=[3;(6)], period=1
√11=[3;(3,6)], period=2
√12= [3;(2,6)], period=2
√13=[3;(1,1,1,1,6)], period=5

Exactly four continued fractions, for N ≤ 13, have an odd period.

How many continued fractions for N ≤ 10000 have an odd period?
** TODO 65: Convergents of e                                             :PI:
The square root of 2 can be written as an infinite continued fraction.

√2 = 1 +	
1

 	2 +	
1

 	 	2 +	
1

 	 	 	2 +	
1

 	 	 	 	2 + ...
The infinite continued fraction can be written, √2 = [1;(2)], (2) indicates that 2 repeats ad infinitum. In a similar way, √23 = [4;(1,3,1,8)].

It turns out that the sequence of partial values of continued fractions for square roots provide the best rational approximations. Let us consider the convergents for √2.

1 +	
1

= 3/2
 	
2
 
1 +	
1

= 7/5
 	2 +	
1

 	 	
2
 
1 +	
1

= 17/12
 	2 +	
1

 
 	 	2 +	
1

 
 	 	 	
2
 
1 +	
1

= 41/29
 	2 +	
1

 	 	2 +	
1

 
 	 	 	2 +	
1

 
 	 	 	 	
2
 
Hence the sequence of the first ten convergents for √2 are:

1, 3/2, 7/5, 17/12, 41/29, 99/70, 239/169, 577/408, 1393/985, 3363/2378, ...
What is most surprising is that the important mathematical constant,
e = [2; 1,2,1, 1,4,1, 1,6,1 , ... , 1,2k,1, ...].

The first ten terms in the sequence of convergents for e are:

2, 3, 8/3, 11/4, 19/7, 87/32, 106/39, 193/71, 1264/465, 1457/536, ...
The sum of digits in the numerator of the 10th convergent is 1+4+5+7=17.

Find the sum of digits in the numerator of the 100th convergent of the continued fraction for e.
** DONE 67: Maximum path sum II
   CLOSED: [2013-08-03 Sat 15:29]
By starting at the top of the triangle below and moving to adjacent numbers on the row below, the maximum total from top to bottom is 23.

3
7 4
2 4 6
8 5 9 3

That is, 3 + 7 + 4 + 9 = 23.

Find the maximum total from top to bottom in triangle.txt (right click
and 'Save Link/Target As...'), a 15K text file containing a triangle
with one-hundred rows.

NOTE: This is a much more difficult version of Problem 18. It is not
possible to try every route to solve this problem, as there are 299
altogether! If you could check one trillion (1012) routes every second
it would take over twenty billion years to check them all. There is an
efficient algorithm to solve it. ;o)
*** A
This was pretty simple because i just reused pe-18!

#+BEGIN_SRC elisp
      
      (setq pe-67-pyramid
    [
    [  59]
    [  73 41]
    [  52 40 09]
    [  26 53 06 34]
    [  10 51 87 86 81]
    [  61 95 66 57 25 68]
    [  90 81 80 38 92 67 73]
    [  30 28 51 76 81 18 75 44]
    [  84 14 95 87 62 81 17 78 58]
    [  21 46 71 58 02 79 62 39 31 09]
    [  56 34 35 53 78 31 81 18 90 93 15]
    [  78 53 04 21 84 93 32 13 97 11 37 51]
    [  45 03 81 79 05 18 78 86 13 30 63 99 95]
    [  39 87 96 28 03 38 42 17 82 87 58 07 22 57]
    [  06 17 51 17 07 93 09 07 75 97 95 78 87 08 53]
    [  67 66 59 60 88 99 94 65 55 77 55 34 27 53 78 28]
    [  76 40 41 04 87 16 09 42 75 69 23 97 30 60 10 79 87]
    [  12 10 44 26 21 36 32 84 98 60 13 12 36 16 63 31 91 35]
    [  70 39 06 05 55 27 38 48 28 22 34 35 62 62 15 14 94 89 86]
    [  66 56 68 84 96 21 34 34 34 81 62 40 65 54 62 05 98 03 02 60]
    [  38 89 46 37 99 54 34 53 36 14 70 26 02 90 45 13 31 61 83 73 47]
    [  36 10 63 96 60 49 41 05 37 42 14 58 84 93 96 17 09 43 05 43 06 59]
    [  66 57 87 57 61 28 37 51 84 73 79 15 39 95 88 87 43 39 11 86 77 74 18]
    [  54 42 05 79 30 49 99 73 46 37 50 02 45 09 54 52 27 95 27 65 19 45 26 45]
    [  71 39 17 78 76 29 52 90 18 99 78 19 35 62 71 19 23 65 93 85 49 33 75 09 02]
    [  33 24 47 61 60 55 32 88 57 55 91 54 46 57 07 77 98 52 80 99 24 25 46 78 79 05]
    [  92 09 13 55 10 67 26 78 76 82 63 49 51 31 24 68 05 57 07 54 69 21 67 43 17 63 12]
    [  24 59 06 08 98 74 66 26 61 60 13 03 09 09 24 30 71 08 88 70 72 70 29 90 11 82 41 34]
    [  66 82 67 04 36 60 92 77 91 85 62 49 59 61 30 90 29 94 26 41 89 04 53 22 83 41 09 74 90]
    [  48 28 26 37 28 52 77 26 51 32 18 98 79 36 62 13 17 08 19 54 89 29 73 68 42 14 08 16 70 37]
    [  37 60 69 70 72 71 09 59 13 60 38 13 57 36 09 30 43 89 30 39 15 02 44 73 05 73 26 63 56 86 12]
    [  55 55 85 50 62 99 84 77 28 85 03 21 27 22 19 26 82 69 54 04 13 07 85 14 01 15 70 59 89 95 10 19]
    [  04 09 31 92 91 38 92 86 98 75 21 05 64 42 62 84 36 20 73 42 21 23 22 51 51 79 25 45 85 53 03 43 22]
    [  75 63 02 49 14 12 89 14 60 78 92 16 44 82 38 30 72 11 46 52 90 27 08 65 78 03 85 41 57 79 39 52 33 48]
    [  78 27 56 56 39 13 19 43 86 72 58 95 39 07 04 34 21 98 39 15 39 84 89 69 84 46 37 57 59 35 59 50 26 15 93]
    [  42 89 36 27 78 91 24 11 17 41 05 94 07 69 51 96 03 96 47 90 90 45 91 20 50 56 10 32 36 49 04 53 85 92 25 65]
    [  52 09 61 30 61 97 66 21 96 92 98 90 06 34 96 60 32 69 68 33 75 84 18 31 71 50 84 63 03 03 19 11 28 42 75 45 45]
    [  61 31 61 68 96 34 49 39 05 71 76 59 62 67 06 47 96 99 34 21 32 47 52 07 71 60 42 72 94 56 82 83 84 40 94 87 82 46]
    [  01 20 60 14 17 38 26 78 66 81 45 95 18 51 98 81 48 16 53 88 37 52 69 95 72 93 22 34 98 20 54 27 73 61 56 63 60 34 63]
    [  93 42 94 83 47 61 27 51 79 79 45 01 44 73 31 70 83 42 88 25 53 51 30 15 65 94 80 44 61 84 12 77 02 62 02 65 94 42 14 94]
    [  32 73 09 67 68 29 74 98 10 19 85 48 38 31 85 67 53 93 93 77 47 67 39 72 94 53 18 43 77 40 78 32 29 59 24 06 02 83 50 60 66]
    [  32 01 44 30 16 51 15 81 98 15 10 62 86 79 50 62 45 60 70 38 31 85 65 61 64 06 69 84 14 22 56 43 09 48 66 69 83 91 60 40 36 61]
    [  92 48 22 99 15 95 64 43 01 16 94 02 99 19 17 69 11 58 97 56 89 31 77 45 67 96 12 73 08 20 36 47 81 44 50 64 68 85 40 81 85 52 09]
    [  91 35 92 45 32 84 62 15 19 64 21 66 06 01 52 80 62 59 12 25 88 28 91 50 40 16 22 99 92 79 87 51 21 77 74 77 07 42 38 42 74 83 02 05]
    [  46 19 77 66 24 18 05 32 02 84 31 99 92 58 96 72 91 36 62 99 55 29 53 42 12 37 26 58 89 50 66 19 82 75 12 48 24 87 91 85 02 07 03 76 86]
    [  99 98 84 93 07 17 33 61 92 20 66 60 24 66 40 30 67 05 37 29 24 96 03 27 70 62 13 04 45 47 59 88 43 20 66 15 46 92 30 04 71 66 78 70 53 99]
    [  67 60 38 06 88 04 17 72 10 99 71 07 42 25 54 05 26 64 91 50 45 71 06 30 67 48 69 82 08 56 80 67 18 46 66 63 01 20 08 80 47 07 91 16 03 79 87]
    [  18 54 78 49 80 48 77 40 68 23 60 88 58 80 33 57 11 69 55 53 64 02 94 49 60 92 16 35 81 21 82 96 25 24 96 18 02 05 49 03 50 77 06 32 84 27 18 38]
    [  68 01 50 04 03 21 42 94 53 24 89 05 92 26 52 36 68 11 85 01 04 42 02 45 15 06 50 04 53 73 25 74 81 88 98 21 67 84 79 97 99 20 95 04 40 46 02 58 87]
    [  94 10 02 78 88 52 21 03 88 60 06 53 49 71 20 91 12 65 07 49 21 22 11 41 58 99 36 16 09 48 17 24 52 36 23 15 72 16 84 56 02 99 43 76 81 71 29 39 49 17]
    [  64 39 59 84 86 16 17 66 03 09 43 06 64 18 63 29 68 06 23 07 87 14 26 35 17 12 98 41 53 64 78 18 98 27 28 84 80 67 75 62 10 11 76 90 54 10 05 54 41 39 66]
    [  43 83 18 37 32 31 52 29 95 47 08 76 35 11 04 53 35 43 34 10 52 57 12 36 20 39 40 55 78 44 07 31 38 26 08 15 56 88 86 01 52 62 10 24 32 05 60 65 53 28 57 99]
    [  03 50 03 52 07 73 49 92 66 80 01 46 08 67 25 36 73 93 07 42 25 53 13 96 76 83 87 90 54 89 78 22 78 91 73 51 69 09 79 94 83 53 09 40 69 62 10 79 49 47 03 81 30]
    [  71 54 73 33 51 76 59 54 79 37 56 45 84 17 62 21 98 69 41 95 65 24 39 37 62 03 24 48 54 64 46 82 71 78 33 67 09 16 96 68 52 74 79 68 32 21 13 78 96 60 09 69 20 36]
    [  73 26 21 44 46 38 17 83 65 98 07 23 52 46 61 97 33 13 60 31 70 15 36 77 31 58 56 93 75 68 21 36 69 53 90 75 25 82 39 50 65 94 29 30 11 33 11 13 96 02 56 47 07 49 02]
    [  76 46 73 30 10 20 60 70 14 56 34 26 37 39 48 24 55 76 84 91 39 86 95 61 50 14 53 93 64 67 37 31 10 84 42 70 48 20 10 72 60 61 84 79 69 65 99 73 89 25 85 48 92 56 97 16]
    [  03 14 80 27 22 30 44 27 67 75 79 32 51 54 81 29 65 14 19 04 13 82 04 91 43 40 12 52 29 99 07 76 60 25 01 07 61 71 37 92 40 47 99 66 57 01 43 44 22 40 53 53 09 69 26 81 07]
    [  49 80 56 90 93 87 47 13 75 28 87 23 72 79 32 18 27 20 28 10 37 59 21 18 70 04 79 96 03 31 45 71 81 06 14 18 17 05 31 50 92 79 23 47 09 39 47 91 43 54 69 47 42 95 62 46 32 85]
    [  37 18 62 85 87 28 64 05 77 51 47 26 30 65 05 70 65 75 59 80 42 52 25 20 44 10 92 17 71 95 52 14 77 13 24 55 11 65 26 91 01 30 63 15 49 48 41 17 67 47 03 68 20 90 98 32 04 40 68]
    [  90 51 58 60 06 55 23 68 05 19 76 94 82 36 96 43 38 90 87 28 33 83 05 17 70 83 96 93 06 04 78 47 80 06 23 84 75 23 87 72 99 14 50 98 92 38 90 64 61 58 76 94 36 66 87 80 51 35 61 38]
    [  57 95 64 06 53 36 82 51 40 33 47 14 07 98 78 65 39 58 53 06 50 53 04 69 40 68 36 69 75 78 75 60 03 32 39 24 74 47 26 90 13 40 44 71 90 76 51 24 36 50 25 45 70 80 61 80 61 43 90 64 11]
    [  18 29 86 56 68 42 79 10 42 44 30 12 96 18 23 18 52 59 02 99 67 46 60 86 43 38 55 17 44 93 42 21 55 14 47 34 55 16 49 24 23 29 96 51 55 10 46 53 27 92 27 46 63 57 30 65 43 27 21 20 24 83]
    [  81 72 93 19 69 52 48 01 13 83 92 69 20 48 69 59 20 62 05 42 28 89 90 99 32 72 84 17 08 87 36 03 60 31 36 36 81 26 97 36 48 54 56 56 27 16 91 08 23 11 87 99 33 47 02 14 44 73 70 99 43 35 33]
    [  90 56 61 86 56 12 70 59 63 32 01 15 81 47 71 76 95 32 65 80 54 70 34 51 40 45 33 04 64 55 78 68 88 47 31 47 68 87 03 84 23 44 89 72 35 08 31 76 63 26 90 85 96 67 65 91 19 14 17 86 04 71 32 95]
    [  37 13 04 22 64 37 37 28 56 62 86 33 07 37 10 44 52 82 52 06 19 52 57 75 90 26 91 24 06 21 14 67 76 30 46 14 35 89 89 41 03 64 56 97 87 63 22 34 03 79 17 45 11 53 25 56 96 61 23 18 63 31 37 37 47]
    [  77 23 26 70 72 76 77 04 28 64 71 69 14 85 96 54 95 48 06 62 99 83 86 77 97 75 71 66 30 19 57 90 33 01 60 61 14 12 90 99 32 77 56 41 18 14 87 49 10 14 90 64 18 50 21 74 14 16 88 05 45 73 82 47 74 44]
    [  22 97 41 13 34 31 54 61 56 94 03 24 59 27 98 77 04 09 37 40 12 26 87 09 71 70 07 18 64 57 80 21 12 71 83 94 60 39 73 79 73 19 97 32 64 29 41 07 48 84 85 67 12 74 95 20 24 52 41 67 56 61 29 93 35 72 69]
    [  72 23 63 66 01 11 07 30 52 56 95 16 65 26 83 90 50 74 60 18 16 48 43 77 37 11 99 98 30 94 91 26 62 73 45 12 87 73 47 27 01 88 66 99 21 41 95 80 02 53 23 32 61 48 32 43 43 83 14 66 95 91 19 81 80 67 25 88]
    [  08 62 32 18 92 14 83 71 37 96 11 83 39 99 05 16 23 27 10 67 02 25 44 11 55 31 46 64 41 56 44 74 26 81 51 31 45 85 87 09 81 95 22 28 76 69 46 48 64 87 67 76 27 89 31 11 74 16 62 03 60 94 42 47 09 34 94 93 72]
    [  56 18 90 18 42 17 42 32 14 86 06 53 33 95 99 35 29 15 44 20 49 59 25 54 34 59 84 21 23 54 35 90 78 16 93 13 37 88 54 19 86 67 68 55 66 84 65 42 98 37 87 56 33 28 58 38 28 38 66 27 52 21 81 15 08 22 97 32 85 27]
    [  91 53 40 28 13 34 91 25 01 63 50 37 22 49 71 58 32 28 30 18 68 94 23 83 63 62 94 76 80 41 90 22 82 52 29 12 18 56 10 08 35 14 37 57 23 65 67 40 72 39 93 39 70 89 40 34 07 46 94 22 20 05 53 64 56 30 05 56 61 88 27]
    [  23 95 11 12 37 69 68 24 66 10 87 70 43 50 75 07 62 41 83 58 95 93 89 79 45 39 02 22 05 22 95 43 62 11 68 29 17 40 26 44 25 71 87 16 70 85 19 25 59 94 90 41 41 80 61 70 55 60 84 33 95 76 42 63 15 09 03 40 38 12 03 32]
    [  09 84 56 80 61 55 85 97 16 94 82 94 98 57 84 30 84 48 93 90 71 05 95 90 73 17 30 98 40 64 65 89 07 79 09 19 56 36 42 30 23 69 73 72 07 05 27 61 24 31 43 48 71 84 21 28 26 65 65 59 65 74 77 20 10 81 61 84 95 08 52 23 70]
    [  47 81 28 09 98 51 67 64 35 51 59 36 92 82 77 65 80 24 72 53 22 07 27 10 21 28 30 22 48 82 80 48 56 20 14 43 18 25 50 95 90 31 77 08 09 48 44 80 90 22 93 45 82 17 13 96 25 26 08 73 34 99 06 49 24 06 83 51 40 14 15 10 25 01]
    [  54 25 10 81 30 64 24 74 75 80 36 75 82 60 22 69 72 91 45 67 03 62 79 54 89 74 44 83 64 96 66 73 44 30 74 50 37 05 09 97 70 01 60 46 37 91 39 75 75 18 58 52 72 78 51 81 86 52 08 97 01 46 43 66 98 62 81 18 70 93 73 08 32 46 34]
    [  96 80 82 07 59 71 92 53 19 20 88 66 03 26 26 10 24 27 50 82 94 73 63 08 51 33 22 45 19 13 58 33 90 15 22 50 36 13 55 06 35 47 82 52 33 61 36 27 28 46 98 14 73 20 73 32 16 26 80 53 47 66 76 38 94 45 02 01 22 52 47 96 64 58 52 39]
    [  88 46 23 39 74 63 81 64 20 90 33 33 76 55 58 26 10 46 42 26 74 74 12 83 32 43 09 02 73 55 86 54 85 34 28 23 29 79 91 62 47 41 82 87 99 22 48 90 20 05 96 75 95 04 43 28 81 39 81 01 28 42 78 25 39 77 90 57 58 98 17 36 73 22 63 74 51]
    [  29 39 74 94 95 78 64 24 38 86 63 87 93 06 70 92 22 16 80 64 29 52 20 27 23 50 14 13 87 15 72 96 81 22 08 49 72 30 70 24 79 31 16 64 59 21 89 34 96 91 48 76 43 53 88 01 57 80 23 81 90 79 58 01 80 87 17 99 86 90 72 63 32 69 14 28 88 69]
    [  37 17 71 95 56 93 71 35 43 45 04 98 92 94 84 96 11 30 31 27 31 60 92 03 48 05 98 91 86 94 35 90 90 08 48 19 33 28 68 37 59 26 65 96 50 68 22 07 09 49 34 31 77 49 43 06 75 17 81 87 61 79 52 26 27 72 29 50 07 98 86 01 17 10 46 64 24 18 56]
    [  51 30 25 94 88 85 79 91 40 33 63 84 49 67 98 92 15 26 75 19 82 05 18 78 65 93 61 48 91 43 59 41 70 51 22 15 92 81 67 91 46 98 11 11 65 31 66 10 98 65 83 21 05 56 05 98 73 67 46 74 69 34 08 30 05 52 07 98 32 95 30 94 65 50 24 63 28 81 99 57]
    [  19 23 61 36 09 89 71 98 65 17 30 29 89 26 79 74 94 11 44 48 97 54 81 55 39 66 69 45 28 47 13 86 15 76 74 70 84 32 36 33 79 20 78 14 41 47 89 28 81 05 99 66 81 86 38 26 06 25 13 60 54 55 23 53 27 05 89 25 23 11 13 54 59 54 56 34 16 24 53 44 06]
    [  13 40 57 72 21 15 60 08 04 19 11 98 34 45 09 97 86 71 03 15 56 19 15 44 97 31 90 04 87 87 76 08 12 30 24 62 84 28 12 85 82 53 99 52 13 94 06 65 97 86 09 50 94 68 69 74 30 67 87 94 63 07 78 27 80 36 69 41 06 92 32 78 37 82 30 05 18 87 99 72 19 99]
    [  44 20 55 77 69 91 27 31 28 81 80 27 02 07 97 23 95 98 12 25 75 29 47 71 07 47 78 39 41 59 27 76 13 15 66 61 68 35 69 86 16 53 67 63 99 85 41 56 08 28 33 40 94 76 90 85 31 70 24 65 84 65 99 82 19 25 54 37 21 46 33 02 52 99 51 33 26 04 87 02 08 18 96]
    [  54 42 61 45 91 06 64 79 80 82 32 16 83 63 42 49 19 78 65 97 40 42 14 61 49 34 04 18 25 98 59 30 82 72 26 88 54 36 21 75 03 88 99 53 46 51 55 78 22 94 34 40 68 87 84 25 30 76 25 08 92 84 42 61 40 38 09 99 40 23 29 39 46 55 10 90 35 84 56 70 63 23 91 39]
    [  52 92 03 71 89 07 09 37 68 66 58 20 44 92 51 56 13 71 79 99 26 37 02 06 16 67 36 52 58 16 79 73 56 60 59 27 44 77 94 82 20 50 98 33 09 87 94 37 40 83 64 83 58 85 17 76 53 02 83 52 22 27 39 20 48 92 45 21 09 42 24 23 12 37 52 28 50 78 79 20 86 62 73 20 59]
    [  54 96 80 15 91 90 99 70 10 09 58 90 93 50 81 99 54 38 36 10 30 11 35 84 16 45 82 18 11 97 36 43 96 79 97 65 40 48 23 19 17 31 64 52 65 65 37 32 65 76 99 79 34 65 79 27 55 33 03 01 33 27 61 28 66 08 04 70 49 46 48 83 01 45 19 96 13 81 14 21 31 79 93 85 50 05]
    [  92 92 48 84 59 98 31 53 23 27 15 22 79 95 24 76 05 79 16 93 97 89 38 89 42 83 02 88 94 95 82 21 01 97 48 39 31 78 09 65 50 56 97 61 01 07 65 27 21 23 14 15 80 97 44 78 49 35 33 45 81 74 34 05 31 57 09 38 94 07 69 54 69 32 65 68 46 68 78 90 24 28 49 51 45 86 35]
    [  41 63 89 76 87 31 86 09 46 14 87 82 22 29 47 16 13 10 70 72 82 95 48 64 58 43 13 75 42 69 21 12 67 13 64 85 58 23 98 09 37 76 05 22 31 12 66 50 29 99 86 72 45 25 10 28 19 06 90 43 29 31 67 79 46 25 74 14 97 35 76 37 65 46 23 82 06 22 30 76 93 66 94 17 96 13 20 72]
    [  63 40 78 08 52 09 90 41 70 28 36 14 46 44 85 96 24 52 58 15 87 37 05 98 99 39 13 61 76 38 44 99 83 74 90 22 53 80 56 98 30 51 63 39 44 30 91 91 04 22 27 73 17 35 53 18 35 45 54 56 27 78 48 13 69 36 44 38 71 25 30 56 15 22 73 43 32 69 59 25 93 83 45 11 34 94 44 39 92]
    [  12 36 56 88 13 96 16 12 55 54 11 47 19 78 17 17 68 81 77 51 42 55 99 85 66 27 81 79 93 42 65 61 69 74 14 01 18 56 12 01 58 37 91 22 42 66 83 25 19 04 96 41 25 45 18 69 96 88 36 93 10 12 98 32 44 83 83 04 72 91 04 27 73 07 34 37 71 60 59 31 01 54 54 44 96 93 83 36 04 45]
    [  30 18 22 20 42 96 65 79 17 41 55 69 94 81 29 80 91 31 85 25 47 26 43 49 02 99 34 67 99 76 16 14 15 93 08 32 99 44 61 77 67 50 43 55 87 55 53 72 17 46 62 25 50 99 73 05 93 48 17 31 70 80 59 09 44 59 45 13 74 66 58 94 87 73 16 14 85 38 74 99 64 23 79 28 71 42 20 37 82 31 23]
    [  51 96 39 65 46 71 56 13 29 68 53 86 45 33 51 49 12 91 21 21 76 85 02 17 98 15 46 12 60 21 88 30 92 83 44 59 42 50 27 88 46 86 94 73 45 54 23 24 14 10 94 21 20 34 23 51 04 83 99 75 90 63 60 16 22 33 83 70 11 32 10 50 29 30 83 46 11 05 31 17 86 42 49 01 44 63 28 60 07 78 95 40]
    [  44 61 89 59 04 49 51 27 69 71 46 76 44 04 09 34 56 39 15 06 94 91 75 90 65 27 56 23 74 06 23 33 36 69 14 39 05 34 35 57 33 22 76 46 56 10 61 65 98 09 16 69 04 62 65 18 99 76 49 18 72 66 73 83 82 40 76 31 89 91 27 88 17 35 41 35 32 51 32 67 52 68 74 85 80 57 07 11 62 66 47 22 67]
    [  65 37 19 97 26 17 16 24 24 17 50 37 64 82 24 36 32 11 68 34 69 31 32 89 79 93 96 68 49 90 14 23 04 04 67 99 81 74 70 74 36 96 68 09 64 39 88 35 54 89 96 58 66 27 88 97 32 14 06 35 78 20 71 06 85 66 57 02 58 91 72 05 29 56 73 48 86 52 09 93 22 57 79 42 12 01 31 68 17 59 63 76 07 77]
    [  73 81 14 13 17 20 11 09 01 83 08 85 91 70 84 63 62 77 37 07 47 01 59 95 39 69 39 21 99 09 87 02 97 16 92 36 74 71 90 66 33 73 73 75 52 91 11 12 26 53 05 26 26 48 61 50 90 65 01 87 42 47 74 35 22 73 24 26 56 70 52 05 48 41 31 18 83 27 21 39 80 85 26 08 44 02 71 07 63 22 05 52 19 08 20]
    [  17 25 21 11 72 93 33 49 64 23 53 82 03 13 91 65 85 02 40 05 42 31 77 42 05 36 06 54 04 58 07 76 87 83 25 57 66 12 74 33 85 37 74 32 20 69 03 97 91 68 82 44 19 14 89 28 85 85 80 53 34 87 58 98 88 78 48 65 98 40 11 57 10 67 70 81 60 79 74 72 97 59 79 47 30 20 54 80 89 91 14 05 33 36 79 39]
    [  60 85 59 39 60 07 57 76 77 92 06 35 15 72 23 41 45 52 95 18 64 79 86 53 56 31 69 11 91 31 84 50 44 82 22 81 41 40 30 42 30 91 48 94 74 76 64 58 74 25 96 57 14 19 03 99 28 83 15 75 99 01 89 85 79 50 03 95 32 67 44 08 07 41 62 64 29 20 14 76 26 55 48 71 69 66 19 72 44 25 14 01 48 74 12 98 07]
    [  64 66 84 24 18 16 27 48 20 14 47 69 30 86 48 40 23 16 61 21 51 50 26 47 35 33 91 28 78 64 43 68 04 79 51 08 19 60 52 95 06 68 46 86 35 97 27 58 04 65 30 58 99 12 12 75 91 39 50 31 42 64 70 04 46 07 98 73 98 93 37 89 77 91 64 71 64 65 66 21 78 62 81 74 42 20 83 70 73 95 78 45 92 27 34 53 71 15]
    [  30 11 85 31 34 71 13 48 05 14 44 03 19 67 23 73 19 57 06 90 94 72 57 69 81 62 59 68 88 57 55 69 49 13 07 87 97 80 89 05 71 05 05 26 38 40 16 62 45 99 18 38 98 24 21 26 62 74 69 04 85 57 77 35 58 67 91 79 79 57 86 28 66 34 72 51 76 78 36 95 63 90 08 78 47 63 45 31 22 70 52 48 79 94 15 77 61 67 68]
    [  23 33 44 81 80 92 93 75 94 88 23 61 39 76 22 03 28 94 32 06 49 65 41 34 18 23 08 47 62 60 03 63 33 13 80 52 31 54 73 43 70 26 16 69 57 87 83 31 03 93 70 81 47 95 77 44 29 68 39 51 56 59 63 07 25 70 07 77 43 53 64 03 94 42 95 39 18 01 66 21 16 97 20 50 90 16 70 10 95 69 29 06 25 61 41 26 15 59 63 35]
    ]  )
  
    (pe-18-max-pyramid (copy-tree  pe-67-pyramid t))
  
  ;;the las row was extracted, and then:
  ;;(max 5139 5362 5465 5509 5591 5779 5783 5821 5840 5874 5872 6176 6170 6337 6283 6395 6420 6519 6522 6580 6721 6737 6705 6724 6720 6725 6745 6793 6886 6884 6806 6918 6888 6866 6933 7007 7007 7030 7042 7012 7011 6967 6950 7099 7099 7129 7099 7049 7021 7202 7179 7197 7225 7273 7181 7141 7178 7229 7200 7184 7192 7195 7251 7195 7191 7245 7182 7244 7198 7179 7168 6969 7002 6950 6973 6917 6827 6810 6868 6704 6633 6699 6622 6508 6548 6391 6412 6219 6272 6264 6224 6177 5885 5908 5775 5616 5474 5137 5078 4845)
  ;;max was 7273
#+END_SRC

** TODO 69: Totient maximum
Euler's Totient function, φ(n) [sometimes called the phi function], is used to determine the number of numbers less than n which are relatively prime to n. For example, as 1, 2, 4, 5, 7, and 8, are all less than nine and relatively prime to nine, φ(9)=6.

n	Relatively Prime	φ(n)	n/φ(n)
2	1	1	2
3	1,2	2	1.5
4	1,3	2	2
5	1,2,3,4	4	1.25
6	1,5	2	3
7	1,2,3,4,5,6	6	1.1666...
8	1,3,5,7	4	2
9	1,2,4,5,7,8	6	1.5
10	1,3,7,9	4	2.5
It can be seen that n=6 produces a maximum n/φ(n) for n ≤ 10.

Find the value of n ≤ 1,000,000 for which n/φ(n) is a maximum.


** TODO 70: Totient permutation
Euler's Totient function, φ(n) [sometimes called the phi function], is
used to determine the number of positive numbers less than or equal to
n which are relatively prime to n. For example, as 1, 2, 4, 5, 7, and
8, are all less than nine and relatively prime to nine, φ(9)=6.  The
number 1 is considered to be relatively prime to every positive
number, so φ(1)=1.

Interestingly, φ(87109)=79180, and it can be seen that 87109 is a
permutation of 79180.

Find the value of n, 1 < n < 107, for which φ(n) is a permutation of n
and the ratio n/φ(n) produces a minimum.

** TODO 79: Passcode derivation                                          :PI:
A common security method used for online banking is to ask the user for three random characters from a passcode. For example, if the passcode was 531278, they may ask for the 2nd, 3rd, and 5th characters; the expected reply would be: 317.

The text file, keylog.txt, contains fifty successful login attempts.

Given that the three characters are always asked for in order, analyse the file so as to determine the shortest possible secret passcode of unknown length.
** DONE 81: Path sum: two ways                                        :TT:US:
   CLOSED: [2013-08-07 Wed 16:03]

In the 5 by 5 matrix below, the minimal path sum from the top left to
the bottom right, by only moving to the right and down, is indicated
in bold red and is equal to 2427.


*131	673	234	103	18
*201	*96	*342	965	150
630	803	*746	*422	111
537	699	497	*121	956
805	732	524	*37	*331

Find the minimal path sum, in matrix.txt (right click and 'Save
Link/Target As...'), a 31K text file containing a 80 by 80 matrix,
from the top left to the bottom right by only moving right and down.
*** A
seems similar to "18: Maximum path sum I", except minimum instead of maximum.
#+BEGIN_SRC elisp
      
     
      
      
      (setq pe-81-matrix  '[[4445 2697 5115 718 2209 2212 654 4348 3079 6821 7668 3276 8874 4190 3785 2752 9473 7817 9137 496 7338 3434 7152 4355 4552 7917 7827 2460 2350 691 3514 5880 3145 7633 7199 3783 5066 7487 3285 1084 8985 760 872 8609 8051 1134 9536 5750 9716 9371 7619 5617 275 9721 2997 2698 1887 8825 6372 3014 2113 7122 7050 6775 5948 2758 1219 3539 348 7989 2735 9862 1263 8089 6401 9462 3168 2758 3748 5870]
                           [1096 20 1318 7586 5167 2642 1443 5741 7621 7030 5526 4244 2348 4641 9827 2448 6918 5883 3737 300 7116 6531 567 5997 3971 6623 820 6148 3287 1874 7981 8424 7672 7575 6797 6717 1078 5008 4051 8795 5820 346 1851 6463 2117 6058 3407 8211 117 4822 1317 4377 4434 5925 8341 4800 1175 4173 690 8978 7470 1295 3799 8724 3509 9849 618 3320 7068 9633 2384 7175 544 6583 1908 9983 481 4187 9353 9377]
                           [9607 7385 521 6084 1364 8983 7623 1585 6935 8551 2574 8267 4781 3834 2764 2084 2669 4656 9343 7709 2203 9328 8004 6192 5856 3555 2260 5118 6504 1839 9227 1259 9451 1388 7909 5733 6968 8519 9973 1663 5315 7571 3035 4325 4283 2304 6438 3815 9213 9806 9536 196 5542 6907 2475 1159 5820 9075 9470 2179 9248 1828 4592 9167 3713 4640 47 3637 309 7344 6955 346 378 9044 8635 7466 5036 9515 6385 9230]
                           [7206 3114 7760 1094 6150 5182 7358 7387 4497 955 101 1478 7777 6966 7010 8417 6453 4955 3496 107 449 8271 131 2948 6185 784 5937 8001 6104 8282 4165 3642 710 2390 575 715 3089 6964 4217 192 5949 7006 715 3328 1152 66 8044 4319 1735 146 4818 5456 6451 4113 1063 4781 6799 602 1504 6245 6550 1417 1343 2363 3785 5448 4545 9371 5420 5068 4613 4882 4241 5043 7873 8042 8434 3939 9256 2187]
                           [3620 8024 577 9997 7377 7682 1314 1158 6282 6310 1896 2509 5436 1732 9480 706 496 101 6232 7375 2207 2306 110 6772 3433 2878 8140 5933 8688 1399 2210 7332 6172 6403 7333 4044 2291 1790 2446 7390 8698 5723 3678 7104 1825 2040 140 3982 4905 4160 2200 5041 2512 1488 2268 1175 7588 8321 8078 7312 977 5257 8465 5068 3453 3096 1651 7906 253 9250 6021 8791 8109 6651 3412 345 4778 5152 4883 7505]
                           [1074 5438 9008 2679 5397 5429 2652 3403 770 9188 4248 2493 4361 8327 9587 707 9525 5913 93 1899 328 2876 3604 673 8576 6908 7659 2544 3359 3883 5273 6587 3065 1749 3223 604 9925 6941 2823 8767 7039 3290 3214 1787 7904 3421 7137 9560 8451 2669 9219 6332 1576 5477 6755 8348 4164 4307 2984 4012 6629 1044 2874 6541 4942 903 1404 9125 5160 8836 4345 2581 460 8438 1538 5507 668 3352 2678 6942]
                           [4295 1176 5596 1521 3061 9868 7037 7129 8933 6659 5947 5063 3653 9447 9245 2679 767 714 116 8558 163 3927 8779 158 5093 2447 5782 3967 1716 931 7772 8164 1117 9244 5783 7776 3846 8862 6014 2330 6947 1777 3112 6008 3491 1906 5952 314 4602 8994 5919 9214 3995 5026 7688 6809 5003 3128 2509 7477 110 8971 3982 8539 2980 4689 6343 5411 2992 5270 5247 9260 2269 7474 1042 7162 5206 1232 4556 4757]
                           [510 3556 5377 1406 5721 4946 2635 7847 4251 8293 8281 6351 4912 287 2870 3380 3948 5322 3840 4738 9563 1906 6298 3234 8959 1562 6297 8835 7861 239 6618 1322 2553 2213 5053 5446 4402 6500 5182 8585 6900 5756 9661 903 5186 7687 5998 7997 8081 8955 4835 6069 2621 1581 732 9564 1082 1853 5442 1342 520 1737 3703 5321 4793 2776 1508 1647 9101 2499 6891 4336 7012 3329 3212 1442 9993 3988 4930 7706]
                           [9444 3401 5891 9716 1228 7107 109 3563 2700 6161 5039 4992 2242 8541 7372 2067 1294 3058 1306 320 8881 5756 9326 411 8650 8824 5495 8282 8397 2000 1228 7817 2099 6473 3571 5994 4447 1299 5991 543 7874 2297 1651 101 2093 3463 9189 6872 6118 872 1008 1779 2805 9084 4048 2123 5877 55 3075 1737 9459 4535 6453 3644 108 5982 4437 5213 1340 6967 9943 5815 669 8074 1838 6979 9132 9315 715 5048]
                           [3327 4030 7177 6336 9933 5296 2621 4785 2755 4832 2512 2118 2244 4407 2170 499 7532 9742 5051 7687 970 6924 3527 4694 5145 1306 2165 5940 2425 8910 3513 1909 6983 346 6377 4304 9330 7203 6605 3709 3346 970 369 9737 5811 4427 9939 3693 8436 5566 1977 3728 2399 3985 8303 2492 5366 9802 9193 7296 1033 5060 9144 2766 1151 7629 5169 5995 58 7619 7565 4208 1713 6279 3209 4908 9224 7409 1325 8540]
                           [6882 1265 1775 3648 4690 959 5837 4520 5394 1378 9485 1360 4018 578 9174 2932 9890 3696 116 1723 1178 9355 7063 1594 1918 8574 7594 7942 1547 6166 7888 354 6932 4651 1010 7759 6905 661 7689 6092 9292 3845 9605 8443 443 8275 5163 7720 7265 6356 7779 1798 1754 5225 6661 1180 8024 5666 88 9153 1840 3508 1193 4445 2648 3538 6243 6375 8107 5902 5423 2520 1122 5015 6113 8859 9370 966 8673 2442]
                           [7338 3423 4723 6533 848 8041 7921 8277 4094 5368 7252 8852 9166 2250 2801 6125 8093 5738 4038 9808 7359 9494 601 9116 4946 2702 5573 2921 9862 1462 1269 2410 4171 2709 7508 6241 7522 615 2407 8200 4189 5492 5649 7353 2590 5203 4274 710 7329 9063 956 8371 3722 4253 4785 1194 4828 4717 4548 940 983 2575 4511 2938 1827 2027 2700 1236 841 5760 1680 6260 2373 3851 1841 4968 1172 5179 7175 3509]
                           [4420 1327 3560 2376 6260 2988 9537 4064 4829 8872 9598 3228 1792 7118 9962 9336 4368 9189 6857 1829 9863 6287 7303 7769 2707 8257 2391 2009 3975 4993 3068 9835 3427 341 8412 2134 4034 8511 6421 3041 9012 2983 7289 100 1355 7904 9186 6920 5856 2008 6545 8331 3655 5011 839 8041 9255 6524 3862 8788 62 7455 3513 5003 8413 3918 2076 7960 6108 3638 6999 3436 1441 4858 4181 1866 8731 7745 3744 1000]
                           [356 8296 8325 1058 1277 4743 3850 2388 6079 6462 2815 5620 8495 5378 75 4324 3441 9870 1113 165 1544 1179 2834 562 6176 2313 6836 8839 2986 9454 5199 6888 1927 5866 8760 320 1792 8296 7898 6121 7241 5886 5814 2815 8336 1576 4314 3109 2572 6011 2086 9061 9403 3947 5487 9731 7281 3159 1819 1334 3181 5844 5114 9898 4634 2531 4412 6430 4262 8482 4546 4555 6804 2607 9421 686 8649 8860 7794 6672]
                           [9870 152 1558 4963 8750 4754 6521 6256 8818 5208 5691 9659 8377 9725 5050 5343 2539 6101 1844 9700 7750 8114 5357 3001 8830 4438 199 9545 8496 43 2078 327 9397 106 6090 8181 8646 6414 7499 5450 4850 6273 5014 4131 7639 3913 6571 8534 9703 4391 7618 445 1320 5 1894 6771 7383 9191 4708 9706 6939 7937 8726 9382 5216 3685 2247 9029 8154 1738 9984 2626 9438 4167 6351 5060 29 1218 1239 4785]
                           [192 5213 8297 8974 4032 6966 5717 1179 6523 4679 9513 1481 3041 5355 9303 9154 1389 8702 6589 7818 6336 3539 5538 3094 6646 6702 6266 2759 4608 4452 617 9406 8064 6379 444 5602 4950 1810 8391 1536 316 8714 1178 5182 5863 5110 5372 4954 1978 2971 5680 4863 2255 4630 5723 2168 538 1692 1319 7540 440 6430 6266 7712 7385 5702 620 641 3136 7350 1478 3155 2820 9109 6261 1122 4470 14 8493 2095]
                           [1046 4301 6082 474 4974 7822 2102 5161 5172 6946 8074 9716 6586 9962 9749 5015 2217 995 5388 4402 7652 6399 6539 1349 8101 3677 1328 9612 7922 2879 231 5887 2655 508 4357 4964 3554 5930 6236 7384 4614 280 3093 9600 2110 7863 2631 6626 6620 68 1311 7198 7561 1768 5139 1431 221 230 2940 968 5283 6517 2146 1646 869 9402 7068 8645 7058 1765 9690 4152 2926 9504 2939 7504 6074 2944 6470 7859]
                           [4659 736 4951 9344 1927 6271 8837 8711 3241 6579 7660 5499 5616 3743 5801 4682 9748 8796 779 1833 4549 8138 4026 775 4170 2432 4174 3741 7540 8017 2833 4027 396 811 2871 1150 9809 2719 9199 8504 1224 540 2051 3519 7982 7367 2761 308 3358 6505 2050 4836 5090 7864 805 2566 2409 6876 3361 8622 5572 5895 3280 441 7893 8105 1634 2929 274 3926 7786 6123 8233 9921 2674 5340 1445 203 4585 3837]
                           [5759 338 7444 7968 7742 3755 1591 4839 1705 650 7061 2461 9230 9391 9373 2413 1213 431 7801 4994 2380 2703 6161 6878 8331 2538 6093 1275 5065 5062 2839 582 1014 8109 3525 1544 1569 8622 7944 2905 6120 1564 1839 5570 7579 1318 2677 5257 4418 5601 7935 7656 5192 1864 5886 6083 5580 6202 8869 1636 7907 4759 9082 5854 3185 7631 6854 5872 5632 5280 1431 2077 9717 7431 4256 8261 9680 4487 4752 4286]
                           [1571 1428 8599 1230 7772 4221 8523 9049 4042 8726 7567 6736 9033 2104 4879 4967 6334 6716 3994 1269 8995 6539 3610 7667 6560 6065 874 848 4597 1711 7161 4811 6734 5723 6356 6026 9183 2586 5636 1092 7779 7923 8747 6887 7505 9909 1792 3233 4526 3176 1508 8043 720 5212 6046 4988 709 5277 8256 3642 1391 5803 1468 2145 3970 6301 7767 2359 8487 9771 8785 7520 856 1605 8972 2402 2386 991 1383 5963]
                           [1822 4824 5957 6511 9868 4113 301 9353 6228 2881 2966 6956 9124 9574 9233 1601 7340 973 9396 540 4747 8590 9535 3650 7333 7583 4806 3593 2738 8157 5215 8472 2284 9473 3906 6982 5505 6053 7936 6074 7179 6688 1564 1103 6860 5839 2022 8490 910 7551 7805 881 7024 1855 9448 4790 1274 3672 2810 774 7623 4223 4850 6071 9975 4935 1915 9771 6690 3846 517 463 7624 4511 614 6394 3661 7409 1395 8127]
                           [8738 3850 9555 3695 4383 2378 87 6256 6740 7682 9546 4255 6105 2000 1851 4073 8957 9022 6547 5189 2487 303 9602 7833 1628 4163 6678 3144 8589 7096 8913 5823 4890 7679 1212 9294 5884 2972 3012 3359 7794 7428 1579 4350 7246 4301 7779 7790 3294 9547 4367 3549 1958 8237 6758 3497 3250 3456 6318 1663 708 7714 6143 6890 3428 6853 9334 7992 591 6449 9786 1412 8500 722 5468 1371 108 3939 4199 2535]
                           [7047 4323 1934 5163 4166 461 3544 2767 6554 203 6098 2265 9078 2075 4644 6641 8412 9183 487 101 7566 5622 1975 5726 2920 5374 7779 5631 3753 3725 2672 3621 4280 1162 5812 345 8173 9785 1525 955 5603 2215 2580 5261 2765 2990 5979 389 3907 2484 1232 5933 5871 3304 1138 1616 5114 9199 5072 7442 7245 6472 4760 6359 9053 7876 2564 9404 3043 9026 2261 3374 4460 7306 2326 966 828 3274 1712 3446]
                           [3975 4565 8131 5800 4570 2306 8838 4392 9147 11 3911 7118 9645 4994 2028 6062 5431 2279 8752 2658 7836 994 7316 5336 7185 3289 1898 9689 2331 5737 3403 1124 2679 3241 7748 16 2724 5441 6640 9368 9081 5618 858 4969 17 2103 6035 8043 7475 2181 939 415 1617 8500 8253 2155 7843 7974 7859 1746 6336 3193 2617 8736 4079 6324 6645 8891 9396 5522 6103 1857 8979 3835 2475 1310 7422 610 8345 7615]
                           [9248 5397 5686 2988 3446 4359 6634 9141 497 9176 6773 7448 1907 8454 916 1596 2241 1626 1384 2741 3649 5362 8791 7170 2903 2475 5325 6451 924 3328 522 90 4813 9737 9557 691 2388 1383 4021 1609 9206 4707 5200 7107 8104 4333 9860 5013 1224 6959 8527 1877 4545 7772 6268 621 4915 9349 5970 706 9583 3071 4127 780 8231 3017 9114 3836 7503 2383 1977 4870 8035 2379 9704 1037 3992 3642 1016 4303]
                           [5093 138 4639 6609 1146 5565 95 7521 9077 2272 974 4388 2465 2650 722 4998 3567 3047 921 2736 7855 173 2065 4238 1048 5 6847 9548 8632 9194 5942 4777 7910 8971 6279 7253 2516 1555 1833 3184 9453 9053 6897 7808 8629 4877 1871 8055 4881 7639 1537 7701 2508 7564 5845 5023 2304 5396 3193 2955 1088 3801 6203 1748 3737 1276 13 4120 7715 8552 3047 2921 106 7508 304 1280 7140 2567 9135 5266]
                           [6237 4607 7527 9047 522 7371 4883 2540 5867 6366 5301 1570 421 276 3361 527 6637 4861 2401 7522 5808 9371 5298 2045 5096 5447 7755 5115 7060 8529 4078 1943 1697 1764 5453 7085 960 2405 739 2100 5800 728 9737 5704 5693 1431 8979 6428 673 7540 6 7773 5857 6823 150 5869 8486 684 5816 9626 7451 5579 8260 3397 5322 6920 1879 2127 2884 5478 4977 9016 6165 6292 3062 5671 5968 78 4619 4763]
                           [9905 7127 9390 5185 6923 3721 9164 9705 4341 1031 1046 5127 7376 6528 3248 4941 1178 7889 3364 4486 5358 9402 9158 8600 1025 874 1839 1783 309 9030 1843 845 8398 1433 7118 70 8071 2877 3904 8866 6722 4299 10 1929 5897 4188 600 1889 3325 2485 6473 4474 7444 6992 4846 6166 4441 2283 2629 4352 7775 1101 2214 9985 215 8270 9750 2740 8361 7103 5930 8664 9690 8302 9267 344 2077 1372 1880 9550]
                           [5825 8517 7769 2405 8204 1060 3603 7025 478 8334 1997 3692 7433 9101 7294 7498 9415 5452 3850 3508 6857 9213 6807 4412 7310 854 5384 686 4978 892 8651 3241 2743 3801 3813 8588 6701 4416 6990 6490 3197 6838 6503 114 8343 5844 8646 8694 65 791 5979 2687 2621 2019 8097 1423 3644 9764 4921 3266 3662 5561 2476 8271 8138 6147 1168 3340 1998 9874 6572 9873 6659 5609 2711 3931 9567 4143 7833 8887]
                           [6223 2099 2700 589 4716 8333 1362 5007 2753 2848 4441 8397 7192 8191 4916 9955 6076 3370 6396 6971 3156 248 3911 2488 4930 2458 7183 5455 170 6809 6417 3390 1956 7188 577 7526 2203 968 8164 479 8699 7915 507 6393 4632 1597 7534 3604 618 3280 6061 9793 9238 8347 568 9645 2070 5198 6482 5000 9212 6655 5961 7513 1323 3872 6170 3812 4146 2736 67 3151 5548 2781 9679 7564 5043 8587 1893 4531]
                           [5826 3690 6724 2121 9308 6986 8106 6659 2142 1642 7170 2877 5757 6494 8026 6571 8387 9961 6043 9758 9607 6450 8631 8334 7359 5256 8523 2225 7487 1977 9555 8048 5763 2414 4948 4265 2427 8978 8088 8841 9208 9601 5810 9398 8866 9138 4176 5875 7212 3272 6759 5678 7649 4922 5422 1343 8197 3154 3600 687 1028 4579 2084 9467 4492 7262 7296 6538 7657 7134 2077 1505 7332 6890 8964 4879 7603 7400 5973 739]
                           [1861 1613 4879 1884 7334 966 2000 7489 2123 4287 1472 3263 4726 9203 1040 4103 6075 6049 330 9253 4062 4268 1635 9960 577 1320 3195 9628 1030 4092 4979 6474 6393 2799 6967 8687 7724 7392 9927 2085 3200 6466 8702 265 7646 8665 7986 7266 4574 6587 612 2724 704 3191 8323 9523 3002 704 5064 3960 8209 2027 2758 8393 4875 4641 9584 6401 7883 7014 768 443 5490 7506 1852 2005 8850 5776 4487 4269]
                           [4052 6687 4705 7260 6645 6715 3706 5504 8672 2853 1136 8187 8203 4016 871 1809 1366 4952 9294 5339 6872 2645 6083 7874 3056 5218 7485 8796 7401 3348 2103 426 8572 4163 9171 3176 948 7654 9344 3217 1650 5580 7971 2622 76 2874 880 2034 9929 1546 2659 5811 3754 7096 7436 9694 9960 7415 2164 953 2360 4194 2397 1047 2196 6827 575 784 2675 8821 6802 7972 5996 6699 2134 7577 2887 1412 4349 4380]
                           [4629 2234 6240 8132 7592 3181 6389 1214 266 1910 2451 8784 2790 1127 6932 1447 8986 2492 5476 397 889 3027 7641 5083 5776 4022 185 3364 5701 2442 2840 4160 9525 4828 6602 2614 7447 3711 4505 7745 8034 6514 4907 2605 7753 6958 7270 6936 3006 8968 439 2326 4652 3085 3425 9863 5049 5361 8688 297 7580 8777 7916 6687 8683 7141 306 9569 2384 1500 3346 4601 7329 9040 6097 2727 6314 4501 4974 2829]
                           [8316 4072 2025 6884 3027 1808 5714 7624 7880 8528 4205 8686 7587 3230 1139 7273 6163 6986 3914 9309 1464 9359 4474 7095 2212 7302 2583 9462 7532 6567 1606 4436 8981 5612 6796 4385 5076 2007 6072 3678 8331 1338 3299 8845 4783 8613 4071 1232 6028 2176 3990 2148 3748 103 9453 538 6745 9110 926 3125 473 5970 8728 7072 9062 1404 1317 5139 9862 6496 6062 3338 464 1600 2532 1088 8232 7739 8274 3873]
                           [2341 523 7096 8397 8301 6541 9844 244 4993 2280 7689 4025 4196 5522 7904 6048 2623 9258 2149 9461 6448 8087 7245 1917 8340 7127 8466 5725 6996 3421 5313 512 9164 9837 9794 8369 4185 1488 7210 1524 1016 4620 9435 2478 7765 8035 697 6677 3724 6988 5853 7662 3895 9593 1185 4727 6025 5734 7665 3070 138 8469 6748 6459 561 7935 8646 2378 462 7755 3115 9690 8877 3946 2728 8793 244 6323 8666 4271]
                           [6430 2406 8994 56 1267 3826 9443 7079 7579 5232 6691 3435 6718 5698 4144 7028 592 2627 217 734 6194 8156 9118 58 2640 8069 4127 3285 694 3197 3377 4143 4802 3324 8134 6953 7625 3598 3584 4289 7065 3434 2106 7132 5802 7920 9060 7531 3321 1725 1067 3751 444 5503 6785 7937 6365 4803 198 6266 8177 1470 6390 1606 2904 7555 9834 8667 2033 1723 5167 1666 8546 8152 473 4475 6451 7947 3062 3281]
                           [2810 3042 7759 1741 2275 2609 7676 8640 4117 1958 7500 8048 1757 3954 9270 1971 4796 2912 660 5511 3553 1012 5757 4525 6084 7198 8352 5775 7726 8591 7710 9589 3122 4392 6856 5016 749 2285 3356 7482 9956 7348 2599 8944 495 3462 3578 551 4543 7207 7169 7796 1247 4278 6916 8176 3742 8385 2310 1345 8692 2667 4568 1770 8319 3585 4920 3890 4928 7343 5385 9772 7947 8786 2056 9266 3454 2807 877 2660]
                           [6206 8252 5928 5837 4177 4333 207 7934 5581 9526 8906 1498 8411 2984 5198 5134 2464 8435 8514 8674 3876 599 5327 826 2152 4084 2433 9327 9697 4800 2728 3608 3849 3861 3498 9943 1407 3991 7191 9110 5666 8434 4704 6545 5944 2357 1163 4995 9619 6754 4200 9682 6654 4862 4744 5953 6632 1054 293 9439 8286 2255 696 8709 1533 1844 6441 430 1999 6063 9431 7018 8057 2920 6266 6799 356 3597 4024 6665]
                           [3847 6356 8541 7225 2325 2946 5199 469 5450 7508 2197 9915 8284 7983 6341 3276 3321 16 1321 7608 5015 3362 8491 6968 6818 797 156 2575 706 9516 5344 5457 9210 5051 8099 1617 9951 7663 8253 9683 2670 1261 4710 1068 8753 4799 1228 2621 3275 6188 4699 1791 9518 8701 5932 4275 6011 9877 2933 4182 6059 2930 6687 6682 9771 654 9437 3169 8596 1827 5471 8909 2352 123 4394 3208 8756 5513 6917 2056]
                           [5458 8173 3138 3290 4570 4892 3317 4251 9699 7973 1163 1935 5477 6648 9614 5655 9592 975 9118 2194 7322 8248 8413 3462 8560 1907 7810 6650 7355 2939 4973 6894 3933 3784 3200 2419 9234 4747 2208 2207 1945 2899 1407 6145 8023 3484 5688 7686 2737 3828 3704 9004 5190 9740 8643 8650 5358 4426 1522 1707 3613 9887 6956 2447 2762 833 1449 9489 2573 1080 4167 3456 6809 2466 227 7125 2759 6250 6472 8089]
                           [3266 7025 9756 3914 1265 9116 7723 9788 6805 5493 2092 8688 6592 9173 4431 4028 6007 7131 4446 4815 3648 6701 759 3312 8355 4485 4187 5188 8746 7759 3528 2177 5243 8379 3838 7233 4607 9187 7216 2190 6967 2920 6082 7910 5354 3609 8958 6949 7731 494 8753 8707 1523 4426 3543 7085 647 6771 9847 646 5049 824 8417 5260 2730 5702 2513 9275 4279 2767 8684 1165 9903 4518 55 9682 8963 6005 2102 6523]
                           [1998 8731 936 1479 5259 7064 4085 91 7745 7136 3773 3810 730 8255 2705 2653 9790 6807 2342 355 9344 2668 3690 2028 9679 8102 574 4318 6481 9175 5423 8062 2867 9657 7553 3442 3920 7430 3945 7639 3714 3392 2525 4995 4850 2867 7951 9667 486 9506 9888 781 8866 1702 3795 90 356 1483 4200 2131 6969 5931 486 6880 4404 1084 5169 4910 6567 8335 4686 5043 2614 3352 2667 4513 6472 7471 5720 1616]
                           [8878 1613 1716 868 1906 2681 564 665 5995 2474 7496 3432 9491 9087 8850 8287 669 823 347 6194 2264 2592 7871 7616 8508 4827 760 2676 4660 4881 7572 3811 9032 939 4384 929 7525 8419 5556 9063 662 8887 7026 8534 3111 1454 2082 7598 5726 6687 9647 7608 73 3014 5063 670 5461 5631 3367 9796 8475 7908 5073 1565 5008 5295 4457 1274 4788 1728 338 600 8415 8535 9351 7750 6887 5845 1741 125]
                           [3637 6489 9634 9464 9055 2413 7824 9517 7532 3577 7050 6186 6980 9365 9782 191 870 2497 8498 2218 2757 5420 6468 586 3320 9230 1034 1393 9886 5072 9391 1178 8464 8042 6869 2075 8275 3601 7715 9470 8786 6475 8373 2159 9237 2066 3264 5000 679 355 3069 4073 494 2308 5512 4334 9438 8786 8637 9774 1169 1949 6594 6072 4270 9158 7916 5752 6794 9391 6301 5842 3285 2141 3898 8027 4310 8821 7079 1307]
                           [8497 6681 4732 7151 7060 5204 9030 7157 833 5014 8723 3207 9796 9286 4913 119 5118 7650 9335 809 3675 2597 5144 3945 5090 8384 187 4102 1260 2445 2792 4422 8389 9290 50 1765 1521 6921 8586 4368 1565 5727 7855 2003 4834 9897 5911 8630 5070 1330 7692 7557 7980 6028 5805 9090 8265 3019 3802 698 9149 5748 1965 9658 4417 5994 5584 8226 2937 272 5743 1278 5698 8736 2595 6475 5342 6596 1149 6920]
                           [8188 8009 9546 6310 8772 2500 9846 6592 6872 3857 1307 8125 7042 1544 6159 2330 643 4604 7899 6848 371 8067 2062 3200 7295 1857 9505 6936 384 2193 2190 301 8535 5503 1462 7380 5114 4824 8833 1763 4974 8711 9262 6698 3999 2645 6937 7747 1128 2933 3556 7943 2885 3122 9105 5447 418 2899 5148 3699 9021 9501 597 4084 175 1621 1 1079 6067 5812 4326 9914 6633 5394 4233 6728 9084 1864 5863 1225]
                           [9935 8793 9117 1825 9542 8246 8437 3331 9128 9675 6086 7075 319 1334 7932 3583 7167 4178 1726 7720 695 8277 7887 6359 5912 1719 2780 8529 1359 2013 4498 8072 1129 9998 1147 8804 9405 6255 1619 2165 7491 1 8882 7378 3337 503 5758 4109 3577 985 3200 7615 8058 5032 1080 6410 6873 5496 1466 2412 9885 5904 4406 3605 8770 4361 6205 9193 1537 9959 214 7260 9566 1685 100 4920 7138 9819 5637 976]
                           [3466 9854 985 1078 7222 8888 5466 5379 3578 4540 6853 8690 3728 6351 7147 3134 6921 9692 857 3307 4998 2172 5783 3931 9417 2541 6299 13 787 2099 9131 9494 896 8600 1643 8419 7248 2660 2609 8579 91 6663 5506 7675 1947 6165 4286 1972 9645 3805 1663 1456 8853 5705 9889 7489 1107 383 4044 2969 3343 152 7805 4980 9929 5033 1737 9953 7197 9158 4071 1324 473 9676 3984 9680 3606 8160 7384 5432]
                           [1005 4512 5186 3953 2164 3372 4097 3247 8697 3022 9896 4101 3871 6791 3219 2742 4630 6967 7829 5991 6134 1197 1414 8923 8787 1394 8852 5019 7768 5147 8004 8825 5062 9625 7988 1110 3992 7984 9966 6516 6251 8270 421 3723 1432 4830 6935 8095 9059 2214 6483 6846 3120 1587 6201 6691 9096 9627 6671 4002 3495 9939 7708 7465 5879 6959 6634 3241 3401 2355 9061 2611 7830 3941 2177 2146 5089 7079 519 6351]
                           [7280 8586 4261 2831 7217 3141 9994 9940 5462 2189 4005 6942 9848 5350 8060 6665 7519 4324 7684 657 9453 9296 2944 6843 7499 7847 1728 9681 3906 6353 5529 2822 3355 3897 7724 4257 7489 8672 4356 3983 1948 6892 7415 4153 5893 4190 621 1736 4045 9532 7701 3671 1211 1622 3176 4524 9317 7800 5638 6644 6943 5463 3531 2821 1347 5958 3436 1438 2999 994 850 4131 2616 1549 3465 5946 690 9273 6954 7991]
                           [9517 399 3249 2596 7736 2142 1322 968 7350 1614 468 3346 3265 7222 6086 1661 5317 2582 7959 4685 2807 2917 1037 5698 1529 3972 8716 2634 3301 3412 8621 743 8001 4734 888 7744 8092 3671 8941 1487 5658 7099 2781 99 1932 4443 4756 4652 9328 1581 7855 4312 5976 7255 6480 3996 2748 1973 9731 4530 2790 9417 7186 5303 3557 351 7182 9428 1342 9020 7599 1392 8304 2070 9138 7215 2008 9937 1106 7110]
                           [7444 769 9688 632 1571 6820 8743 4338 337 3366 3073 1946 8219 104 4210 6986 249 5061 8693 7960 6546 1004 8857 5997 9352 4338 6105 5008 2556 6518 6694 4345 3727 7956 20 3954 8652 4424 9387 2035 8358 5962 5304 5194 8650 8282 1256 1103 2138 6679 1985 3653 2770 2433 4278 615 2863 1715 242 3790 2636 6998 3088 1671 2239 957 5411 4595 6282 2881 9974 2401 875 7574 2987 4587 3147 6766 9885 2965]
                           [3287 3016 3619 6818 9073 6120 5423 557 2900 2015 8111 3873 1314 4189 1846 4399 7041 7583 2427 2864 3525 5002 2069 748 1948 6015 2684 438 770 8367 1663 7887 7759 1885 157 7770 4520 4878 3857 1137 3525 3050 6276 5569 7649 904 4533 7843 2199 5648 7628 9075 9441 3600 7231 2388 5640 9096 958 3058 584 5899 8150 1181 9616 1098 8162 6819 8171 1519 1140 7665 8801 2632 1299 9192 707 9955 2710 7314]
                           [1772 2963 7578 3541 3095 1488 7026 2634 6015 4633 4370 2762 1650 2174 909 8158 2922 8467 4198 4280 9092 8856 8835 5457 2790 8574 9742 5054 9547 4156 7940 8126 9824 7340 8840 6574 3547 1477 3014 6798 7134 435 9484 9859 3031 4 1502 4133 1738 1807 4825 463 6343 9701 8506 9822 9555 8688 8168 3467 3234 6318 1787 5591 419 6593 7974 8486 9861 6381 6758 194 3061 4315 2863 4665 3789 2201 1492 4416]
                           [126 8927 6608 5682 8986 6867 1715 6076 3159 788 3140 4744 830 9253 5812 5021 7616 8534 1546 9590 1101 9012 9821 8132 7857 4086 1069 7491 2988 1579 2442 4321 2149 7642 6108 250 6086 3167 24 9528 7663 2685 1220 9196 1397 5776 1577 1730 5481 977 6115 199 6326 2183 3767 5928 5586 7561 663 8649 9688 949 5913 9160 1870 5764 9887 4477 6703 1413 4995 5494 7131 2192 8969 7138 3997 8697 646 1028]
                           [8074 1731 8245 624 4601 8706 155 8891 309 2552 8208 8452 2954 3124 3469 4246 3352 1105 4509 8677 9901 4416 8191 9283 5625 7120 2952 8881 7693 830 4580 8228 9459 8611 4499 1179 4988 1394 550 2336 6089 6872 269 7213 1848 917 6672 4890 656 1478 6536 3165 4743 4990 1176 6211 7207 5284 9730 4738 1549 4986 4942 8645 3698 9429 1439 2175 6549 3058 6513 1574 6988 8333 3406 5245 5431 7140 7085 6407]
                           [7845 4694 2530 8249 290 5948 5509 1588 5940 4495 5866 5021 4626 3979 3296 7589 4854 1998 5627 3926 8346 6512 9608 1918 7070 4747 4182 2858 2766 4606 6269 4107 8982 8568 9053 4244 5604 102 2756 727 5887 2566 7922 44 5986 621 1202 374 6988 4130 3627 6744 9443 4568 1398 8679 397 3928 9159 367 2917 6127 5788 3304 8129 911 2669 1463 9749 264 4478 8940 1109 7309 2462 117 4692 7724 225 2312]
                           [4164 3637 2000 941 8903 39 3443 7172 1031 3687 4901 8082 4945 4515 7204 9310 9349 9535 9940 218 1788 9245 2237 1541 5670 6538 6047 5553 9807 8101 1925 8714 445 8332 7309 6830 5786 5736 7306 2710 3034 1838 7969 6318 7912 2584 2080 7437 6705 2254 7428 820 782 9861 7596 3842 3631 8063 5240 6666 394 4565 7865 4895 9890 6028 6117 4724 9156 4473 4552 602 470 6191 4927 5387 884 3146 1978 3000]
                           [4258 6880 1696 3582 5793 4923 2119 1155 9056 9698 6603 3768 5514 9927 9609 6166 6566 4536 4985 4934 8076 9062 6741 6163 7399 4562 2337 5600 2919 9012 8459 1308 6072 1225 9306 8818 5886 7243 7365 8792 6007 9256 6699 7171 4230 7002 8720 7839 4533 1671 478 7774 1607 2317 5437 4705 7886 4760 6760 7271 3081 2997 3088 7675 6208 3101 6821 6840 122 9633 4900 2067 8546 4549 2091 7188 5605 8599 6758 5229]
                           [7854 5243 9155 3556 8812 7047 2202 1541 5993 4600 4760 713 434 7911 7426 7414 8729 322 803 7960 7563 4908 6285 6291 736 3389 9339 4132 8701 7534 5287 3646 592 3065 7582 2592 8755 6068 8597 1982 5782 1894 2900 6236 4039 6569 3037 5837 7698 700 7815 2491 7272 5878 3083 6778 6639 3589 5010 8313 2581 6617 5869 8402 6808 2951 2321 5195 497 2190 6187 1342 1316 4453 7740 4154 2959 1781 1482 8256]
                           [7178 2046 4419 744 8312 5356 6855 8839 319 2962 5662 47 6307 8662 68 4813 567 2712 9931 1678 3101 8227 6533 4933 6656 92 5846 4780 6256 6361 4323 9985 1231 2175 7178 3034 9744 6155 9165 7787 5836 9318 7860 9644 8941 6480 9443 8188 5928 161 6979 2352 5628 6991 1198 8067 5867 6620 3778 8426 2994 3122 3124 6335 3918 8897 2655 9670 634 1088 1576 8935 7255 474 8166 7417 9547 2886 5560 3842]
                           [6957 3111 26 7530 7143 1295 1744 6057 3009 1854 8098 5405 2234 4874 9447 2620 9303 27 7410 969 40 2966 5648 7596 8637 4238 3143 3679 7187 690 9980 7085 7714 9373 5632 7526 6707 3951 9734 4216 2146 3602 5371 6029 3039 4433 4855 4151 1449 3376 8009 7240 7027 4602 2947 9081 4045 8424 9352 8742 923 2705 4266 3232 2264 6761 363 2651 3383 7770 6730 7856 7340 9679 2158 610 4471 4608 910 6241]
                           [4417 6756 1013 8797 658 8809 5032 8703 7541 846 3357 2920 9817 1745 9980 7593 4667 3087 779 3218 6233 5568 4296 2289 2654 7898 5021 9461 5593 8214 9173 4203 2271 7980 2983 5952 9992 8399 3468 1776 3188 9314 1720 6523 2933 621 8685 5483 8986 6163 3444 9539 4320 155 3992 2828 2150 6071 524 2895 5468 8063 1210 3348 9071 4862 483 9017 4097 6186 9815 3610 5048 1644 1003 9865 9332 2145 1944 2213]
                           [9284 3803 4920 1927 6706 4344 7383 4786 9890 2010 5228 1224 3158 6967 8580 8990 8883 5213 76 8306 2031 4980 5639 9519 7184 5645 7769 3259 8077 9130 1317 3096 9624 3818 1770 695 2454 947 6029 3474 9938 3527 5696 4760 7724 7738 2848 6442 5767 6845 8323 4131 2859 7595 2500 4815 3660 9130 8580 7016 8231 4391 8369 3444 4069 4021 556 6154 627 2778 1496 4206 6356 8434 8491 3816 8231 3190 5575 1015]
                           [3787 7572 1788 6803 5641 6844 1961 4811 8535 9914 9999 1450 8857 738 4662 8569 6679 2225 7839 8618 286 2648 5342 2294 3205 4546 176 8705 3741 6134 8324 8021 7004 5205 7032 6637 9442 5539 5584 4819 5874 5807 8589 6871 9016 983 1758 3786 1519 6241 185 8398 495 3370 9133 3051 4549 9674 7311 9738 3316 9383 2658 2776 9481 7558 619 3943 3324 6491 4933 153 9738 4623 912 3595 7771 7939 1219 4405]
                           [2650 3883 4154 5809 315 7756 4430 1788 4451 1631 6461 7230 6017 5751 138 588 5282 2442 9110 9035 6349 2515 1570 6122 4192 4174 3530 1933 4186 4420 4609 5739 4135 2963 6308 1161 8809 8619 2796 3819 6971 8228 4188 1492 909 8048 2328 6772 8467 7671 9068 2226 7579 6422 7056 8042 3296 2272 3006 2196 7320 3238 3490 3102 37 1293 3212 4767 5041 8773 5794 4456 6174 7279 7054 2835 7053 9088 790 6640]
                           [3101 1057 7057 3826 6077 1025 2955 1224 1114 6729 5902 4698 6239 7203 9423 1804 4417 6686 1426 6941 8071 1029 4985 9010 6122 6597 1622 1574 3513 1684 7086 5505 3244 411 9638 4150 907 9135 829 981 1707 5359 8781 9751 5 9131 3973 7159 1340 6955 7514 7993 6964 8198 1933 2797 877 3993 4453 8020 9349 8646 2779 8679 2961 3547 3374 3510 1129 3568 2241 2625 9138 5974 8206 7669 7678 1833 8700 4480]
                           [4865 9912 8038 8238 782 3095 8199 1127 4501 7280 2112 2487 3626 2790 9432 1475 6312 8277 4827 2218 5806 7132 8752 1468 7471 6386 739 8762 8323 8120 5169 9078 9058 3370 9560 7987 8585 8531 5347 9312 1058 4271 1159 5286 5404 6925 8606 9204 7361 2415 560 586 4002 2644 1927 2824 768 4409 2942 3345 1002 808 4941 6267 7979 5140 8643 7553 9438 7320 4938 2666 4609 2778 8158 6730 3748 3867 1866 7181]
                           [171 3771 7134 8927 4778 2913 3326 2004 3089 7853 1378 1729 4777 2706 9578 1360 5693 3036 1851 7248 2403 2273 8536 6501 9216 613 9671 7131 7719 6425 773 717 8803 160 1114 7554 7197 753 4513 4322 8499 4533 2609 4226 8710 6627 644 9666 6260 4870 5744 7385 6542 6203 7703 6130 8944 5589 2262 6803 6381 7414 6888 5123 7320 9392 9061 6780 322 8975 7050 5089 1061 2260 3199 1150 1865 5386 9699 6501]
                           [3744 8454 6885 8277 919 1923 4001 6864 7854 5519 2491 6057 8794 9645 1776 5714 9786 9281 7538 6916 3215 395 2501 9618 4835 8846 9708 2813 3303 1794 8309 7176 2206 1602 1838 236 4593 2245 8993 4017 10 8215 6921 5206 4023 5932 6997 7801 262 7640 3107 8275 4938 7822 2425 3223 3886 2105 8700 9526 2088 8662 8034 7004 5710 2124 7164 3574 6630 9980 4242 2901 9471 1491 2117 4562 1130 9086 4117 6698]
                           [2810 2280 2331 1170 4554 4071 8387 1215 2274 9848 6738 1604 7281 8805 439 1298 8318 7834 9426 8603 6092 7944 1309 8828 303 3157 4638 4439 9175 1921 4695 7716 1494 1015 1772 5913 1127 1952 1950 8905 4064 9890 385 9357 7945 5035 7082 5369 4093 6546 5187 5637 2041 8946 1758 7111 6566 1027 1049 5148 7224 7248 296 6169 375 1656 7993 2816 3717 4279 4675 1609 3317 42 6201 3100 3144 163 9530 4531]
                           [7096 6070 1009 4988 3538 5801 7149 3063 2324 2912 7911 7002 4338 7880 2481 7368 3516 2016 7556 2193 1388 3865 8125 4637 4096 8114 750 3144 1938 7002 9343 4095 1392 4220 3455 6969 9647 1321 9048 1996 1640 6626 1788 314 9578 6630 2813 6626 4981 9908 7024 4355 3201 3521 3864 3303 464 1923 595 9801 3391 8366 8084 9374 1041 8807 9085 1892 9431 8317 9016 9221 8574 9981 9240 5395 2009 6310 2854 9255]
                           [8830 3145 2960 9615 8220 6061 3452 2918 6481 9278 2297 3385 6565 7066 7316 5682 107 7646 4466 68 1952 9603 8615 54 7191 791 6833 2560 693 9733 4168 570 9127 9537 1925 8287 5508 4297 8452 8795 6213 7994 2420 4208 524 5915 8602 8330 2651 8547 6156 1812 6271 7991 9407 9804 1553 6866 1128 2119 4691 9711 8315 5879 9935 6900 482 682 4126 1041 428 6247 3720 5882 7526 2582 4327 7725 3503 2631]
                           [2738 9323 721 7434 1453 6294 2957 3786 5722 6019 8685 4386 3066 9057 6860 499 5315 3045 5194 7111 3137 9104 941 586 3066 755 4177 8819 7040 5309 3583 3897 4428 7788 4721 7249 6559 7324 825 7311 3760 6064 6070 9672 4882 584 1365 9739 9331 5783 2624 7889 1604 1303 1555 7125 8312 425 8936 3233 7724 1480 403 7440 1784 1754 4721 1569 652 3893 4574 5692 9730 4813 9844 8291 9199 7101 3391 8914]
                           [6044 2928 9332 3328 8588 447 3830 1176 3523 2705 8365 6136 5442 9049 5526 8575 8869 9031 7280 706 2794 8814 5767 4241 7696 78 6570 556 5083 1426 4502 3336 9518 2292 1885 3740 3153 9348 9331 8051 2759 5407 9028 7840 9255 831 515 2612 9747 7435 8964 4971 2048 4900 5967 8271 1719 9670 2810 6777 1594 6367 6259 8316 3815 1689 6840 9437 4361 822 9619 3065 83 6344 7486 8657 8228 9635 6932 4864]
                           [8478 4777 6334 4678 7476 4963 6735 3096 5860 1405 5127 7269 7793 4738 227 9168 2996 8928 765 733 1276 7677 6258 1528 9558 3329 302 8901 1422 8277 6340 645 9125 8869 5952 141 8141 1816 9635 4025 4184 3093 83 2344 2747 9352 7966 1206 1126 1826 218 7939 2957 2729 810 8752 5247 4174 4038 8884 7899 9567 301 5265 5752 7524 4381 1669 3106 8270 6228 6373 754 2547 4240 2313 5514 3022 1040 9738]
                           [2265 8192 1763 1369 8469 8789 4836 52 1212 6690 5257 8918 6723 6319 378 4039 2421 8555 8184 9577 1432 7139 8078 5452 9628 7579 4161 7490 5159 8559 1011 81 478 5840 1964 1334 6875 8670 9900 739 1514 8692 522 9316 6955 1345 8132 2277 3193 9773 3923 4177 2183 1236 6747 6575 4874 6003 6409 8187 745 8776 9440 7543 9825 2582 7381 8147 7236 5185 7564 6125 218 7991 6394 391 7659 7456 5128 5294]
                           [2132 8992 8160 5782 4420 3371 3798 5054 552 5631 7546 4716 1332 6486 7892 7441 4370 6231 4579 2121 8615 1145 9391 1524 1385 2400 9437 2454 7896 7467 2928 8400 3299 4025 7458 4703 7206 6358 792 6200 725 4275 4136 7390 5984 4502 7929 5085 8176 4600 119 3568 76 9363 6943 2248 9077 9731 6213 5817 6729 4190 3092 6910 759 2682 8380 1254 9604 3011 9291 5329 9453 9746 2739 6522 3765 5634 1113 5789]
                           [5304 5499 564 2801 679 2653 1783 3608 7359 7797 3284 796 3222 437 7185 6135 8571 2778 7488 5746 678 6140 861 7750 803 9859 9918 2425 3734 2698 9005 4864 9818 6743 2475 132 9486 3825 5472 919 292 4411 7213 7699 6435 9019 6769 1388 802 2124 1345 8493 9487 8558 7061 8777 8833 2427 2238 5409 4957 8503 3171 7622 5779 6145 2417 5873 5563 5693 9574 9491 1937 7384 4563 6842 5432 2751 3406 7981]
                           ])
    
  (defun pe-81-min-neighbour-sum (matrix x y)
    (let ( (here ( aref-matrix matrix x y))
           (neighbour-W (condition-case nil (aref-matrix matrix (1- x)  y ) (error 0000000000))         )
           (neighbour-N (condition-case nil (aref-matrix matrix  x (1- y) ) (error 0000000000)) ))
      (cond ((and (= x 0) (= y 0))
             here)
            ((= x 0)  (+ here neighbour-N))
            ((= y 0)  (+ here neighbour-W))
            (t 
             (min (+ here neighbour-W)
                  (+ here neighbour-N))))))
    
  (defun pe-81-min-path (matrix)
    (cl-loop for y from 0 to (1- (length matrix)) do
             (cl-loop for x from 0 to (1- (length matrix)) do
                      (message "X %d Y %d v %d" x y (aref-matrix matrix x y))
                      (aset-matrix matrix x y  (pe-81-min-neighbour-sum matrix x y))))
    matrix)
  
     (setq pe-81-test-matrix 
            '[[131    673     234     103     18]
              [201    96      342     965     150]
              [630    803     746     422     111]
              [537    699     497     121     956]
              [805    732     524     37      331]]
    )
  (pe-81-min-neighbour-sum pe-81-test-matrix 0 0)
  ;;131
  (pe-81-min-neighbour-sum pe-81-test-matrix 1 0)
  ;;804
  (pe-81-min-neighbour-sum pe-81-test-matrix 0 1)
  ;;332
  
  
  
  (pe-81-min-path (copy-tree  pe-81-test-matrix t))
    ;;lower right corner should be 2427
    
  (pe-81-min-path (copy-tree  pe-81-matrix t))
;;427337
#+END_SRC
** TODO 89: Roman numerals                                           :PI::FF:
The rules for writing Roman numerals allow for many ways of writing
each number (see About Roman Numerals...). However, there is always a
"best" way of writing a particular number.

For example, the following represent all of the legitimate ways of
writing the number sixteen:

IIIIIIIIIIIIIIII
VIIIIIIIIIII
VVIIIIII
XIIIIII
VVVI
XVI

The last example being considered the most efficient, as it uses the
least number of numerals.

The 11K text file, roman.txt (right click and 'Save Link/Target
As...'), contains one thousand numbers written in valid, but not
necessarily minimal, Roman numerals; that is, they are arranged in
descending units and obey the subtractive pair rule (see About Roman
Numerals... for the definitive rules for this problem).

Find the number of characters saved by writing each of these in their
minimal form.

Note: You can assume that all the Roman numerals in the file contain
no more than four consecutive identical units.
*** A
#+BEGIN_SRC elisp
  (setq pe-89-data
        '(
         "MMMMDCLXXII"
         "MMDCCCLXXXIII"
         "MMMDLXVIIII"
         "MMMMDXCV"
         "DCCCLXXII"
         "MMCCCVI"
         "MMMCDLXXXVII"
         "MMMMCCXXI"
         "MMMCCXX"
         "MMMMDCCCLXXIII"
         "MMMCCXXXVII"
         "MMCCCLXXXXIX"
         "MDCCCXXIIII"
         "MMCXCVI"
         "CCXCVIII"
         "MMMCCCXXXII"
         "MDCCXXX"
         "MMMDCCCL"
         "MMMMCCLXXXVI"
         "MMDCCCXCVI"
         "MMMDCII"
         "MMMCCXII"
         "MMMMDCCCCI"
         "MMDCCCXCII"
         "MDCXX"
         "CMLXXXVII"
         "MMMXXI"
         "MMMMCCCXIV"
         "MLXXII"
         "MCCLXXVIIII"
         "MMMMCCXXXXI"
         "MMDCCCLXXII"
         "MMMMXXXI"
         "MMMDCCLXXX"
         "MMDCCCLXXIX"
         "MMMMLXXXV"
         "MCXXI"
         "MDCCCXXXVII"
         "MMCCCLXVII"
         "MCDXXXV"
         "CCXXXIII"
         "CMXX"
         "MMMCLXIV"
         "MCCCLXXXVI"
         "DCCCXCVIII"
         "MMMDCCCCXXXIV"
         "CDXVIIII"
         "MMCCXXXV"
         "MDCCCXXXII"
         "MMMMD"
         "MMDCCLXIX"
         "MMMMCCCLXXXXVI"
         "MMDCCXLII"
         "MMMDCCCVIIII"
         "DCCLXXXIIII"
         "MDCCCCXXXII"
         "MMCXXVII"
         "DCCCXXX"
         "CCLXIX"
         "MMMXI"
         "MMMMCMLXXXXVIII"
         "MMMMDLXXXVII"
         "MMMMDCCCLX"
         "MMCCLIV"
         "CMIX"
         "MMDCCCLXXXIIII"
         "CLXXXII"
         "MMCCCCXXXXV"
         "MMMMDLXXXVIIII"
         "MMMDCCCXXI"
         "MMDCCCCLXXVI"
         "MCCCCLXX"
         "MMCDLVIIII"
         "MMMDCCCLIX"
         "MMMMCCCCXIX"
         "MMMDCCCLXXV"
         "XXXI"
         "CDLXXXIII"
         "MMMCXV"
         "MMDCCLXIII"
         "MMDXXX"
         "MMMMCCCLVII"
         "MMMDCI"
         "MMMMCDLXXXIIII"
         "MMMMCCCXVI"
         "CCCLXXXVIII"
         "MMMMCML"
         "MMMMXXIV"
         "MMMCCCCXXX"
         "DCCX"
         "MMMCCLX"
         "MMDXXXIII"
         "CCCLXIII"
         "MMDCCXIII"
         "MMMCCCXLIV"
         "CLXXXXI"
         "CXVI"
         "MMMMCXXXIII"
         "CLXX"
         "DCCCXVIII"
         "MLXVII"
         "DLXXXX"
         "MMDXXI"
         "MMMMDLXXXXVIII"
         "MXXII"
         "LXI"
         "DCCCCXLIII"
         "MMMMDV"
         "MMMMXXXIV"
         "MDCCCLVIII"
         "MMMCCLXXII"
         "MMMMDCCXXXVI"
         "MMMMLXXXIX"
         "MDCCCLXXXI"
         "MMMMDCCCXV"
         "MMMMCCCCXI"
         "MMMMCCCLIII"
         "MDCCCLXXI"
         "MMCCCCXI"
         "MLXV"
         "MMCDLXII"
         "MMMMDXXXXII"
         "MMMMDCCCXL"
         "MMMMCMLVI"
         "CCLXXXIV"
         "MMMDCCLXXXVI"
         "MMCLII"
         "MMMCCCCXV"
         "MMLXXXIII"
         "MMMV"
         "MMMV"
         "DCCLXII"
         "MMDCCCCXVI"
         "MMDCXLVIII"
         "CCLIIII"
         "CCCXXV"
         "MMDCCLXXXVIIII"
         "MMMMDCLXXVIII"
         "MMMMDCCCXCI"
         "MMMMCCCXX"
         "MMCCXLV"
         "MMMDCCCLXIX"
         "MMCCLXIIII"
         "MMMDCCCXLIX"
         "MMMMCCCLXIX"
         "CMLXXXXI"
         "MCMLXXXIX"
         "MMCDLXI"
         "MMDCLXXVIII"
         "MMMMDCCLXI"
         "MCDXXV"
         "DL"
         "CCCLXXII"
         "MXVIIII"
         "MCCCCLXVIII"
         "CIII"
         "MMMDCCLXXIIII"
         "MMMDVIII"
         "MMMMCCCLXXXXVII"
         "MMDXXVII"
         "MMDCCLXXXXV"
         "MMMMCXLVI"
         "MMMDCCLXXXII"
         "MMMDXXXVI"
         "MCXXII"
         "CLI"
         "DCLXXXIX"
         "MMMCLI"
         "MDCLXIII"
         "MMMMDCCXCVII"
         "MMCCCLXXXV"
         "MMMDCXXVIII"
         "MMMCDLX"
         "MMMCMLII"
         "MMMIV"
         "MMMMDCCCLVIII"
         "MMMDLXXXVIII"
         "MCXXIV"
         "MMMMLXXVI"
         "CLXXIX"
         "MMMCCCCXXVIIII"
         "DCCLXXXV"
         "MMMDCCCVI"
         "LI"
         "CLXXXVI"
         "MMMMCCCLXXVI"
         "MCCCLXVI"
         "CCXXXIX"
         "MMDXXXXI"
         "MMDCCCXLI"
         "DCCCLXXXVIII"
         "MMMMDCCCIV"
         "MDCCCCXV"
         "MMCMVI"
         "MMMMCMLXXXXV"
         "MMDCCLVI"
         "MMMMCCXLVIII"
         "DCCCCIIII"
         "MMCCCCIII"
         "MMMDCCLXXXVIIII"
         "MDCCCLXXXXV"
         "DVII"
         "MMMV"
         "DCXXV"
         "MMDCCCXCV"
         "DCVIII"
         "MMCDLXVI"
         "MCXXVIII"
         "MDCCXCVIII"
         "MMDCLX"
         "MMMDCCLXIV"
         "MMCDLXXVII"
         "MMDLXXXIIII"
         "MMMMCCCXXII"
         "MMMDCCCXLIIII"
         "DCCCCLXVII"
         "MMMCLXXXXIII"
         "MCCXV"
         "MMMMDCXI"
         "MMMMDCLXXXXV"
         "MMMCCCLII"
         "MMCMIX"
         "MMDCCXXV"
         "MMDLXXXVI"
         "MMMMDCXXVIIII"
         "DCCCCXXXVIIII"
         "MMCCXXXIIII"
         "MMDCCLXXVIII"
         "MDCCLXVIIII"
         "MMCCLXXXV"
         "MMMMDCCCLXXXVIII"
         "MMCMXCI"
         "MDXLII"
         "MMMMDCCXIV"
         "MMMMLI"
         "DXXXXIII"
         "MMDCCXI"
         "MMMMCCLXXXIII"
         "MMMDCCCLXXIII"
         "MDCLVII"
         "MMCD"
         "MCCCXXVII"
         "MMMMDCCIIII"
         "MMMDCCXLVI"
         "MMMCLXXXVII"
         "MMMCCVIIII"
         "MCCCCLXXIX"
         "DL"
         "DCCCLXXVI"
         "MMDXCI"
         "MMMMDCCCCXXXVI"
         "MMCII"
         "MMMDCCCXXXXV"
         "MMMCDXLV"
         "MMDCXXXXIV"
         "MMD"
         "MDCCCLXXXX"
         "MMDCXLIII"
         "MMCCXXXII"
         "MMDCXXXXVIIII"
         "DCCCLXXI"
         "MDXCVIIII"
         "MMMMCCLXXVIII"
         "MDCLVIIII"
         "MMMCCCLXXXIX"
         "MDCLXXXV"
         "MDLVIII"
         "MMMMCCVII"
         "MMMMDCXIV"
         "MMMCCCLXIIII"
         "MMIIII"
         "MMMMCCCLXXIII"
         "CCIII"
         "MMMCCLV"
         "MMMDXIII"
         "MMMCCCXC"
         "MMMDCCCXXI"
         "MMMMCCCCXXXII"
         "CCCLVI"
         "MMMCCCLXXXVI"
         "MXVIIII"
         "MMMCCCCXIIII"
         "CLXVII"
         "MMMCCLXX"
         "CCCCLXIV"
         "MMXXXXII"
         "MMMMCCLXXXX"
         "MXL"
         "CCXVI"
         "CCCCLVIIII"
         "MMCCCII"
         "MCCCLVIII"
         "MMMMCCCX"
         "MCDLXXXXIV"
         "MDCCCXIII"
         "MMDCCCXL"
         "MMMMCCCXXIII"
         "DXXXIV"
         "CVI"
         "MMMMDCLXXX"
         "DCCCVII"
         "MMCMLXIIII"
         "MMMDCCCXXXIII"
         "DCCC"
         "MDIII"
         "MMCCCLXVI"
         "MMMCCCCLXXI"
         "MMDCCCCXVIII"
         "CCXXXVII"
         "CCCXXV"
         "MDCCCXII"
         "MMMCMV"
         "MMMMCMXV"
         "MMMMDCXCI"
         "DXXI"
         "MMCCXLVIIII"
         "MMMMCMLII"
         "MDLXXX"
         "MMDCLXVI"
         "CXXI"
         "MMMDCCCLIIII"
         "MMMCXXI"
         "MCCIII"
         "MMDCXXXXI"
         "CCXCII"
         "MMMMDXXXV"
         "MMMCCCLXV"
         "MMMMDLXV"
         "MMMCCCCXXXII"
         "MMMCCCVIII"
         "DCCCCLXXXXII"
         "MMCLXIV"
         "MMMMCXI"
         "MLXXXXVII"
         "MMMCDXXXVIII"
         "MDXXII"
         "MLV"
         "MMMMDLXVI"
         "MMMCXII"
         "XXXIII"
         "MMMMDCCCXXVI"
         "MMMLXVIIII"
         "MMMLX"
         "MMMCDLXVII"
         "MDCCCLVII"
         "MMCXXXVII"
         "MDCCCCXXX"
         "MMDCCCLXIII"
         "MMMMDCXLIX"
         "MMMMCMXLVIII"
         "DCCCLXXVIIII"
         "MDCCCLIII"
         "MMMCMLXI"
         "MMMMCCLXI"
         "MMDCCCLIII"
         "MMMDCCCVI"
         "MMDXXXXIX"
         "MMCLXXXXV"
         "MMDXXX"
         "MMMXIII"
         "DCLXXIX"
         "DCCLXII"
         "MMMMDCCLXVIII"
         "MDCCXXXXIII"
         "CCXXXII"
         "MMMMDCXXV"
         "MMMCCCXXVIII"
         "MDCVIII"
         "MMMCLXXXXIIII"
         "CLXXXI"
         "MDCCCCXXXIII"
         "MMMMDCXXX"
         "MMMDCXXIV"
         "MMMCCXXXVII"
         "MCCCXXXXIIII"
         "CXVIII"
         "MMDCCCCIV"
         "MMMMCDLXXV"
         "MMMDLXIV"
         "MDXCIII"
         "MCCLXXXI"
         "MMMDCCCXXIV"
         "MCXLIII"
         "MMMDCCCI"
         "MCCLXXX"
         "CCXV"
         "MMDCCLXXI"
         "MMDLXXXIII"
         "MMMMDCXVII"
         "MMMCMLXV"
         "MCLXVIII"
         "MMMMCCLXXVI"
         "MMMDCCLXVIIII"
         "MMMMDCCCIX"
         "DLXXXXIX"
         "DCCCXXII"
         "MMMMIII"
         "MMMMCCCLXXVI"
         "DCCCXCIII"
         "DXXXI"
         "MXXXIIII"
         "CCXII"
         "MMMDCCLXXXIIII"
         "MMMCXX"
         "MMMCMXXVII"
         "DCCCXXXX"
         "MMCDXXXVIIII"
         "MMMMDCCXVIII"
         "LV"
         "MMMDCCCCVI"
         "MCCCII"
         "MMCMLXVIIII"
         "MDCCXI"
         "MMMMDLXVII"
         "MMCCCCLXI"
         "MMDCCV"
         "MMMCCCXXXIIII"
         "MMMMDI"
         "MMMDCCCXCV"
         "MMDCCLXXXXI"
         "MMMDXXVI"
         "MMMDCCCLVI"
         "MMDCXXX"
         "MCCCVII"
         "MMMMCCCLXII"
         "MMMMXXV"
         "MMCMXXV"
         "MMLVI"
         "MMDXXX"
         "MMMMCVII"
         "MDC"
         "MCCIII"
         "MMMMDCC"
         "MMCCLXXV"
         "MMDCCCXXXXVI"
         "MMMMCCCLXV"
         "CDXIIII"
         "MLXIIII"
         "CCV"
         "MMMCMXXXI"
         "CCCCLXVI"
         "MDXXXII"
         "MMMMCCCLVIII"
         "MMV"
         "MMMCLII"
         "MCMLI"
         "MMDCCXX"
         "MMMMCCCCXXXVI"
         "MCCLXXXI"
         "MMMCMVI"
         "DCCXXX"
         "MMMMCCCLXV"
         "DCCCXI"
         "MMMMDCCCXIV"
         "CCCXXI"
         "MMDLXXV"
         "CCCCLXXXX"
         "MCCCLXXXXII"
         "MMDCIX"
         "DCCXLIIII"
         "DXIV"
         "MMMMCLII"
         "CDLXI"
         "MMMCXXVII"
         "MMMMDCCCCLXIII"
         "MMMDCLIIII"
         "MCCCCXXXXII"
         "MMCCCLX"
         "CCCCLIII"
         "MDCCLXXVI"
         "MCMXXIII"
         "MMMMDLXXVIII"
         "MMDCCCCLX"
         "MMMCCCLXXXX"
         "MMMCDXXVI"
         "MMMDLVIII"
         "CCCLXI"
         "MMMMDCXXII"
         "MMDCCCXXI"
         "MMDCCXIII"
         "MMMMCLXXXVI"
         "MDCCCCXXVI"
         "MDV"
         "MMDCCCCLXXVI"
         "MMMMCCXXXVII"
         "MMMDCCLXXVIIII"
         "MMMCCCCLXVII"
         "DCCXLI"
         "MMCLXXXVIII"
         "MCCXXXVI"
         "MMDCXLVIII"
         "MMMMCXXXII"
         "MMMMDCCLXVI"
         "MMMMCMLI"
         "MMMMCLXV"
         "MMMMDCCCXCIV"
         "MCCLXXVII"
         "LXXVIIII"
         "DCCLII"
         "MMMCCCXCVI"
         "MMMCLV"
         "MMDCCCXXXXVIII"
         "DCCCXV"
         "MXC"
         "MMDCCLXXXXVII"
         "MMMMCML"
         "MMDCCCLXXVIII"
         "DXXI"
         "MCCCXLI"
         "DCLXXXXI"
         "MMCCCLXXXXVIII"
         "MDCCCCLXXVIII"
         "MMMMDXXV"
         "MMMDCXXXVI"
         "MMMCMXCVII"
         "MMXVIIII"
         "MMMDCCLXXIV"
         "MMMCXXV"
         "DXXXVIII"
         "MMMMCLXVI"
         "MDXII"
         "MMCCCLXX"
         "CCLXXI"
         "DXIV"
         "MMMCLIII"
         "DLII"
         "MMMCCCXLIX"
         "MMCCCCXXVI"
         "MMDCXLIII"
         "MXXXXII"
         "CCCLXXXV"
         "MDCLXXVI"
         "MDCXII"
         "MMMCCCLXXXIII"
         "MMDCCCCLXXXII"
         "MMMMCCCLXXXV"
         "MMDCXXI"
         "DCCCXXX"
         "MMMDCCCCLII"
         "MMMDCCXXII"
         "MMMMCDXCVIII"
         "MMMCCLXVIIII"
         "MMXXV"
         "MMMMCDXIX"
         "MMMMCCCX"
         "MMMCCCCLXVI"
         "MMMMDCLXXVIIII"
         "MMMMDCXXXXIV"
         "MMMCMXII"
         "MMMMXXXIII"
         "MMMMDLXXXII"
         "DCCCLIV"
         "MDXVIIII"
         "MMMCLXXXXV"
         "CCCCXX"
         "MMDIX"
         "MMCMLXXXVIII"
         "DCCXLIII"
         "DCCLX"
         "D"
         "MCCCVII"
         "MMMMCCCLXXXIII"
         "MDCCCLXXIIII"
         "MMMDCCCCLXXXVII"
         "MMMMCCCVII"
         "MMMDCCLXXXXVI"
         "CDXXXIV"
         "MCCLXVIII"
         "MMMMDLX"
         "MMMMDXII"
         "MMMMCCCCLIIII"
         "MCMLXXXXIII"
         "MMMMDCCCIII"
         "MMDCLXXXIII"
         "MDCCCXXXXIV"
         "XXXXVII"
         "MMMDCCCXXXII"
         "MMMDCCCXLII"
         "MCXXXV"
         "MDCXXVIIII"
         "MMMCXXXXIIII"
         "MMMMCDXVII"
         "MMMDXXIII"
         "MMMMCCCCLXI"
         "DCLXXXXVIIII"
         "LXXXXI"
         "CXXXIII"
         "MCDX"
         "MCCLVII"
         "MDCXXXXII"
         "MMMCXXIV"
         "MMMMLXXXX"
         "MMDCCCCXLV"
         "MLXXX"
         "MMDCCCCLX"
         "MCDLIII"
         "MMMCCCLXVII"
         "MMMMCCCLXXIV"
         "MMMDCVIII"
         "DCCCCXXIII"
         "MMXCI"
         "MMDCCIV"
         "MMMMDCCCXXXIV"
         "CCCLXXI"
         "MCCLXXXII"
         "MCMIII"
         "CCXXXI"
         "DCCXXXVIII"
         "MMMMDCCXLVIIII"
         "MMMMCMXXXV"
         "DCCCLXXV"
         "DCCXCI"
         "MMMMDVII"
         "MMMMDCCCLXVIIII"
         "CCCXCV"
         "MMMMDCCXX"
         "MCCCCII"
         "MMMCCCXC"
         "MMMCCCII"
         "MMDCCLXXVII"
         "MMDCLIIII"
         "CCXLIII"
         "MMMDCXVIII"
         "MMMCCCIX"
         "MCXV"
         "MMCCXXV"
         "MLXXIIII"
         "MDCCXXVI"
         "MMMCCCXX"
         "MMDLXX"
         "MMCCCCVI"
         "MMDCCXX"
         "MMMMDCCCCXCV"
         "MDCCCXXXII"
         "MMMMDCCCCXXXX"
         "XCIV"
         "MMCCCCLX"
         "MMXVII"
         "MLXXI"
         "MMMDXXVIII"
         "MDCCCCII"
         "MMMCMLVII"
         "MMCLXXXXVIII"
         "MDCCCCLV"
         "MCCCCLXXIIII"
         "MCCCLII"
         "MCDXLVI"
         "MMMMDXVIII"
         "DCCLXXXIX"
         "MMMDCCLXIV"
         "MDCCCCXLIII"
         "CLXXXXV"
         "MMMMCCXXXVI"
         "MMMDCCCXXI"
         "MMMMCDLXXVII"
         "MCDLIII"
         "MMCCXLVI"
         "DCCCLV"
         "MCDLXX"
         "DCLXXVIII"
         "MMDCXXXIX"
         "MMMMDCLX"
         "MMDCCLI"
         "MMCXXXV"
         "MMMCCXII"
         "MMMMCMLXII"
         "MMMMCCV"
         "MCCCCLXIX"
         "MMMMCCIII"
         "CLXVII"
         "MCCCLXXXXIIII"
         "MMMMDCVIII"
         "MMDCCCLXI"
         "MMLXXIX"
         "CMLXIX"
         "MMDCCCXLVIIII"
         "DCLXII"
         "MMMCCCXLVII"
         "MDCCCXXXV"
         "MMMMDCCXCVI"
         "DCXXX"
         "XXVI"
         "MMLXIX"
         "MMCXI"
         "DCXXXVII"
         "MMMMCCCXXXXVIII"
         "MMMMDCLXI"
         "MMMMDCLXXIIII"
         "MMMMVIII"
         "MMMMDCCCLXII"
         "MDCXCI"
         "MMCCCXXIIII"
         "CCCCXXXXV"
         "MMDCCCXXI"
         "MCVI"
         "MMDCCLXVIII"
         "MMMMCXL"
         "MLXVIII"
         "CMXXVII"
         "CCCLV"
         "MDCCLXXXIX"
         "MMMCCCCLXV"
         "MMDCCLXII"
         "MDLXVI"
         "MMMCCCXVIII"
         "MMMMCCLXXXI"
         "MMCXXVII"
         "MMDCCCLXVIII"
         "MMMCXCII"
         "MMMMDCLVIII"
         "MMMMDCCCXXXXII"
         "MMDCCCCLXXXXVI"
         "MDCCXL"
         "MDCCLVII"
         "MMMMDCCCLXXXVI"
         "DCCXXXIII"
         "MMMMDCCCCLXXXV"
         "MMCCXXXXVIII"
         "MMMCCLXXVIII"
         "MMMDCLXXVIII"
         "DCCCI"
         "MMMMLXXXXVIIII"
         "MMMCCCCLXXII"
         "MMCLXXXVII"
         "CCLXVI"
         "MCDXLIII"
         "MMCXXVIII"
         "MDXIV"
         "CCCXCVIII"
         "CLXXVIII"
         "MMCXXXXVIIII"
         "MMMDCLXXXIV"
         "CMLVIII"
         "MCDLIX"
         "MMMMDCCCXXXII"
         "MMMMDCXXXIIII"
         "MDCXXI"
         "MMMDCXLV"
         "MCLXXVIII"
         "MCDXXII"
         "IV"
         "MCDLXXXXIII"
         "MMMMDCCLXV"
         "CCLI"
         "MMMMDCCCXXXVIII"
         "DCLXII"
         "MCCCLXVII"
         "MMMMDCCCXXXVI"
         "MMDCCXLI"
         "MLXI"
         "MMMCDLXVIII"
         "MCCCCXCIII"
         "XXXIII"
         "MMMDCLXIII"
         "MMMMDCL"
         "DCCCXXXXIIII"
         "MMDLVII"
         "DXXXVII"
         "MCCCCXXIIII"
         "MCVII"
         "MMMMDCCXL"
         "MMMMCXXXXIIII"
         "MCCCCXXIV"
         "MMCLXVIII"
         "MMXCIII"
         "MDCCLXXX"
         "MCCCLIIII"
         "MMDCLXXI"
         "MXI"
         "MCMLIV"
         "MMMCCIIII"
         "DCCLXXXVIIII"
         "MDCLIV"
         "MMMDCXIX"
         "CMLXXXI"
         "DCCLXXXVII"
         "XXV"
         "MMMXXXVI"
         "MDVIIII"
         "CLXIII"
         "MMMCDLVIIII"
         "MMCCCCVII"
         "MMMLXX"
         "MXXXXII"
         "MMMMCCCLXVIII"
         "MMDCCCXXVIII"
         "MMMMDCXXXXI"
         "MMMMDCCCXXXXV"
         "MMMXV"
         "MMMMCCXVIIII"
         "MMDCCXIIII"
         "MMMXXVII"
         "MDCCLVIIII"
         "MMCXXIIII"
         "MCCCLXXIV"
         "DCLVIII"
         "MMMLVII"
         "MMMCXLV"
         "MMXCVII"
         "MMMCCCLXXXVII"
         "MMMMCCXXII"
         "DXII"
         "MMMDLV"
         "MCCCLXXVIII"
         "MMMCLIIII"
         "MMMMCLXXXX"
         "MMMCLXXXIIII"
         "MDCXXIII"
         "MMMMCCXVI"
         "MMMMDLXXXIII"
         "MMMDXXXXIII"
         "MMMMCCCCLV"
         "MMMDLXXXI"
         "MMMCCLXXVI"
         "MMMMXX"
         "MMMMDLVI"
         "MCCCCLXXX"
         "MMMXXII"
         "MMXXII"
         "MMDCCCCXXXI"
         "MMMDXXV"
         "MMMDCLXXXVIIII"
         "MMMDLXXXXVII"
         "MDLXIIII"
         "CMXC"
         "MMMXXXVIII"
         "MDLXXXVIII"
         "MCCCLXXVI"
         "MMCDLIX"
         "MMDCCCXVIII"
         "MDCCCXXXXVI"
         "MMMMCMIV"
         "MMMMDCIIII"
         "MMCCXXXV"
         "XXXXVI"
         "MMMMCCXVII"
         "MMCCXXIV"
         "MCMLVIIII"
         "MLXXXIX"
         "MMMMLXXXIX"
         "CLXXXXIX"
         "MMMDCCCCLVIII"
         "MMMMCCLXXIII"
         "MCCCC"
         "DCCCLIX"
         "MMMCCCLXXXII"
         "MMMCCLXVIIII"
         "MCLXXXV"
         "CDLXXXVII"
         "DCVI"
         "MMX"
         "MMCCXIII"
         "MMMMDCXX"
         "MMMMXXVIII"
         "DCCCLXII"
         "MMMMCCCXLIII"
         "MMMMCLXV"
         "DXCI"
         "MMMMCLXXX"
         "MMMDCCXXXXI"
         "MMMMXXXXVI"
         "DCLX"
         "MMMCCCXI"
         "MCCLXXX"
         "MMCDLXXII"
         "DCCLXXI"
         "MMMCCCXXXVI"
         "MCCCCLXXXVIIII"
         "CDLVIII"
         "DCCLVI"
         "MMMMDCXXXVIII"
         "MMCCCLXXXIII"
         "MMMMDCCLXXV"
         "MMMXXXVI"
         "CCCLXXXXIX"
         "CV"
         "CCCCXIII"
         "CCCCXVI"
         "MDCCCLXXXIIII"
         "MMDCCLXXXII"
         "MMMMCCCCLXXXI"
         "MXXV"
         "MMCCCLXXVIIII"
         "MMMCCXII"
         "MMMMCCXXXIII"
         "MMCCCLXXXVI"
         "MMMDCCCLVIIII"
         "MCCXXXVII"
         "MDCLXXV"
         "XXXV"
         "MMDLI"
         "MMMCCXXX"
         "MMMMCXXXXV"
         "CCCCLIX"
         "MMMMDCCCLXXIII"
         "MMCCCXVII"
         "DCCCXVI"
         "MMMCCCXXXXV"
         "MDCCCCXCV"
         "CLXXXI"
         "MMMMDCCLXX"
         "MMMDCCCIII"
         "MMCLXXVII"
         "MMMDCCXXIX"
         "MMDCCCXCIIII"
         "MMMCDXXIIII"
         "MMMMXXVIII"
         "MMMMDCCCCLXVIII"
         "MDCCCXX"
         "MMMMCDXXI"
         "MMMMDLXXXIX"
         "CCXVI"
         "MDVIII"
         "MMCCLXXI"
         "MMMDCCCLXXI"
         "MMMCCCLXXVI"
         "MMCCLXI"
         "MMMMDCCCXXXIV"
         "DLXXXVI"
         "MMMMDXXXII"
         "MMMXXIIII"
         "MMMMCDIV"
         "MMMMCCCXLVIII"
         "MMMMCXXXVIII"
         "MMMCCCLXVI"
         "MDCCXVIII"
         "MMCXX"
         "CCCLIX"
         "MMMMDCCLXXII"
         "MDCCCLXXV"
         "MMMMDCCCXXIV"
         "DCCCXXXXVIII"
         "MMMDCCCCXXXVIIII"
         "MMMMCCXXXV"
         "MDCLXXXIII"
         "MMCCLXXXIV"
         "MCLXXXXIIII"
         "DXXXXIII"
         "MCCCXXXXVIII"
         "MMCLXXIX"
         "MMMMCCLXIV"
         "MXXII"
         "MMMCXIX"
         "MDCXXXVII"
         "MMDCCVI"
         "MCLXXXXVIII"
         "MMMCXVI"
         "MCCCLX"
         "MMMCDX"
         "CCLXVIIII"
         "MMMCCLX"
         "MCXXVIII"
         "LXXXII"
         "MCCCCLXXXI"
         "MMMI"
         "MMMCCCLXIV"
         "MMMCCCXXVIIII"
         "CXXXVIII"
         "MMCCCXX"
         "MMMCCXXVIIII"
         "MCCLXVI"
         "MMMCCCCXXXXVI"
         "MMDCCXCIX"
         "MCMLXXI"
         "MMCCLXVIII"
         "CDLXXXXIII"
         "MMMMDCCXXII"
         "MMMMDCCLXXXVII"
         "MMMDCCLIV"
         "MMCCLXIII"
         "MDXXXVII"
         "DCCXXXIIII"
         "MCII"
         "MMMDCCCLXXI"
         "MMMLXXIII"
         "MDCCCLIII"
         "MMXXXVIII"
         "MDCCXVIIII"
         "MDCCCCXXXVII"
         "MMCCCXVI"
         "MCMXXII"
         "MMMCCCLVIII"
         "MMMMDCCCXX"
         "MCXXIII"
         "MMMDLXI"
         "MMMMDXXII"
         "MDCCCX"
         "MMDXCVIIII"
         "MMMDCCCCVIII"
         "MMMMDCCCCXXXXVI"
         "MMDCCCXXXV"
         "MMCXCIV"
         "MCMLXXXXIII"
         "MMMCCCLXXVI"
         "MMMMDCLXXXV"
         "CMLXIX"
         "DCXCII"
         "MMXXVIII"
         "MMMMCCCXXX"
         "XXXXVIIII"
         ))
  
  
  ;;this dosent work
  (defun pe-parse-roman (roman)
    (cl-loop for i from 0 to (1- (length roman))
             for iv = (substring roman i (1+ i))
             sum
             (cond
              ((equal iv "M") 1000)
              ((equal iv "D") 500)
              ((equal iv "C") 100)
              ((equal iv "L") 50)
              ((equal iv "X") 10)
              ((equal iv "V") 5)
              ((equal iv "I") 1))))
  
  (pe-parse-roman "M")
  (pe-parse-roman "IV")
#+END_SRC
** TODO 92: Square digit chains                                          :PI:
A number chain is created by continuously adding the square of the
digits in a number to form a new number until it has been seen before.

For example,

44 → 32 → 13 → 10 → 1 → 1
85 → 89 → 145 → 42 → 20 → 4 → 16 → 37 → 58 → 89

Therefore any chain that arrives at 1 or 89 will become stuck in an
endless loop. What is most amazing is that EVERY starting number will
eventually arrive at 1 or 89.

How many starting numbers below ten million will arrive at 89?

*** A
seems like i just need to count and see if i wind up in 1 or 89.
specs say that each chain wind up in either.

** TODO 100: Arranged probability                                        :US:
If a box contains twenty-one coloured discs, composed of fifteen blue discs and six red discs, and two discs were taken at random, it can be seen that the probability of taking two blue discs, P(BB) = (15/21)×(14/20) = 1/2.

The next such arrangement, for which there is exactly 50% chance of taking two blue discs at random, is a box containing eighty-five blue discs and thirty-five red discs.

By finding the first arrangement to contain over 1012 = 1,000,000,000,000 discs in total, determine the number of blue discs that the box would contain.
** TODO 102
** TODO 112
** TODO 121: Disc game prize fund                                        :US:
A bag contains one red disc and one blue disc. In a game of chance a player takes a disc at random and its colour is noted. After each turn the disc is returned to the bag, an extra red disc is added, and another disc is taken at random.

The player pays £1 to play and wins if they have taken more blue discs than red discs at the end of the game.

If the game is played for four turns, the probability of a player winning is exactly 11/120, and so the maximum prize fund the banker should allocate for winning in this game would be £10 before they would expect to incur a loss. Note that any payout will be a whole number of pounds and also includes the original £1 paid to play the game, so in the example given the player actually wins £9.

Find the maximum prize fund that should be allocated to a single game in which fifteen turns are played.
** TODO 144: Investigating multiple reflections of a laser beam       :US:FF:

In laser physics, a "white cell" is a mirror system that acts as a delay line for the laser beam. The beam enters the cell, bounces around on the mirrors, and eventually works its way back out.

The specific white cell we will be considering is an ellipse with the equation 4x2 + y2 = 100

The section corresponding to −0.01 ≤ x ≤ +0.01 at the top is missing, allowing the light to enter and exit through the hole.


The light beam in this problem starts at the point (0.0,10.1) just outside the white cell, and the beam first impacts the mirror at (1.4,-9.6).

Each time the laser beam hits the surface of the ellipse, it follows the usual law of reflection "angle of incidence equals angle of reflection." That is, both the incident and reflected beams make the same angle with the normal line at the point of incidence.

In the figure on the left, the red line shows the first two points of contact between the laser beam and the wall of the white cell; the blue line shows the line tangent to the ellipse at the point of incidence of the first bounce.

The slope m of the tangent line at any point (x,y) of the given ellipse is: m = −4x/y

The normal line is perpendicular to this tangent line at the point of incidence.

The animation on the right shows the first 10 reflections of the beam.

How many times does the beam hit the internal surface of the white cell before exiting?

** TODO 169: Exploring the number of different ways a number can be expressed as a sum of powers of 2. :US:
Define f(0)=1 and f(n) to be the number of different ways n can be expressed as a sum of integer powers of 2 using each power no more than twice.

For example, f(10)=5 since there are five different ways to express 10:

1 + 1 + 8
1 + 1 + 4 + 4
1 + 1 + 2 + 2 + 4
2 + 4 + 4
2 + 8

What is f(1025)?
** TODO 206
** TODO 233: Lattice points on a circle                                  :FF:
Let f(N) be the number of points with integer coordinates that are on a circle passing through (0,0), (N,0),(0,N), and (N,N).

It can be shown that f(10000) = 36.

What is the sum of all positive integers N ≤ 1011 such that f(N) = 420 ?

** TODO 243: Resilience                                                  :TT:
A positive fraction whose numerator is less than its denominator is called a proper fraction.
For any denominator, d, there will be d−1 proper fractions; for example, with d = 12:
1/12 , 2/12 , 3/12 , 4/12 , 5/12 , 6/12 , 7/12 , 8/12 , 9/12 , 10/12 , 11/12 .

We shall call a fraction that cannot be cancelled down a resilient fraction.
Furthermore we shall define the resilience of a denominator, R(d), to be the ratio of its proper fractions that are resilient; for example, R(12) = 4/11 .
In fact, d = 12 is the smallest denominator having a resilience R(d) < 4/10 .

Find the smallest denominator d, having a resilience R(d) < 15499/94744 .


